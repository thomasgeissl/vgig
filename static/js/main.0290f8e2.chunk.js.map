{"version":3,"sources":["components/Home.js","libmqtt.ts","mqttConnection.js","constants.js","mqtt.js","utils.js","Context.js","store/reducers/users.js","store/reducers/audioAnalysis.js","store/reducers/mixer.js","store/reducers/chat.js","store/reducers/console.js","store/reducers/rootReducer.js","store/epics/rootEpic.js","store/epics/timeoutAction.js","store/index.js","components/Audience.js","components/Lobby.js","midi.js","components/visualisation/Floor.js","components/visualisation/test.js","components/visualisation/Stage.js","components/visualisation/Visualisation.js","components/visualisation/Lights.js","components/visualisation/PostProcessing.js","components/Orchestra.js","components/Button.js","components/Section.js","components/Interactions.js","components/Slider.js","components/Mixer.js","components/Chat.js","components/Hall.js","theme.js","App.js","serviceWorker.js","index.js","assets/enter.mp3","assets/instruments/1.mp3","assets/instruments/2.mp3","assets/instruments/3.mp3","assets/instruments/4.mp3","assets/instruments/5.mp3","assets/instruments/6.mp3","assets/instruments/7.mp3","assets/instruments/8.mp3","assets/instruments/9.mp3","assets/instruments/10.mp3","assets/instruments/11.mp3","assets/instruments/12.mp3","assets/instruments/13.mp3","assets/instruments/14.mp3","assets/instruments/15.mp3","assets/instruments/16.mp3","assets/interactions/1.mp3","assets/interactions/2.mp3","assets/interactions/3.mp3","assets/interactions/4.mp3","assets/interactions/5.mp3","assets/interactions/6.mp3","assets/interactions/7.mp3","assets/interactions/8.mp3"],"names":["version","Container","styled","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","onClick","context","state","resume","push","isWildcardTopic","topic","includes","useClient","options","client","connect","listeners","Map","on","console","log","error","messageTopic","message","forEach","listenersForTopic","wildcard","res","t","String","split","w","lt","slice","join","topicMatchesMQTTWildcard","listener","JSON","parse","toString","subscribe","fn","currentListeners","get","set","Error","publish","payload","stringify","unsubscribe","delete","getClient","getSubscriptions","createConnection","NAME","mqtt","Context","React","createContext","Provider","children","userId","setState","types","defaultState","users","heartBeats","energyHistory","volumeInteractions","volumeStage","glitch","messages","addToHistory","user","text","type","appReducer","combineReducers","audioAnalysis","action","unshift","splice","Date","now","key","indexToBeRemoved","index","id","item","userAlreadyExists","sort","x","y","name","currentAction","mixer","chat","time","combineEpics","action$","pipe","filter","map","delay","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","run","rootEpic","dispatch","actions","config","Users","User","color","props","active","useDispatch","useContext","subscribed","setSubscribed","useSelector","useEffect","from","getState","addUser","setInterval","Tooltip","title","placement","Actions","EnterButton","Button","onEnter","setName","fullWidth","label","onKeyPress","hallId","variant","status","rotation","PI","position","attach","args","geom","BoxBufferGeometry","matr","MeshNormalMaterial","rpi","Block","change","e","performance","geometry","Blocks","changeBlocks","handler","clearInterval","viewport","useThree","factor","width","height","size","Array","fill","_","left","top","scale","Box","mesh","useRef","coords","useFrame","current","ref","material","AnimatedSpikes","Particle","analyser","testTextRef","particles","setParticles","particleRefs","setParticleRefs","createRef","values","getValue","sum","Text","anchorX","anchorY","cube","Floor","Stage","intensity","focusDistance","focalLength","bokehScale","luminanceThreshold","luminanceSmoothing","opacity","eskil","offset","darkness","duration","strength","mode","GlitchMode","SPORADIC","ratio","samples","Sample1","Sample2","Sample3","Sample4","Sample5","Sample6","Sample7","Sample8","Sample9","Sample10","Sample11","Sample12","Sample13","Sample14","Sample15","Sample16","channel","setChannel","instruments","setInstruments","setAnalyser","volume","Channel","Destination","sample","Sampler","C3","attack","release","Analyser","note","velocity","statusTypes","triggerAttack","triggerRelease","style","background","camera","fov","colorManagement","Lights","Visualisation","PostProcessing","RoundButton","button","borderColor","css","Label","span","Title","Content","onClose","volumeNode","Volume","sfx","setSfx","enter","setEnter","leave","setLeave","EnterSample","triggerAttackRelease","round","logText","setCurrentAction","Section","Grid","container","xs","SliderContainer","StyledSlider","Slider","min","max","orientation","stageVolume","interactionsVolume","defaultValue","setVolumeStage","setVolumeInteractions","Input","StyledModal","Modal","ModalContent","StyledChat","setMessage","showChatMessages","setShowChatMessages","showSystemMessages","setShowSystemMessages","allMessages","List","ul","ChatMessage","li","SystemMessage","FormControlLabel","control","Switch","checked","shiftKey","preventDefault","useParams","setContext","open","setOpen","showConsole","setShowConsole","AppBar","backgroundColor","Toolbar","IconButton","Lobby","Orchestra","Audience","sm","Interactions","Mixer","createMuiTheme","palette","primary","main","secondary","overrides","MuiSlider","thumb","track","rail","App","ThemeProvider","theme","path","Hall","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.0290f8e2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {context} from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\nconst version = pc.version;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vgig,<br></br>the virtual concert hall for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (context.state !== \"running\") {\n                context.resume();\n              }\n              history.push(`/halls/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};","import { connect, MqttClient } from \"mqtt\"\n\nconst isWildcardTopic = (topic: string) =>\n    topic.includes(\"#\") || topic.includes(\"+\")\nexport default function topicMatchesMQTTWildcard(\n    topic: string,\n    wildcard: string\n) {\n    if (topic === wildcard) {\n        return []\n    } else if (wildcard === \"#\") {\n        return [topic]\n    }\n\n    let res = []\n\n    let t = String(topic).split(\"/\")\n    let w = String(wildcard).split(\"/\")\n\n    let i = 0\n    for (let lt = t.length; i < lt; i++) {\n        if (w[i] === \"+\") {\n            res.push(t[i])\n        } else if (w[i] === \"#\") {\n            res.push(t.slice(i).join(\"/\"))\n            return res\n        } else if (w[i] !== t[i]) {\n            return null\n        }\n    }\n\n    if (w[i] === \"#\") {\n        i += 1\n    }\n\n    return i === w.length ? res : null\n}\n\ninterface Client {\n    subscribe(topic: string, fn: Function): void\n    publish(topic: string, payload: string | number | object): void\n    publish(topic: string): void\n    unsubscribe(topic: string): void\n    getClient(): MqttClient\n    getSubscriptions(): Map<string, Array<Function>> \n}\n\nexport function createConnection(options: string) {\n    let client = connect(options)\n    let listeners: Map<string, Array<Function>> = new Map()\n\n    client.on(\"connect\", console.log)\n    client.on(\"disconnect\", console.log)\n    client.on(\"error\", console.error)\n\n    client.on(\"message\", (messageTopic, message) => {\n        listeners.forEach((listenersForTopic, topic) => {\n            if (\n                messageTopic === topic ||\n                (isWildcardTopic(topic) &&\n                    topicMatchesMQTTWildcard(messageTopic, topic))\n            ) {\n                listenersForTopic.forEach(listener => {\n                    try {\n                        listener(topic, JSON.parse(message.toString()))\n                    } catch (error) {\n                        listener(topic, {})\n                    }\n                })\n            }\n        })\n    })\n\n    return function useClient(): Client {\n        return {\n            subscribe: (topic: string, fn: Function) => {\n                        let currentListeners = listeners.get(topic)\n                        listeners.set(topic, [...(currentListeners || []), fn])\n    \n                        // if (!currentListeners) {\n                            client.subscribe(topic)\n                        // }\n                        \n                        let newListeners = listeners.get(topic)// ? listeners.get(topic) : []\n                        if(!newListeners) {\n                            throw new Error(\n                                `useClient: ${topic} does not exist`\n                            )\n                        }\n                        // newListeners = newListeners.filter((f) => f !== fn)\n\n                        // if (newListeners.length > 0) {\n                        //     listeners.set(topic, newListeners)\n                        // } else {\n                        //     listeners.delete(topic)\n                        //     client.unsubscribe(topic)\n                        // }\n                    // }\n            },\n            publish: (\n                topic: string,\n                payload?: string | number | object\n            ) => {\n                // client.subscribe(topic)\n                if (isWildcardTopic(topic)) {\n                    throw new Error(\n                        `useTopic: Tried publishing on wildcard topic ${topic}`\n                    )\n                } else {\n                    client.publish(topic, JSON.stringify(payload))\n                }\n            },\n            unsubscribe: (\n                topic: string\n            ) => {\n                listeners.delete(topic)\n                client.unsubscribe(topic)\n            },\n            getClient: () => client,\n            getSubscriptions: () => listeners\n        }\n    }\n}\n","import { createConnection } from \"./libmqtt\";\n\n// export const useClient = createConnection({\n//     protocol: \"wss\",\n//     username: \"try\",\n//     password: \"try\",\n//     host: \"broker.shiftr.io\",\n//     port: 80,\n// })\n// export const useClient = createConnection({\n//     protocol: \"ws\",\n//     host: \"localhost\",\n//     port: 9001,\n// })\n\nexport const useClient = createConnection(\"wss://try:try@broker.shiftr.io\");\n// export const useClient = createConnection(\n//   \"ws://audience:audience@localhost:9001\"\n// );\n// export const useClient = createConnection(\n//   \"ws://audience:audience@162.243.174.205:8080\"\n// );\n","const NAME = \"vgig\"\nexport {NAME} ","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n\nconst publish = (topic, payload) => {\n    client.publish(topic, JSON.stringify(payload))\n}\n\nexport {publish}","const generateId = (length) => {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  export {generateId}","import React, {useState} from \"react\"\nimport {generateId} from \"./utils\"\nconst Context = React.createContext();\n\nconst Provider = ({children}) => {\n    const [state, setState] = useState({userId: generateId(8)});\n    return (\n        <Context.Provider value={[state, setState]}>\n            {children}\n        </Context.Provider>\n\n    )\n}\nexport default Context\nexport {Provider} ","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  HEARTBEAT: \"HEARTBEAT\",\n  SETNAME: \"SETNAME\",\n  SETCURRENTACTION: \"SETCURRENTACTION\",\n  UNSETCURRENTACTION: \"UNSETCURRENTACTION\",\n};\n\nconst defaultState = {\n  users: [], //all users\n  heartBeats: new Map(),\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 60 * 1000) {\n          console.log(\"user seems to be dead\", key);\n          // delete from heartbeats map\n          heartBeats.delete(key);\n          // delete from users array\n          let indexToBeRemoved = -1;\n          users.forEach((user, index) => {\n            if (user.id === key) {\n              indexToBeRemoved = index;\n            }\n          });\n          if (indexToBeRemoved !== -1) {\n            users.splice(indexToBeRemoved, 1);\n          }\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      let users = [...state.users];\n      action.payload.value.forEach((item) => {\n        let userAlreadyExists = false;\n        users.forEach((user) => {\n          if (user.id === item.id) {\n            userAlreadyExists = true;\n          }\n        });\n        if (!userAlreadyExists) users.push(item);\n      });\n\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      let userAlreadyExists = false;\n      users.forEach((user) => {\n        if (user.id === action.payload.id) {\n          userAlreadyExists = true;\n        }\n      });\n      if (!userAlreadyExists)\n        users.push({ id: action.payload.id, name: action.payload.name });\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.SETNAME: {\n      let users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].name = action.payload.name;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.SETCURRENTACTION: {\n      const users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].currentAction = action.payload.action;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.UNSETCURRENTACTION: {\n      const users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].currentAction = \"\";\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (id, name) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (id, name) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\nexport const setCurrentAction = (id, action) => {\n  return {\n    type: types.SETCURRENTACTION,\n    payload: {\n      id,\n      action,\n    },\n  };\n};\nexport const unSetCurrentAction = (id) => {\n  return {\n    type: types.UNSETCURRENTACTION,\n    payload: {\n      id,\n    },\n  };\n};\nexport { types };\n","const types = {\n  SETENERGY: \"SETENERGY\",\n};\n\nconst defaultState = {\n  energyHistory: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETENERGY: {\n      const energyHistory = [...state.energyHistory];\n      energyHistory.unshift(action.payload.value);\n      energyHistory.splice(100, energyHistory.length - 100);\n      return {\n        ...state,\n        energyHistory,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","const types = {\n  SETVOLUMEINTERACTIONS: \"SETVOLUMEINTERACTIONS\",\n  SETVOLUMESTAGE: \"SETVOLUMESTAGE\",\n  SETGLITCH: \"SETGLITCH\",\n};\n\nconst defaultState = {\n  volumeInteractions: -6,\n  volumeStage: 0,\n  glitch: true,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETVOLUMEINTERACTIONS: {\n      return {\n        ...state,\n        volumeInteractions: action.payload.value,\n      };\n    }\n    case types.SETVOLUMESTAGE: {\n      return {\n        ...state,\n        volumeStage: action.payload.value,\n      };\n    }\n    case types.SETGLITCH: {\n      return {\n        ...state,\n        glitch: action.payload.value,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setVolumeInteractions = (value) => {\n  return {\n    type: types.SETVOLUMEINTERACTIONS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setVolumeStage = (value) => {\n  return {\n    type: types.SETVOLUMESTAGE,\n    payload: {\n      value,\n    },\n  };\n};\n\nexport const setGlitch = (value) => {\n  return {\n    type: types.SETGLITCH,\n    payload: {\n      value,\n    },\n  };\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift({\n        ...action.payload.message,\n        time: new Date(),\n        type: \"CHAT\",\n      });\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (user, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        user,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","const types = {\n  ADDTOHISTORY: \"ADDTOHISTORY\",\n};\n\nconst defaultState = {\n  history: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDTOHISTORY: {\n      let history = [...state.history];\n      history.unshift({\n        ...action.payload,\n        time: new Date(),\n        type: \"SYSTEM\",\n      });\n      history = history.slice(0, 1000);\n      return {\n        ...state,\n        history,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst addToHistory = (user, text) => {\n  return {\n    type: types.ADDTOHISTORY,\n    payload: {\n      user,\n      text,\n    },\n  };\n};\nexport { addToHistory };\n","import { combineReducers } from \"redux\";\n\nimport audioAnalysis from \"./audioAnalysis\";\nimport users from \"./users\";\nimport mixer from \"./mixer\";\nimport chat from \"./chat\";\nimport console from \"./console\";\n\nconst appReducer = combineReducers({\n  audioAnalysis,\n  users,\n  mixer,\n  chat,\n  console,\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { combineEpics } from \"redux-observable\";\nimport timeoutAction from \"./timeoutAction\";\n\nexport default combineEpics(timeoutAction);\n","import { filter, map, delay } from \"rxjs/operators\";\nimport { types, unSetCurrentAction } from \"../reducers/users\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === types.SETCURRENTACTION),\n    map((action) => unSetCurrentAction(action.payload.id)),\n    delay(100)\n  );\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport { publish } from \"../mqtt\";\nimport Context from \"../Context\";\n\nimport { addUser, setUsers, heartBeat } from \"../store/reducers/users\";\nimport store from \"../store\";\nimport config from \"../config/config.json\";\nconst actions = config.actions;\n\nconst Container = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst Users = styled.div`\n  text-align: left;\n`;\nconst User = styled.div`\n  height: 25px;\n  width: 25px;\n  background-color: ${({ action }) => {\n    let color = \"rgb(64,64,64)\";\n    actions.forEach((item) => {\n      if (item.id === action) {\n        color = item.color;\n      }\n    });\n    return `${color}`;\n  }};\n  /* background-color: ${(props) =>\n    props.active ? \"rgb(255,170,100)\" : \"rgb(254, 250, 170)\"}; */\n  border-radius: 50%;\n  display: inline-block;\n  margin: 5px;\n  /* border: ${({ action }) => {\n    let color = \"black\";\n    actions.forEach((item) => {\n      if (item.id === action) {\n        color = item.color;\n      }\n    });\n    return `solid 3px ${color}`;\n  }}; */\n`;\n\n// const Sphere = ({position, color}) => {\n//   return (\n//     <mesh visible userData={{ test: \"hello\" }} position={position} castShadow>\n//       <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n//       <meshStandardMaterial attach=\"material\" color={color}        transparent        roughness={0.1}        metalness={0.1}      />\n//     </mesh>\n//     );\n// }\n\nexport default ({ id }) => {\n  const dispatch = useDispatch();\n  const { subscribe, unsubscribe } = useClient();\n  const [context] = useContext(Context);\n  const [subscribed, setSubscribed] = useState(false);\n  const users = useSelector((state) => state.users.users);\n\n  useEffect(\n    () => {\n      if (subscribed) return;\n      setSubscribed(true);\n      if (id) {\n        console.log(\"subscribing to audience topics\");\n        subscribe(`${NAME}/${id}/audience/getUsers`, (topic, message) => {\n          if (message.from && message.from !== context.userId) {\n            publish(\n              `${NAME}/${id}/audience/setUsers`,\n              store.getState().users.users\n            );\n          }\n        });\n        subscribe(`${NAME}/${id}/audience/setUsers`, (topic, message) => {\n          dispatch(setUsers(message));\n        });\n        subscribe(`${NAME}/${id}/audience/enterLobby`, (topic, message) => {\n          dispatch(addUser(message.userId, \"anonymous \"));\n        });\n\n        subscribe(`${NAME}/${id}/audience/alive`, (topic, message) => {\n          dispatch(heartBeat(message.userId));\n        });\n\n        publish(`${NAME}/${id}/audience/getUsers`, { from: context.userId });\n        setInterval(() => {\n          publish(`${NAME}/${id}/alive`, { userId: context.userId });\n        }, 30 * 1000);\n      }\n    },\n    [subscribed, setSubscribed, id, subscribe, dispatch, context],\n    () => {\n      unsubscribe(`${NAME}/${id}/audience/getUsers`);\n    }\n  );\n  return (\n    <Container>\n      {/* <Section title={\"audience\"} color={\"rgb(46, 94, 160)\"}> */}\n      <Users>\n        {users.map((user, index) => {\n          // const position = [(index / users.length) * 50, 0, 0];\n          return (\n            <Tooltip key={user.id} title={user.name} placement=\"right-start\">\n              <User\n                key={user.id}\n                active={context.userId === user.id}\n                action={user.currentAction}\n              >\n                {/* {user} */}\n              </User>\n            </Tooltip>\n          );\n        })}\n      </Users>\n      {/* </Section> */}\n    </Container>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport Context from \"../Context\";\n\nconst Container = styled.div``;\nconst Actions = styled.section`\n  margin-top: 24px !important;\n  display: flex;\n  flex-direction: row-reverse;\n`;\nconst EnterButton = styled(Button)``;\n\nexport default ({ onEnter }) => {\n  const { publish } = useClient();\n  const [name, setName] = useState(\"\");\n  const [context] = useContext(Context);\n  return (\n    <Container>\n      <div>\n        hello, <br></br>please enter your name and enjoy the show.\n      </div>\n      <TextField\n        fullWidth\n        label=\"name\"\n        value={name}\n        onChange={(event) => {\n          setName(event.target.value);\n        }}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\" && name !== \"\") {\n            publish(`${NAME}/${context.hallId}/audience/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }\n        }}\n      ></TextField>\n      <br></br>\n\n      <Actions>\n        <EnterButton\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => {\n            if (name === \"\") return;\n            publish(`${NAME}/${context.hallId}/audience/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }}\n        >\n          enter\n        </EnterButton>\n      </Actions>\n    </Container>\n  );\n};\n","const status = {\n    noteOn: 144,\n    noteOff: 128\n}\nconst createNoteOnMessage = (channel, note, vel) => {\n    return {\n        channel,\n        status: status.noteOn,\n        note,\n        velocity: vel ? vel : 127\n    }\n}\nexport {createNoteOnMessage, status}","import React from \"react\";\n\nexport default () => {\n  return (\n    <>\n      <mesh rotation={[-Math.PI / 3, 0, 0]} position={[0, 0, 0]}>\n        {/* <mesh> */}\n        <planeBufferGeometry\n          attach=\"geometry\"\n          args={[100, 100]}\n        ></planeBufferGeometry>\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"rgb(64,32,32)\"\n        ></meshStandardMaterial>\n      </mesh>\n    </>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { BoxBufferGeometry, MeshNormalMaterial } from \"three\";\nimport { useFrame, useThree } from \"react-three-fiber\";\n\nconst SLOWDOWN = 1;\nconst ROW = 20;\nconst BLOCK_AMOUNT = 600;\nconst SPIKE_AMOUNT = 1000;\nconst geom = new BoxBufferGeometry(1, 1, 1);\nconst matr = new MeshNormalMaterial();\nconst rpi = () => Math.random() * Math.PI;\n\nfunction Block({ change, ...props }) {\n  const [color] = useState(0);\n\n  // Artificial slowdown ...\n  if (color > 0) {\n    const e = performance.now() + SLOWDOWN;\n    while (performance.now() < e) {}\n  }\n\n  //   useEffect(() => {\n  //     if (change)\n  //       setTimeout(\n  //         () => run(low, () => set(Math.round(Math.random() * 0xffffff))),\n  //         Math.random() * 1000\n  //       );\n  //   }, [change]);\n\n  return (\n    <mesh {...props} geometry={geom}>\n      <meshBasicMaterial attach=\"material\" color={color} />\n    </mesh>\n  );\n}\n\nfunction Blocks() {\n  const [changeBlocks, set] = useState(false);\n  useEffect(() => {\n    const handler = setInterval(() => set((state) => !state), 2000);\n    return () => clearInterval(handler);\n  });\n\n  const { viewport } = useThree();\n  const { width, height } = viewport().factor;\n  const size = width / 100 / ROW;\n  return new Array(BLOCK_AMOUNT).fill().map((_, i) => {\n    const left = -width / 100 / 2 + size / 2;\n    const top = height / 100 / 2 - size / 2;\n    const x = (i % ROW) * size;\n    const y = Math.floor(i / ROW) * -size;\n    return (\n      <Block\n        key={i}\n        change={changeBlocks}\n        scale={[size, size, size]}\n        position={[left + x, top + y, 0]}\n      />\n    );\n  });\n}\n\nfunction Box() {\n  let t = 0;\n  const mesh = useRef();\n  const [coords] = useState(() => [rpi(), rpi(), rpi()]);\n  useFrame(\n    () =>\n      mesh.current &&\n      mesh.current.rotation.set(\n        coords[0] + (t += 0.01),\n        coords[1] + t,\n        coords[2] + t\n      )\n  );\n  return <mesh ref={mesh} geometry={geom} material={matr} scale={[2, 2, 2]} />;\n}\n\nfunction AnimatedSpikes() {\n  return new Array(SPIKE_AMOUNT).fill().map((_, i) => <Box key={i} />);\n}\n\nexport default () => {\n  return (\n    <>\n      <Blocks />\n      <AnimatedSpikes />\n    </>\n  );\n};\n","import React from \"react\";\nimport Test from \"./test\";\nexport default () => {\n  return (\n    <>\n      <Test></Test>\n    </>\n  );\n};\n","import React, { useState, useEffect, useRef, createRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { Text } from \"@react-three/drei/Text\";\n\nimport Floor from \"./Floor\";\nimport Stage from \"./Stage\";\n\nconst Particle = ({ position }) => {\n  const mesh = useRef(null);\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n    // console.log(\"new frame\", analyzer.getValue())\n  });\n  return (\n    <mesh position={position} ref={mesh}>\n      <boxBufferGeometry\n        attach=\"geometry\"\n        args={[0.01, 0.01, 0.01]}\n      ></boxBufferGeometry>\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"lightblue\"\n      ></meshStandardMaterial>\n    </mesh>\n  );\n};\n\nexport default ({ analyser }) => {\n  const testTextRef = useRef(null);\n  const [particles, setParticles] = useState([]);\n  const [particleRefs, setParticleRefs] = useState([]);\n\n  useEffect(() => {\n    const particleRefs = Array(1024).fill(createRef());\n    // particleRefs.forEach((particleRef, index)=>{\n    //   particleRefs[index]\n\n    // })\n    // particleRefs.map((_, i) => createRef());\n    // console.log(particleRefs);\n\n    const particles = [...Array(1024)].map((item, index) => {\n      const x = (index / 1024) * 600 - 300; // -halfWidth\n      return (\n        <Particle\n          key={index}\n          position={[x, 0, 5]}\n          ref={particleRefs[index]}\n        ></Particle>\n      );\n    });\n\n    setParticleRefs(particleRefs);\n    setParticles(particles);\n  }, []);\n\n  useFrame(() => {\n    const values = analyser.getValue();\n    if (testTextRef.current) {\n      let sum = 0;\n      values.forEach((value) => (sum += value));\n      testTextRef.current.scale.x = sum / 1024;\n    }\n    // console.log(particleRefs[0].current);\n    particleRefs.forEach((ref, index) => {\n      if (ref) {\n        // console.log(\"update particle\", ref, index);\n        // ref.current.scale.y = values[index] * 1000;\n      }\n    });\n  });\n\n  return (\n    <>\n      <Text\n        ref={testTextRef}\n        color=\"white\" // default\n        anchorX=\"center\" // default\n        anchorY=\"middle\" // default\n      >\n        here will be an audio visualisation\n      </Text>\n\n      <Text\n        color=\"purple\" // default\n        anchorX=\"center\" // default\n        anchorY=\"center\" // default\n        position={[-20, 2, 0]}\n      >\n        WSTG\n      </Text>\n      {particles.map((cube) => {\n        return cube;\n      })}\n\n      <Floor></Floor>\n      <Stage></Stage>\n      {/* <Particle position={[-2, 0, 0]}></Particle>\n      <Particle position={[-1, 2, 0]}></Particle>\n      <Particle position={[2, 3, 0]}></Particle> */}\n      <mesh>\n        <bufferGeometry></bufferGeometry>\n      </mesh>\n\n      {/* <Lines count={fftValues.length} colors={['rgb(100,0,0)', '#222', '#aaa', '#e0feff', 'rgb(100,0,60)', 'rgb(127,32,64)']} /> */}\n      {\n        // fftValues.forEach((value, index) => {\n        //     console.log(value, index)\n        // })\n      }\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <>\n      <ambientLight intensity={1}></ambientLight>\n      <pointLight position={[-10, -10, 5]} intensity={13.6}></pointLight>\n      <pointLight position={[7, -15, 5]} intensity={12.8}></pointLight>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  EffectComposer,\n  DepthOfField,\n  Bloom,\n  Noise,\n  Vignette,\n  Glitch,\n} from \"@react-three/postprocessing\";\nimport { GlitchMode } from \"postprocessing\";\n\nexport default () => {\n  const glitch = useSelector((state) => state.mixer.glitch);\n  return (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={0.02}\n        bokehScale={2}\n        height={480}\n      />\n      <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n      <Noise opacity={0.05} />\n      <Vignette eskil={false} offset={0.1} darkness={1.1} />\n      <Glitch\n        delay={[1.5, 10.5]} // min and max glitch delay\n        duration={[0.05, 0.4]} // min and max glitch duration\n        strength={[0.002, 0.02]} // min and max glitch strength\n        mode={GlitchMode.SPORADIC} // glitch mode\n        ratio={0.48} // Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\n        active={glitch}\n      />\n    </EffectComposer>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Provider as StoreProvider, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Analyser, Destination, Sampler, Channel, now } from \"tone\";\nimport { status as statusTypes } from \"../midi\";\nimport Visualisation from \"./visualisation/Visualisation\";\nimport Lights from \"./visualisation/Lights\";\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls } from \"drei\";\nimport { useClient } from \"../mqttConnection\";\n\nimport PostProcessing from \"./visualisation/PostProcessing\";\nimport { NAME } from \"../constants\";\nimport store from \"../store\";\n\nimport Sample1 from \"../assets/instruments/1.mp3\";\nimport Sample2 from \"../assets/instruments/2.mp3\";\nimport Sample3 from \"../assets/instruments/3.mp3\";\nimport Sample4 from \"../assets/instruments/4.mp3\";\nimport Sample5 from \"../assets/instruments/5.mp3\";\nimport Sample6 from \"../assets/instruments/6.mp3\";\nimport Sample7 from \"../assets/instruments/7.mp3\";\nimport Sample8 from \"../assets/instruments/8.mp3\";\nimport Sample9 from \"../assets/instruments/9.mp3\";\nimport Sample10 from \"../assets/instruments/10.mp3\";\nimport Sample11 from \"../assets/instruments/11.mp3\";\nimport Sample12 from \"../assets/instruments/12.mp3\";\nimport Sample13 from \"../assets/instruments/13.mp3\";\nimport Sample14 from \"../assets/instruments/14.mp3\";\nimport Sample15 from \"../assets/instruments/15.mp3\";\nimport Sample16 from \"../assets/instruments/16.mp3\";\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n  Sample9,\n  Sample10,\n  Sample11,\n  Sample12,\n  Sample13,\n  Sample14,\n  Sample15,\n  Sample16,\n];\n\nconst Container = styled.div`\n  width: 100%;\n  height: 66.66%;\n`;\n\nexport default ({ id }) => {\n  const [channel, setChannel] = useState(null);\n  const [instruments, setInstruments] = useState(null);\n  const [analyser, setAnalyser] = useState(null);\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { subscribe } = useClient();\n  const volume = useSelector((state) => state.mixer.volumeStage);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const channel = new Channel(-32);\n    channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].attack = 0;\n      instruments[index].release = 1.3;\n      instruments[index].connect(channel);\n    });\n    setChannel(channel);\n    setInstruments(instruments);\n\n    const analyser = new Analyser(\"fft\", 1024);\n    channel.connect(analyser);\n    setAnalyser(analyser);\n  }, []);\n\n  useEffect(() => {\n    if (!id || !instruments || subscribed) return;\n    console.log(\"subscribing to orchestra topics\");\n    setSubscribed(true);\n    subscribe(`${NAME}/${id}/orchestra`, (topic, message) => {\n      const { channel, note, status, velocity } = message;\n      if (channel && channel > 0 && channel <= 16) {\n        if (status === statusTypes.noteOn) {\n          instruments[channel - 1].triggerAttack(note, now(), velocity / 127);\n        }\n        if (status === statusTypes.noteOff) {\n          instruments[channel - 1].triggerRelease(note, now());\n        }\n      }\n    });\n  }, [instruments, subscribed, id, subscribe]);\n\n  // useFrame((state) => {\n  //   console.log(\"frame\", state);\n  //   // console.log(analyser.getValue());\n  // });\n  return (\n    <Container>\n      <Canvas\n        style={{ background: \"rgb(0,0,0)\" }}\n        camera={{ position: [0, 0, 10], fov: 45 }}\n        colorManagement\n      >\n        <OrbitControls></OrbitControls>\n        <Lights></Lights>\n\n        <Visualisation analyser={analyser}></Visualisation>\n        <StoreProvider store={store}>\n          <PostProcessing></PostProcessing>\n        </StoreProvider>\n      </Canvas>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  /* border: 1px dashed white; */\n`;\n\nconst RoundButton = styled.button`\n  /* background-color: rgba(254, 250, 170, 1); */\n  background-color: rgb(255, 170, 100);\n  color: white;\n  height: 32px;\n  width: 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 5px;\n  /* border-radius: 50%; */\n  border: none;\n  ${({ borderColor }) =>\n    borderColor &&\n    css`\n      /* border: 3px solid ${borderColor}; */\n      background-color: ${borderColor};\n    `}\n`;\nconst Label = styled.span`\n  color: white;\n`;\n\nconst Button = ({ label, borderColor, onClick }) => {\n  return (\n    <Container>\n      <RoundButton onClick={onClick} borderColor={borderColor}></RoundButton>\n      <br></br>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  ${(props) =>\n    props.color &&\n    css`\n      border-bottom: 3px solid ${props.color};\n      border-left: 1px solid white;\n      border-right: 1px solid white;\n    `}\n`;\nconst Title = styled.div`\n  width: 100%;\n  text-transform: uppercase;\n  color: white;\n  text-align: center;\n  ${(props) =>\n    props.color &&\n    css`\n      background-color: ${props.color};\n    `}\n`;\nconst Content = styled.div`\n  flex-grow: 1;\n`;\n\nexport default ({ title, color, children, onClose }) => {\n  return (\n    <Container color={color}>\n      <Title color={color}>{title}</Title>\n      <Content>{children}</Content>\n      {onClose && (\n        <CloseIcon\n          color={\"white\"}\n          onClick={onClose}\n          style={{ position: \"absolute\", left: \"5px\" }}\n        ></CloseIcon>\n      )}\n    </Container>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport { Sampler, Channel, Volume, Destination } from \"tone\";\n\nimport Context from \"../Context\";\n\nimport Sample1 from \"../assets/interactions/1.mp3\";\nimport Sample2 from \"../assets/interactions/2.mp3\";\nimport Sample3 from \"../assets/interactions/3.mp3\";\nimport Sample4 from \"../assets/interactions/4.mp3\";\nimport Sample5 from \"../assets/interactions/5.mp3\";\nimport Sample6 from \"../assets/interactions/6.mp3\";\nimport Sample7 from \"../assets/interactions/7.mp3\";\nimport Sample8 from \"../assets/interactions/8.mp3\";\nimport EnterSample from \"../assets/enter.mp3\";\n\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setCurrentAction } from \"../store/reducers/users\";\nimport { addToHistory } from \"../store/reducers/console\";\n\nimport Button from \"./Button\";\nimport Section from \"./Section\";\nimport config from \"../config/config.json\";\n\nconst actions = config.actions;\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n];\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst channel = new Channel(-32);\nconst volumeNode = new Volume(0);\nchannel.connect(volumeNode);\nvolumeNode.connect(Destination);\n\nexport default () => {\n  const [context] = useContext(Context);\n  const { subscribe, publish } = useClient();\n  const [channel, setChannel] = useState(null);\n  const [sfx, setSfx] = useState(null);\n  const [enter, setEnter] = useState(null);\n  const [leave, setLeave] = useState(null);\n\n  const dispatch = useDispatch();\n  const volume = useSelector((state) => state.mixer.volumeInteractions);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const channel = new Channel(-32);\n    channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].attack = 0;\n      instruments[index].release = 1.3;\n      instruments[index].connect(channel);\n    });\n    setChannel(channel);\n    setSfx(instruments);\n\n    const enter = new Sampler({ C3: EnterSample });\n    enter.connect(channel);\n    setEnter(enter);\n\n    const leave = new Sampler({ C3: EnterSample });\n    leave.connect(channel);\n    setLeave(leave);\n  }, []);\n\n  useEffect(() => {\n    if (!context.hallId || !enter || !leave || !sfx) return;\n    subscribe(`${NAME}/${context.hallId}/audience/enter`, (topic, message) => {\n      enter.triggerAttackRelease(\"C3\", 20);\n      dispatch(addToHistory(message.userId, \"entered.\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/audience/leave`, (topic, message) => {\n      leave.triggerAttackRelease(\"C3\", 20);\n      dispatch(addToHistory(message.userId, \"left.\"));\n    });\n    actions.forEach((action, index) => {\n      subscribe(\n        `${NAME}/${context.hallId}/audience/${action.id}`,\n        (topic, message) => {\n          sfx[index].triggerAttackRelease(\n            40 + Math.round(Math.random() * 60),\n            20\n          );\n          dispatch(addToHistory(message.userId, action.logText));\n          dispatch(setCurrentAction(message.userId, action.id));\n        }\n      );\n    });\n  }, [context.hallId, dispatch, enter, leave, sfx, subscribe]);\n\n  return (\n    <Container>\n      <Section title={\"actions\"} color={\"rgb(46, 94, 160)\"}>\n        <Grid container>\n          {actions.map((action, index) => {\n            return (\n              <Grid item xs={3} key={index}>\n                <Button\n                  key={action.id}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  borderColor={action.color}\n                  onClick={() => {\n                    publish(`${NAME}/${context.hallId}/audience/${action.id}`, {\n                      userId: context.userId,\n                    });\n                  }}\n                  label={action.label}\n                ></Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Section>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 100%;\n  justify-content: center;\n`;\n\nconst SliderContainer = styled.div`\n  width: 100%;\n  text-align: center;\n`;\nconst StyledSlider = styled(Slider)`\n  height: 50px !important;\n`;\n\nconst Label = styled.div`\n  color: white;\n  margin-top: 5px;\n`;\n\nexport default ({ value, onChange, min, max, label }) => {\n  return (\n    <Container>\n      <SliderContainer>\n        <StyledSlider\n          orientation=\"vertical\"\n          //   getAriaValueText={valuetext}\n          min={min}\n          max={max}\n          value={value}\n          onChange={onChange}\n        />\n      </SliderContainer>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"./Slider\";\nimport styled from \"styled-components\";\n\nimport {\n  setVolumeInteractions,\n  setVolumeStage,\n  setGlitch,\n} from \"../store/reducers/mixer\";\nimport Section from \"./Section\";\nimport Button from \"./Button\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nconst SliderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const stageVolume = useSelector((state) => state.mixer.volumeStage);\n  const interactionsVolume = useSelector(\n    (state) => state.mixer.volumeInteractions\n  );\n  const glitch = useSelector((state) => state.mixer.glitch);\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={6}>\n          <Section title={\"light\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    dispatch(setGlitch(!glitch));\n                  }}\n                  label={\"glitch\"}\n                ></Button>\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n        <Grid item xs={6}>\n          <Section title={\"audio\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container style={{ height: \"100%\" }}>\n              <Grid item xs={6}>\n                <SliderContainer>\n                  <Slider\n                    orientation=\"vertical\"\n                    //   getAriaValueText={valuetext}\n                    defaultValue={-100}\n                    min={-32}\n                    max={0}\n                    value={stageVolume}\n                    onChange={(event, value) => {\n                      dispatch(setVolumeStage(value));\n                    }}\n                    label={\"orchestra\"}\n                  />\n                </SliderContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <Slider\n                  orientation=\"vertical\"\n                  //   getAriaValueText={valuetext}\n                  defaultValue={-100}\n                  min={-32}\n                  max={0}\n                  value={interactionsVolume}\n                  onChange={(event, value) => {\n                    dispatch(setVolumeInteractions(value));\n                  }}\n                  label={\"audience\"}\n                />\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport Context from \"../Context\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useClient } from \"../mqttConnection\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 33vw;\n  @media only screen and (max-width: 600px) {\n    width: 100vw;\n  }\n\n  height: 50vh;\n  position: absolute;\n  top: 0;\n  right: 0;\n  flex-grow: 1;\n  overflow-y: scroll;\n  background-color: white;\n  color: black;\n  z-index: 1101;\n`;\n\nconst Input = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n`;\n\nexport default ({ onClose }) => {\n  const [message, setMessage] = useState(\"\");\n  const [showChatMessages, setShowChatMessages] = useState(true);\n  const [showSystemMessages, setShowSystemMessages] = useState(false);\n  const history = useSelector((state) => state.console.history);\n  const messages = useSelector((state) => state.chat.messages);\n\n  const allMessages = [...history, ...messages].sort((x, y) => x.time < y.time);\n  const [context] = useContext(Context);\n  const users = useSelector((state) => state.users.users);\n  const { publish } = useClient();\n\n  const List = styled.ul`\n    list-style-type: none;\n  `;\n\n  const ChatMessage = styled.li``;\n  const SystemMessage = styled.li`\n    font-style: italic;\n    text-align: right;\n  `;\n\n  return (\n    <Container>\n      <Section\n        title={\"chat/console\"}\n        color={\"rgb(46, 94, 160)\"}\n        onClose={onClose}\n      >\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showChatMessages}\n              onChange={(event) => {\n                setShowChatMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"chat messages\"\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showSystemMessages}\n              onChange={(event) => {\n                setShowSystemMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"system messages\"\n        />\n\n        <List>\n          {allMessages.map((message, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === message.user) name = user.name;\n            });\n            return (\n              <>\n                {message.type === \"CHAT\" && showChatMessages && (\n                  <ChatMessage key={index}>\n                    {name}: {message.text}\n                  </ChatMessage>\n                )}\n                {message.type === \"SYSTEM\" && showSystemMessages && (\n                  <SystemMessage key={index}>\n                    {context.hallId}: {name} {message.text}\n                  </SystemMessage>\n                )}\n              </>\n            );\n          })}\n        </List>\n        <Input>\n          <Grid\n            container\n            //   spacing={2}\n          >\n            <Grid item xs={9}>\n              <TextField\n                fullWidth\n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    publish(`vgig/${context.hallId}/audience/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                    setMessage(\"\");\n                  }\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                color=\"primary\"\n                // variant=\"outlined\"\n                fullWidth\n                onClick={(event) => {\n                  if (message !== \"\") {\n                    publish(`vgig/${context.hallId}/audience/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                  }\n                  setMessage(\"\");\n                }}\n              >\n                <SendIcon></SendIcon>\n              </Button>\n            </Grid>\n          </Grid>\n        </Input>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport styled from \"styled-components\";\n\nimport Audience from \"./Audience\";\nimport Lobby from \"./Lobby\";\nimport Orchestra from \"./Orchestra\";\nimport Interactions from \"./Interactions\";\nimport Mixer from \"./Mixer\";\n\nimport Context from \"../Context\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setName } from \"../store/reducers/users\";\nimport { addMessage } from \"../store/reducers/chat\";\n\nimport Chat from \"./Chat\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n`;\n\nconst StyledModal = styled(Modal)`\n  width: 100%;\n  height: 100%;\n`;\nconst ModalContent = styled.div`\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledChat = styled(Chat)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 33vw;\n`;\nexport default () => {\n  const { id } = useParams();\n  const [context, setContext] = useContext(Context);\n  const { publish, subscribe } = useClient();\n  const dispatch = useDispatch();\n  const [subscribed, setSubscribed] = useState(false);\n  const [open, setOpen] = useState(true);\n  const [showConsole, setShowConsole] = useState(false);\n\n  useEffect(() => {\n    if (context.hallId === id) return;\n    console.log(\"storing hall id in context\");\n    setContext({ ...context, hallId: id });\n  }, [id, context, setContext]);\n\n  useEffect(() => {\n    if (subscribed) return;\n    setSubscribed(true);\n    console.log(\"subscribing to hall topics\");\n    publish(`${NAME}/${id}/audience/enterLobby`, {\n      userId: context.userId,\n    });\n    subscribe(`${NAME}/${id}/audience/setUserName`, (topic, message) => {\n      dispatch(setName(message.id, message.name));\n    });\n    subscribe(`${NAME}/${id}/audience/chat`, (topic, message) => {\n      dispatch(addMessage(message.user, message.message));\n    });\n  }, [id, subscribed, subscribe, publish, setSubscribed, dispatch, context]);\n\n  return (\n    <Container>\n      <AppBar position=\"sticky\" style={{ backgroundColor: \"transparent\" }}>\n        <Toolbar>\n          <IconButton\n            color=\"primary\"\n            onClick={(event) => {\n              setShowConsole(!showConsole);\n            }}\n          >\n            <ForumIcon></ForumIcon>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <StyledModal open={open}>\n        <ModalContent>\n          <Lobby\n            onEnter={(name) => {\n              publish(`${NAME}/${context.hallId}/audience/enter`, {\n                userId: context.userId,\n                name,\n              });\n              setOpen(false);\n            }}\n          ></Lobby>\n        </ModalContent>\n      </StyledModal>\n      <>\n        <Orchestra id={id}></Orchestra>\n        <Audience id={id}></Audience>\n        <Grid container>\n          <Grid item xs={12} sm={8}>\n            <Interactions id={id}></Interactions>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Mixer></Mixer>\n          </Grid>\n        </Grid>\n        {showConsole && (\n          <StyledChat\n            onClose={() => {\n              setShowConsole(false);\n            }}\n          ></StyledChat>\n        )}\n      </>\n    </Container>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(46, 94, 160)\",\n    },\n    secondary: {\n      main: \"rgb(220, 46, 40)\",\n    },\n  },\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        color: \"white\",\n      },\n      track: {\n        color: \"white\",\n      },\n      rail: {\n        color: \"white\",\n      },\n    },\n  },\n});\n","import React from \"react\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Hall from \"./components/Hall\";\nimport Context, { Provider as ContextProvider } from \"./Context\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nimport store from \"./store\";\n\nconst App = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default () => {\n  return (\n    <App>\n      <ThemeProvider theme={theme}>\n        <StoreProvider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/halls/:id\">\n                <ContextProvider value={Context}>\n                  <Hall />\n                </ContextProvider>\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </StoreProvider>\n      </ThemeProvider>\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/enter.339b495d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.2ff80ac8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.1c2b70ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.1a2ceec2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.e59a4594.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.39b87e4e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.4ff4f6c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.cf244f92.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.1a3c06fb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/9.51f8712a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/10.addb6c15.mp3\";","module.exports = __webpack_public_path__ + \"static/media/11.35a178a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/12.dd328baa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/13.8c15668d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/14.c2c551c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/15.45ca4dca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/16.066aed20.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.c45d7231.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.56025ded.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.c2ecfa7c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.30b56d3b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.78fd1661.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.ca179799.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.4d512d41.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.45c653fd.mp3\";"],"sourceRoot":""}