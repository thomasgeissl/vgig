{"version":3,"sources":["components/Home.js","constants.js","libmqtt.ts","mqttConnection.js","store/reducers/users.js","utils.js","Context.js","components/Admin.js","components/Audience.js","components/Lobby.js","midi.js","components/visualisation/Terrain.js","components/visualisation/WSTG.js","components/visualisation/Visualisation.js","components/visualisation/Lights.js","components/visualisation/PostProcessing.js","store/reducers/visualisation.js","store/reducers/mixer.js","store/reducers/chat.js","store/reducers/console.js","store/reducers/rootReducer.js","store/epics/rootEpic.js","store/epics/timeoutAction.js","store/index.js","components/Orchestra.js","components/Button.js","components/Section.js","components/Interactions.js","components/Slider.js","components/Mixer.js","components/Chat.js","components/Hall.js","theme.js","components/test/Audio.js","components/test/Visual.js","components/test/Connection.js","App.js","serviceWorker.js","index.js","assets/enter.mp3","assets/instruments/1.mp3","assets/instruments/2.mp3","assets/instruments/3.mp3","assets/instruments/4.mp3","assets/instruments/5.mp3","assets/instruments/6.mp3","assets/instruments/7.mp3","assets/instruments/8.mp3","assets/instruments/9.mp3","assets/instruments/10.mp3","assets/instruments/11.mp3","assets/instruments/12.mp3","assets/instruments/13.mp3","assets/instruments/14.mp3","assets/instruments/15.mp3","assets/instruments/16.mp3","assets/interactions/1.mp3","assets/interactions/2.mp3","assets/interactions/3.mp3","assets/interactions/4.mp3","assets/interactions/5.mp3","assets/interactions/6.mp3","assets/interactions/7.mp3","assets/interactions/8.mp3"],"names":["version","StyledTextField","styled","TextField","Container","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","value","onChange","event","target","onKeyPress","key","push","autoFocus","onClick","context","state","resume","color","variant","NAME","isWildcardTopic","topic","includes","useClient","options","client","connect","listeners","Map","on","console","log","error","messageTopic","message","forEach","listenersForTopic","wildcard","res","t","String","split","w","lt","slice","join","topicMatchesMQTTWildcard","listener","JSON","parse","toString","subscribe","fn","currentListeners","get","set","Error","publish","payload","stringify","unsubscribe","delete","getClient","getSubscriptions","createConnection","config","broker","initialMood","actions","action","id","types","defaultState","users","heartBeats","mood","setUsers","type","Context","React","createContext","Provider","children","userId","setState","useParams","useContext","dispatch","useDispatch","useEffect","intervalId","setInterval","from","clearInterval","Users","User","active","item","props","subscribed","setSubscribed","useSelector","map","user","index","Tooltip","title","name","placement","currentAction","Actions","Hello","EnterButton","Button","onEnter","setName","fullWidth","label","hallId","start","status","frameCounter","Terrain","seed","size","height","levels","scale","offset","x","z","analyser","simplex","useMemo","SimplexNoise","intensity","mixer","geometryRef","useUpdate","geometry","vertices","noise","level","noise2D","Array","_","y","generateTerrain","elementsNeedUpdate","useFrame","fft","getValue","reduce","a","b","Infinity","remainder","mappedIndex","current","attach","args","undefined","ref","wireframe","Text","anchorX","anchorY","maxKey","max","WSTG","position","glitch","pixelation","focusDistance","focalLength","bokehScale","luminanceThreshold","luminanceSmoothing","opacity","eskil","darkness","delay","duration","strength","mode","GlitchMode","SPORADIC","ratio","granularity","volumeInteractions","volumeStage","speed","messages","addToHistory","text","appReducer","combineReducers","Date","now","indexToBeRemoved","splice","userAlreadyExists","sort","chat","unshift","time","visualisation","combineEpics","action$","pipe","filter","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","rootEpic","samples","Sample1","Sample2","Sample3","Sample4","Sample5","Sample6","Sample7","Sample8","Sample9","Sample10","Sample11","Sample12","Sample13","Sample14","Sample15","Sample16","channel","Volume","Destination","visulationsMode","instruments","setInstruments","setAnalyser","volume","sample","Sampler","C3","attack","sustain","release","Analyser","note","velocity","statusTypes","triggerAttack","triggerRelease","camera","fov","Lights","Visualisation","PostProcessing","RoundButton","button","borderColor","css","span","Title","Content","onClose","style","left","sfx","setSfx","enter","setEnter","leave","setLeave","EnterSample","triggerAttackRelease","round","logText","setCurrentAction","Section","Grid","container","xs","SliderContainer","StyledSlider","Slider","Label","min","orientation","stageVolume","interactionsVolume","defaultValue","setIntensity","maxOrchestraVolume","setVolumeStage","maxActionVolume","setVolumeInteractions","Input","Desk","StyledModal","Modal","ModalContent","StyledChat","setMessage","showChatMessages","setShowChatMessages","showSystemMessages","setShowSystemMessages","allMessages","List","ul","ChatMessage","li","SystemMessage","FormControlLabel","control","Switch","checked","e","shiftKey","preventDefault","setContext","open","setOpen","showConsole","setShowConsole","getState","addUser","AppBar","backgroundColor","Toolbar","IconButton","Lobby","Orchestra","Audience","sm","Interactions","Mixer","createMuiTheme","palette","primary","main","secondary","overrides","MuiSlider","thumb","track","rail","MuiTextField","input","synth","Synth","toDestination","Box","mesh","useRef","hovered","setHover","setActive","rotation","onPointerOver","onPointerOut","App","ThemeProvider","theme","path","Audio","Visual","Connection","Admin","Hall","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.3e3d9c65.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { context } from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\n\nconst version = pc.version;\nconst StyledTextField = styled(TextField)`\n  .MuiInput-input {\n    color: white;\n  }\n  .MuiInputBase-input {\n    background-color: rgb(24, 24, 24);\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vgig,<br></br>the virtual concert hall for everyone.\n      </Intro>\n      <RoomChooser>\n        <p></p>\n        <Door>\n          <StyledTextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\" && room !== \"\") {\n                history.push(`/halls/${room}`);\n              }\n            }}\n            autoFocus\n          ></StyledTextField>\n          <Button\n            onClick={() => {\n              if (context.state !== \"running\") {\n                context.resume();\n              }\n              history.push(`/halls/${room}`);\n            }}\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};\n","const NAME = \"vgig\"\nexport {NAME} ","import { connect, MqttClient } from \"mqtt\"\n\nconst isWildcardTopic = (topic: string) =>\n    topic.includes(\"#\") || topic.includes(\"+\")\nexport default function topicMatchesMQTTWildcard(\n    topic: string,\n    wildcard: string\n) {\n    if (topic === wildcard) {\n        return []\n    } else if (wildcard === \"#\") {\n        return [topic]\n    }\n\n    let res = []\n\n    let t = String(topic).split(\"/\")\n    let w = String(wildcard).split(\"/\")\n\n    let i = 0\n    for (let lt = t.length; i < lt; i++) {\n        if (w[i] === \"+\") {\n            res.push(t[i])\n        } else if (w[i] === \"#\") {\n            res.push(t.slice(i).join(\"/\"))\n            return res\n        } else if (w[i] !== t[i]) {\n            return null\n        }\n    }\n\n    if (w[i] === \"#\") {\n        i += 1\n    }\n\n    return i === w.length ? res : null\n}\n\ninterface Client {\n    subscribe(topic: string, fn: Function): void\n    publish(topic: string, payload: string | number | object): void\n    publish(topic: string): void\n    unsubscribe(topic: string): void\n    getClient(): MqttClient\n    getSubscriptions(): Map<string, Array<Function>> \n}\n\nexport function createConnection(options: string) {\n    let client = connect(options)\n    let listeners: Map<string, Array<Function>> = new Map()\n\n    client.on(\"connect\", console.log)\n    client.on(\"disconnect\", console.log)\n    client.on(\"error\", console.error)\n\n    client.on(\"message\", (messageTopic, message) => {\n        listeners.forEach((listenersForTopic, topic) => {\n            if (\n                messageTopic === topic ||\n                (isWildcardTopic(topic) &&\n                    topicMatchesMQTTWildcard(messageTopic, topic))\n            ) {\n                listenersForTopic.forEach(listener => {\n                    try {\n                        listener(topic, JSON.parse(message.toString()))\n                    } catch (error) {\n                        listener(topic, {})\n                    }\n                })\n            }\n        })\n    })\n\n    return function useClient(): Client {\n        return {\n            subscribe: (topic: string, fn: Function) => {\n                        let currentListeners = listeners.get(topic)\n                        listeners.set(topic, [...(currentListeners || []), fn])\n    \n                        // if (!currentListeners) {\n                            client.subscribe(topic)\n                        // }\n                        \n                        let newListeners = listeners.get(topic)// ? listeners.get(topic) : []\n                        if(!newListeners) {\n                            throw new Error(\n                                `useClient: ${topic} does not exist`\n                            )\n                        }\n                        // newListeners = newListeners.filter((f) => f !== fn)\n\n                        // if (newListeners.length > 0) {\n                        //     listeners.set(topic, newListeners)\n                        // } else {\n                        //     listeners.delete(topic)\n                        //     client.unsubscribe(topic)\n                        // }\n                    // }\n            },\n            publish: (\n                topic: string,\n                payload?: string | number | object\n            ) => {\n                // client.subscribe(topic)\n                if (isWildcardTopic(topic)) {\n                    throw new Error(\n                        `useTopic: Tried publishing on wildcard topic ${topic}`\n                    )\n                } else {\n                    client.publish(topic, JSON.stringify(payload))\n                }\n            },\n            unsubscribe: (\n                topic: string\n            ) => {\n                listeners.delete(topic)\n                client.unsubscribe(topic)\n            },\n            getClient: () => client,\n            getSubscriptions: () => listeners\n        }\n    }\n}\n","import { createConnection } from \"./libmqtt\";\nimport config from \"./config/config.json\";\n\nexport const useClient = createConnection(config.broker);\n","import config from \"../../config/config.json\";\nconst initialMood = new Map();\nconfig.actions.forEach((action) => {\n  initialMood[action.id] = 5;\n});\n\nconst types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  HEARTBEAT: \"HEARTBEAT\",\n  SETNAME: \"SETNAME\",\n  SETCURRENTACTION: \"SETCURRENTACTION\",\n  UNSETCURRENTACTION: \"UNSETCURRENTACTION\",\n};\n\nconst defaultState = {\n  users: [], //all users\n  heartBeats: new Map(),\n  mood: initialMood,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 60 * 1000) {\n          console.log(\"user seems to be dead\", key);\n          // delete from heartbeats map\n          heartBeats.delete(key);\n          // delete from users array\n          let indexToBeRemoved = -1;\n          users.forEach((user, index) => {\n            if (user.id === key) {\n              indexToBeRemoved = index;\n            }\n          });\n          if (indexToBeRemoved !== -1) {\n            users.splice(indexToBeRemoved, 1);\n          }\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      let users = [...state.users];\n      action.payload.value.forEach((item) => {\n        let userAlreadyExists = false;\n        users.forEach((user) => {\n          if (user.id === item.id) {\n            userAlreadyExists = true;\n          }\n        });\n        if (!userAlreadyExists) users.push(item);\n      });\n\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      let userAlreadyExists = false;\n      users.forEach((user) => {\n        if (user.id === action.payload.id) {\n          userAlreadyExists = true;\n        }\n      });\n      if (!userAlreadyExists)\n        users.push({ id: action.payload.id, name: action.payload.name });\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.SETNAME: {\n      let users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].name = action.payload.name;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.SETCURRENTACTION: {\n      const users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].currentAction = action.payload.action;\n        }\n      });\n      const mood = initialMood;\n      users.forEach((user, index) => {\n        mood[user.currentAction] = mood[user.currentAction] + 1;\n      });\n      return {\n        ...state,\n        users,\n        mood,\n      };\n    }\n    case types.UNSETCURRENTACTION: {\n      const users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].currentAction = \"\";\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (id, name) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (id, name) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\nexport const setCurrentAction = (id, action) => {\n  return {\n    type: types.SETCURRENTACTION,\n    payload: {\n      id,\n      action,\n    },\n  };\n};\nexport const unSetCurrentAction = (id) => {\n  return {\n    type: types.UNSETCURRENTACTION,\n    payload: {\n      id,\n    },\n  };\n};\nexport { types };\n","const generateId = (length) => {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  export {generateId}","import React, {useState} from \"react\"\nimport {generateId} from \"./utils\"\nconst Context = React.createContext();\n\nconst Provider = ({children}) => {\n    const [state, setState] = useState({userId: generateId(8)});\n    return (\n        <Context.Provider value={[state, setState]}>\n            {children}\n        </Context.Provider>\n\n    )\n}\nexport default Context\nexport {Provider} ","import { NAME } from \"../constants\";\nimport React, { useEffect, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useClient } from \"../mqttConnection\";\nimport { setUsers } from \"../store/reducers/users\";\n\nimport Context from \"../Context\";\n\nexport default () => {\n  const { id } = useParams();\n  const [context] = useContext(Context);\n  const { publish, subscribe } = useClient();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    subscribe(`${NAME}/${id}/audience/setUsers`, (topic, message) => {\n      console.log(message);\n      dispatch(setUsers(message));\n    });\n    const intervalId = setInterval(() => {\n      publish(`${NAME}/${id}/audience/getUsers`, { from: context.userId });\n    }, 30 * 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return <h1>admin</h1>;\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport Context from \"../Context\";\n\nimport config from \"../config/config.json\";\nconst actions = config.actions;\n\nconst Container = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  background-color: transparent;\n`;\n\nconst Users = styled.div`\n  text-align: left;\n`;\nconst User = styled.div`\n  height: 25px;\n  width: 25px;\n  background-color: ${({ action, active }) => {\n    let color = active ? \"rgb(127,127,127)\" : \"rgb(64,64,64)\";\n    actions.forEach((item) => {\n      if (item.id === action) {\n        color = item.color;\n      }\n    });\n    return `${color}`;\n  }};\n  /* background-color: ${(props) =>\n    props.active ? \"rgb(255,170,100)\" : \"rgb(254, 250, 170)\"}; */\n  border-radius: 50%;\n  display: inline-block;\n  margin: 5px;\n  /* border: ${({ action }) => {\n    let color = \"black\";\n    actions.forEach((item) => {\n      if (item.id === action) {\n        color = item.color;\n      }\n    });\n    return `solid 3px ${color}`;\n  }}; */\n`;\n\n// const Sphere = ({position, color}) => {\n//   return (\n//     <mesh visible userData={{ test: \"hello\" }} position={position} castShadow>\n//       <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n//       <meshStandardMaterial attach=\"material\" color={color}        transparent        roughness={0.1}        metalness={0.1}      />\n//     </mesh>\n//     );\n// }\n\nexport default ({ id }) => {\n  const dispatch = useDispatch();\n  const { subscribe, unsubscribe } = useClient();\n  const [context] = useContext(Context);\n  const [subscribed, setSubscribed] = useState(false);\n  const users = useSelector((state) => state.users.users);\n\n  useEffect(\n    () => {\n      if (subscribed) return;\n      setSubscribed(true);\n      if (id) {\n        console.log(\"subscribing to audience topics\");\n      }\n    },\n    [subscribed, setSubscribed, id, subscribe, dispatch, context],\n    () => {\n      unsubscribe(`${NAME}/${id}/audience/getUsers`);\n    }\n  );\n  return (\n    <Container>\n      {/* <Section title={\"audience\"} color={\"rgb(46, 94, 160)\"}> */}\n      <Users>\n        {users.map((user, index) => {\n          // const position = [(index / users.length) * 50, 0, 0];\n          return (\n            <Tooltip key={user.id} title={user.name} placement=\"right-start\">\n              <User\n                key={user.id}\n                active={context.userId === user.id}\n                action={user.currentAction}\n              >\n                {/* {user} */}\n              </User>\n            </Tooltip>\n          );\n        })}\n      </Users>\n      {/* </Section> */}\n    </Container>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport Context from \"../Context\";\nimport { start } from \"tone\";\n\nconst Container = styled.div``;\nconst Actions = styled.section`\n  margin-top: 24px !important;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Hello = styled.div`\n  margin-bottom: 24px;\n`;\nconst EnterButton = styled(Button)``;\nconst StyledTextField = styled(TextField)`\n  .MuiInput-input {\n    color: white;\n  }\n  .MuiInputBase-input {\n    background-color: rgb(24, 24, 24);\n  }\n`;\n\nexport default ({ onEnter }) => {\n  const { publish } = useClient();\n  const [name, setName] = useState(\"\");\n  const [context] = useContext(Context);\n  return (\n    <Container>\n      <Hello>\n        hello, <br></br>please enter your name and enjoy the show.\n      </Hello>\n      <StyledTextField\n        fullWidth\n        autoFocus\n        color=\"primary\"\n        label=\"name\"\n        value={name}\n        onChange={(event) => {\n          setName(event.target.value);\n        }}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\" && name !== \"\") {\n            publish(`${NAME}/${context.hallId}/audience/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            start();\n            onEnter(name);\n          }\n        }}\n      ></StyledTextField>\n      <br></br>\n\n      <Actions>\n        <EnterButton\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => {\n            if (name === \"\") return;\n            publish(`${NAME}/${context.hallId}/audience/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            start();\n            onEnter(name);\n          }}\n        >\n          enter\n        </EnterButton>\n      </Actions>\n    </Container>\n  );\n};\n","const status = {\n    noteOn: 144,\n    noteOff: 128\n}\nconst createNoteOnMessage = (channel, note, vel) => {\n    return {\n        channel,\n        status: status.noteOn,\n        note,\n        velocity: vel ? vel : 127\n    }\n}\nexport {createNoteOnMessage, status}","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useUpdate, useFrame } from \"react-three-fiber\";\nimport SimplexNoise from \"simplex-noise\";\n\nconst generateTerrain = (simplex, size, height, levels, scale, offset) => {\n  const noise = (level, x, z) =>\n    simplex.noise2D(\n      offset.x * scale + scale * level * x,\n      offset.z * scale + scale * level * z\n    ) /\n      level +\n    (level > 1 ? noise(level / 2, x, z) : 0);\n  return Array.from({ length: size ** 2 }, (_, i) => {\n    let x = (i % size) / size - 0.5;\n    let z = Math.floor(i / size) / size - 0.5;\n    return {\n      x: (offset.x + x) * scale,\n      y: noise(2 ** levels, x, z) * height,\n      z: (offset.z + z) * scale,\n    };\n  });\n};\n\nlet frameCounter = 0;\nconst Terrain = ({\n  seed,\n  size,\n  height,\n  levels = 3,\n  scale = 1,\n  offset = { x: 0, z: 0 },\n  color,\n  analyser,\n}) => {\n  const simplex = useMemo(() => new SimplexNoise(seed), [seed]);\n  const intensity = useSelector((state) => state.mixer.intensity);\n\n  const geometryRef = useUpdate(\n    (geometry) => {\n      geometry.vertices = generateTerrain(\n        simplex,\n        size,\n        height,\n        levels,\n        scale,\n        offset\n      );\n      geometry.elementsNeedUpdate = true;\n    },\n    [size, height, levels, scale, offset, seed]\n  );\n  useFrame(() => {\n    frameCounter++;\n    if (frameCounter % 4 === 0) {\n      const fft = analyser.getValue();\n      const sum = fft.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      if (sum === -Infinity) {\n        // geometryRef.current.vertices[0].y = 5; //Math.abs(value * -0.008) * 2;\n        // geometryRef.current.vertices[31].y = 5; //Math.abs(value * -0.008) * 2;\n        // geometryRef.current.vertices[124].y = 5; //Math.abs(value * -0.008) * 2;\n        // geometryRef.current.vertices[1000].y = 5; //Math.abs(value * -0.008) * 2;\n        // geometryRef.current.vertices[1000].y = 5; //Math.abs(value * -0.008) * 2;\n        // geometryRef.current.elementsNeedUpdate = true;\n        return;\n      }\n      fft.forEach((value, index) => {\n        const remainder = index % 32;\n        const mappedIndex = Math.floor(index / 32) + remainder * 32;\n        geometryRef.current.vertices[mappedIndex].y =\n          // Math.abs(value * -0.008) * intensity;\n          value * -0.008 * intensity - intensity;\n        // geometryRef.current.vertices[index].y = Math.abs(value * -0.008) * 2;\n      });\n      geometryRef.current.elementsNeedUpdate = true;\n    }\n  });\n  useFrame(() => {\n    // console.log(geometryRef.current); //.y += 0.3;\n  });\n\n  return (\n    <mesh>\n      <planeGeometry\n        attach=\"geometry\"\n        args={[undefined, undefined, size - 1, size - 1]}\n        ref={geometryRef}\n      />\n      <meshBasicMaterial attach=\"material\" color={color} wireframe />\n    </mesh>\n  );\n};\n\nexport default Terrain;\n","import React from \"react\";\nimport { Text } from \"@react-three/drei/Text\";\n\nexport default (props) => {\n  return (\n    <Text\n      {...props}\n      color=\"white\"\n      anchorX=\"center\" // default\n      anchorY=\"middle\" // default\n    >\n      wstg\n    </Text>\n  );\n};\n","import React from \"react\";\nimport Terrain from \"./Terrain\";\nimport WSTG from \"./WSTG\";\nimport config from \"../../config/config\";\n\nexport default ({ analyser, mood }) => {\n  const seed = 1;\n  const size = 32;\n  const height = 0.6;\n  const scale = 15;\n  const levels = 10;\n\n  let max = 0;\n  let maxKey;\n  mood.forEach((value, key) => {\n    if (key && key !== \"\") {\n      max = Math.max(value, max);\n      if (max === value) {\n        maxKey = key;\n      }\n    }\n  });\n  let color = \"white\";\n  if (maxKey && maxKey !== \"\") {\n    config.actions.forEach((action) => {\n      if (action.id === maxKey) {\n        color = action.color;\n      }\n    });\n  }\n\n  return (\n    <>\n      <WSTG position={[-3, 3, 4]}></WSTG>\n      <Terrain\n        seed={seed}\n        size={Math.floor(size)}\n        height={height}\n        levels={Math.floor(levels)}\n        scale={scale}\n        color={color}\n        analyser={analyser}\n      ></Terrain>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <>\n      {/* <hemisphereLight intensity={0.35} /> */}\n      <ambientLight intensity={1}></ambientLight>\n      <pointLight position={[-10, -10, 5]} intensity={13.6}></pointLight>\n      <pointLight position={[7, -15, 5]} intensity={12.8}></pointLight>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  EffectComposer,\n  DepthOfField,\n  Bloom,\n  Noise,\n  Vignette,\n  Glitch,\n  Pixelation,\n} from \"@react-three/postprocessing\";\nimport { GlitchMode } from \"postprocessing\";\n\nexport default () => {\n  const glitch = useSelector((state) => state.mixer.glitch);\n  const pixelation = useSelector((state) => state.mixer.pixelation);\n  return (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={0.02}\n        bokehScale={2}\n        height={480}\n      />\n      <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n      <Noise opacity={0.05} />\n      <Vignette eskil={false} offset={0.1} darkness={1.1} />\n      <Glitch\n        delay={[1.5, 10.5]} // min and max glitch delay\n        duration={[0.05, 0.4]} // min and max glitch duration\n        strength={[0.002, 0.02]} // min and max glitch strength\n        mode={GlitchMode.SPORADIC} // glitch mode\n        ratio={0.48} // Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\n        active={glitch}\n      />\n      <Pixelation granularity={pixelation} />\n    </EffectComposer>\n  );\n};\n","const types = {\n  SETVISUALIZER: \"SETVISUALIZER\",\n};\n\nconst defaultState = {\n  mode: 0,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETVISUALIZER: {\n      return {\n        ...state,\n        mode: action.payload.value,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","const types = {\n  SETVOLUMEINTERACTIONS: \"SETVOLUMEINTERACTIONS\",\n  SETVOLUMESTAGE: \"SETVOLUMESTAGE\",\n  SETINTENSITY: \"SETINTENSITY\",\n  SETSPEED: \"SETSPEED\",\n  SETGLITCH: \"SETGLITCH\",\n  SETPIXELATION: \"SETPIXELATION\",\n};\n\nconst defaultState = {\n  volumeInteractions: 6,\n  volumeStage: 6,\n  intensity: 2,\n  speed: 2,\n  glitch: true,\n  pixelation: 1,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETVOLUMEINTERACTIONS: {\n      return {\n        ...state,\n        volumeInteractions: action.payload.value,\n      };\n    }\n    case types.SETVOLUMESTAGE: {\n      return {\n        ...state,\n        volumeStage: action.payload.value,\n      };\n    }\n    case types.SETINTENSITY: {\n      return {\n        ...state,\n        intensity: action.payload.value,\n      };\n    }\n    case types.SETSPEED: {\n      return {\n        ...state,\n        speed: action.payload.value,\n      };\n    }\n    case types.SETGLITCH: {\n      return {\n        ...state,\n        glitch: action.payload.value,\n      };\n    }\n    case types.SETPIXELATION: {\n      return {\n        ...state,\n        pixelation: action.payload.value,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setVolumeInteractions = (value) => {\n  return {\n    type: types.SETVOLUMEINTERACTIONS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setVolumeStage = (value) => {\n  return {\n    type: types.SETVOLUMESTAGE,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setIntensity = (value) => {\n  return {\n    type: types.SETINTENSITY,\n    payload: {\n      value,\n    },\n  };\n};\n\nexport const setGlitch = (value) => {\n  return {\n    type: types.SETGLITCH,\n    payload: {\n      value,\n    },\n  };\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift({\n        ...action.payload.message,\n        time: new Date(),\n        type: \"CHAT\",\n      });\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (user, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        user,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","const types = {\n  ADDTOHISTORY: \"ADDTOHISTORY\",\n};\n\nconst defaultState = {\n  history: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDTOHISTORY: {\n      let history = [...state.history];\n      history.unshift({\n        ...action.payload,\n        time: new Date(),\n        type: \"SYSTEM\",\n      });\n      history = history.slice(0, 1000);\n      return {\n        ...state,\n        history,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst addToHistory = (user, text) => {\n  return {\n    type: types.ADDTOHISTORY,\n    payload: {\n      user,\n      text,\n    },\n  };\n};\nexport { addToHistory };\n","import { combineReducers } from \"redux\";\n\nimport visualisation from \"./visualisation\";\nimport users from \"./users\";\nimport mixer from \"./mixer\";\nimport chat from \"./chat\";\nimport console from \"./console\";\n\nconst appReducer = combineReducers({\n  users,\n  mixer,\n  chat,\n  console,\n  visualisation,\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { combineEpics } from \"redux-observable\";\nimport timeoutAction from \"./timeoutAction\";\n\nexport default combineEpics(timeoutAction);\n","import { filter, map, delay } from \"rxjs/operators\";\nimport { types, unSetCurrentAction } from \"../reducers/users\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === types.SETCURRENTACTION),\n    map((action) => unSetCurrentAction(action.payload.id)),\n    delay(100)\n  );\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","import React, { useState, useEffect } from \"react\";\nimport { Provider as StoreProvider, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Analyser, Destination, Sampler, Channel, now, Volume } from \"tone\";\nimport { status as statusTypes } from \"../midi\";\nimport { Canvas } from \"react-three-fiber\";\nimport { Physics } from \"@react-three/cannon\";\nimport { OrbitControls } from \"drei\";\nimport { useClient } from \"../mqttConnection\";\n\nimport Visualisation from \"./visualisation/Visualisation\";\nimport Lights from \"./visualisation/Lights\";\nimport PostProcessing from \"./visualisation/PostProcessing\";\nimport { NAME } from \"../constants\";\nimport store from \"../store\";\n\nimport Sample1 from \"../assets/instruments/1.mp3\";\nimport Sample2 from \"../assets/instruments/2.mp3\";\nimport Sample3 from \"../assets/instruments/3.mp3\";\nimport Sample4 from \"../assets/instruments/4.mp3\";\nimport Sample5 from \"../assets/instruments/5.mp3\";\nimport Sample6 from \"../assets/instruments/6.mp3\";\nimport Sample7 from \"../assets/instruments/7.mp3\";\nimport Sample8 from \"../assets/instruments/8.mp3\";\nimport Sample9 from \"../assets/instruments/9.mp3\";\nimport Sample10 from \"../assets/instruments/10.mp3\";\nimport Sample11 from \"../assets/instruments/11.mp3\";\nimport Sample12 from \"../assets/instruments/12.mp3\";\nimport Sample13 from \"../assets/instruments/13.mp3\";\nimport Sample14 from \"../assets/instruments/14.mp3\";\nimport Sample15 from \"../assets/instruments/15.mp3\";\nimport Sample16 from \"../assets/instruments/16.mp3\";\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n  Sample9,\n  Sample10,\n  Sample11,\n  Sample12,\n  Sample13,\n  Sample14,\n  Sample15,\n  Sample16,\n];\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst channel = new Volume(0);\nchannel.connect(Destination);\n\nexport default ({ id }) => {\n  const users = useSelector((state) => state.users.users);\n  const visulationsMode = useSelector((state) => state.visualisation.mode);\n  const mood = new Map();\n  users.forEach((user) => {\n    mood.set(\n      user.currentAction,\n      mood.get(user.currentAction) ? mood.get(user.currentAction) + 1 : 1\n    );\n  });\n\n  // const [channel, setChannel] = useState(null);\n  const [instruments, setInstruments] = useState(null);\n  const [analyser, setAnalyser] = useState(null);\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { subscribe } = useClient();\n  const volume = useSelector((state) => state.mixer.volumeStage);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    // const channel = new Channel(-32);\n    // channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].attack = 0;\n      instruments[index].sustain = 1;\n      instruments[index].release = 1.3;\n      instruments[index].connect(channel);\n    });\n    // setChannel(channel);\n    setInstruments(instruments);\n\n    const analyser = new Analyser(\"fft\", 1024);\n    channel.connect(analyser);\n    setAnalyser(analyser);\n  }, []);\n\n  useEffect(() => {\n    if (!id || !instruments || subscribed) return;\n    console.log(\"subscribing to orchestra topics\");\n    setSubscribed(true);\n    subscribe(`${NAME}/${id}/orchestra`, (topic, message) => {\n      const { channel, note, status, velocity } = message;\n      if (channel && channel > 0 && channel <= 16) {\n        if (status === statusTypes.noteOn) {\n          instruments[channel - 1].triggerAttack(note, now(), velocity / 127);\n        }\n        if (status === statusTypes.noteOff) {\n          instruments[channel - 1].triggerRelease(note, now());\n        }\n      }\n    });\n  }, [instruments, subscribed, id, subscribe]);\n\n  // useFrame((state) => {\n  //   console.log(\"frame\", state);\n  //   // console.log(analyser.getValue());\n  // });\n  return (\n    <Container>\n      <Canvas camera={{ fov: 100, position: [4, 3, 5] }}>\n        <OrbitControls></OrbitControls>\n        <Lights></Lights>\n        <Physics>\n          <StoreProvider store={store}>\n            {visulationsMode === 0 && (\n              <Visualisation analyser={analyser} mood={mood}></Visualisation>\n            )}\n            <PostProcessing></PostProcessing>\n          </StoreProvider>\n        </Physics>\n      </Canvas>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  /* border: 1px dashed white; */\n`;\n\nconst RoundButton = styled.button`\n  /* background-color: rgba(254, 250, 170, 1); */\n  background-color: rgb(255, 170, 100);\n  color: white;\n  height: 32px;\n  width: 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 5px;\n  /* border-radius: 50%; */\n  border: none;\n  ${({ borderColor }) =>\n    borderColor &&\n    css`\n      /* border: 3px solid ${borderColor}; */\n      background-color: ${borderColor};\n    `}\n`;\nconst Label = styled.span`\n  color: white;\n`;\n\nconst Button = ({ label, borderColor, onClick }) => {\n  return (\n    <Container>\n      <RoundButton onClick={onClick} borderColor={borderColor}></RoundButton>\n      <br></br>\n      {/* {label && label !== \"\" && <Label>{label}</Label>} */}\n    </Container>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  ${(props) =>\n    props.color &&\n    css`\n      /* border-bottom: 3px solid ${props.color}; */\n      border-left: 1px solid white;\n      border-right: 1px solid white;\n    `}\n`;\nconst Title = styled.div`\n  width: 100%;\n  text-transform: uppercase;\n  color: white;\n  text-align: center;\n  ${(props) =>\n    props.color &&\n    css`\n      background-color: ${props.color};\n    `}\n`;\nconst Content = styled.div`\n  flex-grow: 1;\n`;\n\nexport default ({ title, color, children, onClose }) => {\n  return (\n    <Container color={color}>\n      <Title color={color}>{title}</Title>\n      <Content>{children}</Content>\n      {onClose && (\n        <CloseIcon\n          color={\"white\"}\n          onClick={onClose}\n          style={{ position: \"absolute\", left: \"5px\" }}\n        ></CloseIcon>\n      )}\n    </Container>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport { Sampler, Channel, Volume, Destination } from \"tone\";\n\nimport Context from \"../Context\";\n\nimport Sample1 from \"../assets/interactions/1.mp3\";\nimport Sample2 from \"../assets/interactions/2.mp3\";\nimport Sample3 from \"../assets/interactions/3.mp3\";\nimport Sample4 from \"../assets/interactions/4.mp3\";\nimport Sample5 from \"../assets/interactions/5.mp3\";\nimport Sample6 from \"../assets/interactions/6.mp3\";\nimport Sample7 from \"../assets/interactions/7.mp3\";\nimport Sample8 from \"../assets/interactions/8.mp3\";\nimport EnterSample from \"../assets/enter.mp3\";\n\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setCurrentAction } from \"../store/reducers/users\";\nimport { addToHistory } from \"../store/reducers/console\";\n\nimport Button from \"./Button\";\nimport Section from \"./Section\";\nimport config from \"../config/config.json\";\n\nconst actions = config.actions;\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n];\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n`;\n\n// const channel = new Channel(-32);\n// channel.connect(volumeNode);\nconst channel = new Volume(0);\nchannel.connect(Destination);\n\nexport default () => {\n  const [context] = useContext(Context);\n  const { subscribe, publish } = useClient();\n  // const [channel, setChannel] = useState(null);\n  const [sfx, setSfx] = useState(null);\n  const [enter, setEnter] = useState(null);\n  const [leave, setLeave] = useState(null);\n\n  const dispatch = useDispatch();\n  const volume = useSelector((state) => state.mixer.volumeInteractions);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    // const channel = new Channel(-32);\n    // channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].attack = 0;\n      instruments[index].release = 1.3;\n      instruments[index].connect(channel);\n    });\n    // setChannel(channel);\n    setSfx(instruments);\n\n    const enter = new Sampler({ C3: EnterSample });\n    enter.connect(channel);\n    setEnter(enter);\n\n    const leave = new Sampler({ C3: EnterSample });\n    leave.connect(channel);\n    setLeave(leave);\n  }, []);\n\n  useEffect(() => {\n    if (!context.hallId || !enter || !leave || !sfx) return;\n    subscribe(`${NAME}/${context.hallId}/audience/enter`, (topic, message) => {\n      enter.triggerAttackRelease(\"C3\", 20);\n      dispatch(addToHistory(message.userId, \"entered.\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/audience/leave`, (topic, message) => {\n      leave.triggerAttackRelease(\"C3\", 20);\n      dispatch(addToHistory(message.userId, \"left.\"));\n    });\n    actions.forEach((action, index) => {\n      subscribe(\n        `${NAME}/${context.hallId}/audience/${action.id}`,\n        (topic, message) => {\n          sfx[index].triggerAttackRelease(\n            36 + Math.round(Math.random() * 12),\n            40\n          );\n          dispatch(addToHistory(message.userId, action.logText));\n          dispatch(setCurrentAction(message.userId, action.id));\n        }\n      );\n    });\n  }, [context.hallId, dispatch, enter, leave, sfx, subscribe]);\n\n  return (\n    <Container>\n      <Section title={\"actions\"} color={\"rgb(46, 94, 160)\"}>\n        <Grid container>\n          {actions.map((action, index) => {\n            return (\n              <Grid item xs={3} key={index}>\n                <Button\n                  key={action.id}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  borderColor={action.color}\n                  onClick={() => {\n                    publish(`${NAME}/${context.hallId}/audience/${action.id}`, {\n                      userId: context.userId,\n                    });\n                  }}\n                  label={action.label}\n                ></Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Section>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 100%;\n  justify-content: center;\n`;\n\nconst SliderContainer = styled.div`\n  width: 100%;\n  text-align: center;\n`;\nconst StyledSlider = styled(Slider)`\n  height: 50px !important;\n`;\n\nconst Label = styled.div`\n  color: white;\n  margin-top: 5px;\n`;\n\nexport default ({ value, onChange, min, max, label }) => {\n  return (\n    <Container>\n      <SliderContainer>\n        <StyledSlider\n          orientation=\"vertical\"\n          //   getAriaValueText={valuetext}\n          min={min}\n          max={max}\n          value={value}\n          onChange={onChange}\n        />\n      </SliderContainer>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"./Slider\";\nimport styled from \"styled-components\";\n\nimport {\n  setVolumeInteractions,\n  setVolumeStage,\n  setIntensity,\n  setGlitch,\n} from \"../store/reducers/mixer\";\nimport Section from \"./Section\";\nimport Button from \"./Button\";\n\nimport config from \"../config/config.json\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nconst SliderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledSlider = styled(Slider)`\n  margin: 5px;\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const stageVolume = useSelector((state) => state.mixer.volumeStage);\n  const interactionsVolume = useSelector(\n    (state) => state.mixer.volumeInteractions\n  );\n  const intensity = useSelector((state) => state.mixer.intensity);\n  const glitch = useSelector((state) => state.mixer.glitch);\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={6}>\n          <Section title={\"visual\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container>\n              <Grid item xs={6}>\n                {/* <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    dispatch(setGlitch(!glitch));\n                  }}\n                  label={\"glitch\"}\n                ></Button> */}\n                <StyledSlider\n                  orientation=\"vertical\"\n                  //   getAriaValueText={valuetext}\n                  defaultValue={2}\n                  min={2}\n                  max={20}\n                  value={intensity}\n                  onChange={(event, value) => {\n                    dispatch(setIntensity(value));\n                  }}\n                  label={\"intensity\"}\n                />\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n        <Grid item xs={6}>\n          <Section title={\"audio\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container style={{ height: \"100%\" }}>\n              <Grid item xs={6}>\n                <SliderContainer>\n                  <StyledSlider\n                    orientation=\"vertical\"\n                    //   getAriaValueText={valuetext}\n                    defaultValue={-100}\n                    min={-32}\n                    max={config.maxOrchestraVolume}\n                    value={stageVolume}\n                    onChange={(event, value) => {\n                      dispatch(setVolumeStage(value));\n                    }}\n                    label={\"music\"}\n                  />\n                </SliderContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <StyledSlider\n                  orientation=\"vertical\"\n                  //   getAriaValueText={valuetext}\n                  defaultValue={-100}\n                  min={-32}\n                  max={config.maxActionVolume}\n                  value={interactionsVolume}\n                  onChange={(event, value) => {\n                    dispatch(setVolumeInteractions(value));\n                  }}\n                  label={\"actions\"}\n                />\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport Context from \"../Context\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useClient } from \"../mqttConnection\";\n\nimport Section from \"./Section\";\nimport config from \"../config/config.json\";\n\nconst Container = styled.div`\n  width: 33vw;\n  @media only screen and (max-width: 600px) {\n    width: 100vw;\n  }\n\n  height: 50vh;\n  position: absolute;\n  top: 0;\n  right: 0;\n  flex-grow: 1;\n  overflow-y: scroll;\n  background-color: white;\n  color: black;\n  z-index: 1101;\n`;\n\nconst Input = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n`;\n\nexport default ({ onClose }) => {\n  const [message, setMessage] = useState(\"\");\n  const [showChatMessages, setShowChatMessages] = useState(true);\n  const [showSystemMessages, setShowSystemMessages] = useState(!config.chat);\n  const history = useSelector((state) => state.console.history);\n  const messages = useSelector((state) => state.chat.messages);\n\n  const allMessages = config.chat\n    ? [...history, ...messages].sort((x, y) => x.time < y.time)\n    : [...history];\n  const [context] = useContext(Context);\n  const users = useSelector((state) => state.users.users);\n  const { publish } = useClient();\n\n  const List = styled.ul`\n    list-style-type: none;\n  `;\n\n  const ChatMessage = styled.li``;\n  const SystemMessage = config.chat\n    ? styled.li`\n        font-style: italic;\n        text-align: right;\n      `\n    : styled.li`\n        font-style: italic;\n      `;\n\n  return (\n    <Container>\n      <Section\n        title={config.chat ? \"chat/console\" : \"console\"}\n        color={\"rgb(46, 94, 160)\"}\n        onClose={onClose}\n      >\n        {(config.chat || config.console) && (\n          <>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showChatMessages}\n                  onChange={(event) => {\n                    setShowChatMessages(event.target.checked);\n                  }}\n                  color=\"primary\"\n                />\n              }\n              label=\"chat messages\"\n            />\n\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showSystemMessages}\n                  onChange={(event) => {\n                    setShowSystemMessages(event.target.checked);\n                  }}\n                  color=\"primary\"\n                />\n              }\n              label=\"system messages\"\n            />\n          </>\n        )}\n\n        <List>\n          {allMessages.map((message, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === message.user) name = user.name;\n            });\n            return (\n              <>\n                {message.type === \"CHAT\" && showChatMessages && (\n                  <ChatMessage key={index}>\n                    {name}: {message.text}\n                  </ChatMessage>\n                )}\n                {message.type === \"SYSTEM\" && showSystemMessages && (\n                  <SystemMessage key={index}>\n                    {context.hallId}: {name} {message.text}\n                  </SystemMessage>\n                )}\n              </>\n            );\n          })}\n        </List>\n        {config.chat && (\n          <Input>\n            <Grid\n              container\n              //   spacing={2}\n            >\n              <Grid item xs={9}>\n                <TextField\n                  fullWidth\n                  value={message}\n                  onChange={(event) => setMessage(event.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\" && !e.shiftKey) {\n                      e.preventDefault();\n                      publish(`vgig/${context.hallId}/audience/chat`, {\n                        user: context.userId,\n                        message: message,\n                      });\n                      setMessage(\"\");\n                    }\n                  }}\n                ></TextField>\n              </Grid>\n              <Grid item xs={3}>\n                <Button\n                  color=\"primary\"\n                  // variant=\"outlined\"\n                  fullWidth\n                  onClick={(event) => {\n                    if (message !== \"\") {\n                      publish(`vgig/${context.hallId}/audience/chat`, {\n                        user: context.userId,\n                        message: message,\n                      });\n                    }\n                    setMessage(\"\");\n                  }}\n                >\n                  <SendIcon></SendIcon>\n                </Button>\n              </Grid>\n            </Grid>\n          </Input>\n        )}\n      </Section>\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport styled from \"styled-components\";\n\nimport Audience from \"./Audience\";\nimport Lobby from \"./Lobby\";\nimport Orchestra from \"./Orchestra\";\nimport Interactions from \"./Interactions\";\nimport Mixer from \"./Mixer\";\n\nimport Context from \"../Context\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setName } from \"../store/reducers/users\";\nimport { addMessage } from \"../store/reducers/chat\";\n\nimport Chat from \"./Chat\";\n\nimport { addUser, setUsers, heartBeat } from \"../store/reducers/users\";\nimport store from \"../store\";\nimport config from \"../config/config.json\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n`;\nconst Desk = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  background-color: black;\n`;\n\nconst StyledModal = styled(Modal)`\n  width: 100%;\n  height: 100%;\n`;\nconst ModalContent = styled.div`\n  background-color: black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledChat = styled(Chat)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 33vw;\n`;\nexport default () => {\n  const { id } = useParams();\n  const [context, setContext] = useContext(Context);\n  const { publish, subscribe } = useClient();\n  const dispatch = useDispatch();\n  const [subscribed, setSubscribed] = useState(false);\n  const [open, setOpen] = useState(true);\n  const [showConsole, setShowConsole] = useState(false);\n\n  useEffect(() => {\n    if (context.hallId === id) return;\n    console.log(\"storing hall id in context\");\n    setContext({ ...context, hallId: id });\n  }, [id, context, setContext]);\n\n  useEffect(() => {\n    if (subscribed) return;\n    setSubscribed(true);\n    console.log(\"subscribing to hall topics\");\n\n    subscribe(`${NAME}/${id}/audience/getUsers`, (topic, message) => {\n      console.log(topic, message);\n    });\n    subscribe(`${NAME}/${id}/audience/getUsers`, (topic, message) => {\n      console.log(`${message.from} requested to get users`);\n      if (message.from && message.from !== context.userId) {\n        console.log(`${message.from} requested to get users`);\n        publish(\n          `${NAME}/${id}/audience/setUsers`,\n          store.getState().users.users\n        );\n      }\n    });\n    subscribe(`${NAME}/${id}/audience/setUsers`, (topic, message) => {\n      dispatch(setUsers(message));\n    });\n    subscribe(`${NAME}/${id}/audience/enterLobby`, (topic, message) => {\n      dispatch(addUser(message.userId, \"anonymous \"));\n    });\n\n    subscribe(`${NAME}/${id}/audience/alive`, (topic, message) => {\n      dispatch(heartBeat(message.userId));\n    });\n\n    subscribe(`${NAME}/${id}/audience/setUserName`, (topic, message) => {\n      dispatch(setName(message.id, message.name));\n    });\n    subscribe(`${NAME}/${id}/audience/chat`, (topic, message) => {\n      dispatch(addMessage(message.user, message.message));\n    });\n\n    publish(`${NAME}/${id}/audience/getUsers`, { from: context.userId });\n    publish(`${NAME}/${id}/audience/enterLobby`, {\n      userId: context.userId,\n    });\n    setInterval(() => {\n      publish(`${NAME}/${id}/audience/alive`, { userId: context.userId });\n    }, 30 * 1000);\n  }, [id, subscribed, subscribe, publish, setSubscribed, dispatch, context]);\n\n  return (\n    <Container>\n      {(config.chat || config.console) && (\n        <AppBar position=\"sticky\" style={{ backgroundColor: \"transparent\" }}>\n          <Toolbar>\n            <IconButton\n              color=\"primary\"\n              onClick={(event) => {\n                setShowConsole(!showConsole);\n              }}\n            >\n              <ForumIcon></ForumIcon>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      )}\n      <StyledModal open={open}>\n        <ModalContent>\n          <Lobby\n            onEnter={(name) => {\n              publish(`${NAME}/${context.hallId}/audience/enter`, {\n                userId: context.userId,\n                name,\n              });\n              setOpen(false);\n            }}\n          ></Lobby>\n        </ModalContent>\n      </StyledModal>\n      <>\n        <Orchestra id={id}></Orchestra>\n        <Desk>\n          <Audience id={id}></Audience>\n          <Grid container>\n            <Grid item xs={12} sm={8}>\n              <Interactions id={id}></Interactions>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Mixer></Mixer>\n            </Grid>\n          </Grid>\n        </Desk>\n        {showConsole && (\n          <StyledChat\n            onClose={() => {\n              setShowConsole(false);\n            }}\n          ></StyledChat>\n        )}\n      </>\n    </Container>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(255, 255, 255)\",\n      // main: \"rgb(46, 94, 160)\",\n    },\n    secondary: {\n      main: \"rgb(220, 46, 40)\",\n    },\n  },\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        color: \"white\",\n      },\n      track: {\n        color: \"white\",\n      },\n      rail: {\n        color: \"white\",\n      },\n    },\n    MuiTextField: {\n      input: {\n        color: \"white !important\",\n      },\n    },\n  },\n});\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { start, Synth, now } from \"tone\";\n\nexport default () => {\n  return (\n    <>\n      <Button\n        onClick={() => {\n          start();\n          const synth = new Synth().toDestination();\n          const time = now();\n          synth.triggerAttackRelease(\"C4\", \"8n\", time);\n          synth.triggerAttackRelease(\"E4\", \"8n\", time + 0.5);\n          synth.triggerAttackRelease(\"G4\", \"8n\", time + 1);\n        }}\n      >\n        start\n      </Button>\n    </>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n  });\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}\n    >\n      <boxBufferGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\n    </mesh>\n  );\n}\nexport default () => {\n  return (\n    <>\n      <Canvas>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Box position={[-1.2, 0, 0]} />\n        <Box position={[1.2, 0, 0]} />\n      </Canvas>\n      ,\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useClient } from \"../../mqttConnection\";\n\nexport default () => {\n  const [message, setMessage] = useState({});\n  const { publish, subscribe } = useClient();\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Button\n        onClick={() => {\n          subscribe(\"vgig/test/audience/test\", (topic, message) => {\n            console.log(topic, JSON.parse(message));\n            setMessage(JSON.parse(message));\n          });\n        }}\n        variant=\"outlined\"\n      >\n        subscribe to topic\n      </Button>\n      <br />\n      <Button\n        onClick={() => {\n          console.log(JSON.stringify({ value: \"test\" }));\n          publish(\n            \"vgig/test/audience/test\",\n            JSON.stringify({ time: new Date(), value: \"test\" })\n          );\n        }}\n        variant=\"outlined\"\n      >\n        send test message on topic\n      </Button>\n      <br />\n      <div>\n        {message.time}, {message.value}\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Admin from \"./components/Admin\";\nimport Hall from \"./components/Hall\";\nimport Context, { Provider as ContextProvider } from \"./Context\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nimport store from \"./store\";\n\nimport Audio from \"./components/test/Audio\";\nimport Visual from \"./components/test/Visual\";\nimport Connection from \"./components/test/Connection\";\n\nconst App = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default () => {\n  return (\n    <App>\n      <ThemeProvider theme={theme}>\n        <StoreProvider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/test/audio\">\n                <Audio></Audio>\n              </Route>\n              <Route path=\"/test/visual\">\n                <Visual></Visual>\n              </Route>\n              <Route path=\"/test/connection\">\n                <Connection></Connection>\n              </Route>\n              <Route path=\"/halls/:id/admin\">\n                <ContextProvider value={Context}>\n                  <Admin></Admin>\n                </ContextProvider>\n              </Route>\n              <Route path=\"/halls/:id\">\n                <ContextProvider value={Context}>\n                  <Hall />\n                </ContextProvider>\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </StoreProvider>\n      </ThemeProvider>\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/enter.339b495d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.2ff80ac8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.1c2b70ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.1a2ceec2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.e59a4594.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.39b87e4e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.4ff4f6c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.cf244f92.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.1a3c06fb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/9.51f8712a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/10.addb6c15.mp3\";","module.exports = __webpack_public_path__ + \"static/media/11.35a178a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/12.dd328baa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/13.8c15668d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/14.c2c551c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/15.45ca4dca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/16.066aed20.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.c45d7231.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.56025ded.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.c2ecfa7c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.30b56d3b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.62f3207f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.ca179799.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.4d512d41.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.45c653fd.mp3\";"],"sourceRoot":""}