{"version":3,"sources":["assets/unacorda_C3.mp3","assets/jarbleambiencepad_C3.mp3","components/Home.js","libmqtt.ts","mqttConnection.js","constants.js","mqtt.js","utils.js","Context.js","store/reducers/users.js","store/reducers/mixer.js","store/reducers/chat.js","store/reducers/console.js","store/reducers/rootReducer.js","store/index.js","store/epics/rootEpic.js","components/Section.js","components/Audience.js","components/Lobby.js","midi.js","components/visualisation/Floor.js","components/visualisation/test.js","components/Visualisation.js","components/visualisation/Lights.js","components/visualisation/PostProcessing.js","components/Orchestra.js","components/Button.js","config/actions.js","components/Interactions.js","components/Mixer.js","components/Console.js","components/Chat.js","components/Hall.js","theme.js","App.js","serviceWorker.js","index.js","assets/enter.mp3","assets/instruments/1.mp3","assets/instruments/2.mp3","assets/instruments/3.mp3","assets/instruments/4.mp3","assets/instruments/5.mp3","assets/instruments/6.mp3","assets/instruments/7.mp3","assets/instruments/8.mp3","assets/instruments/9.mp3","assets/instruments/10.mp3","assets/instruments/11.mp3","assets/instruments/12.mp3","assets/instruments/13.mp3","assets/instruments/14.mp3","assets/instruments/15.mp3","assets/instruments/16.mp3","assets/clapping.mp3","assets/talk_C2.mp3","assets/talk_C3.mp3","assets/talk_C4.mp3","assets/shout.mp3","assets/singAlong.mp3","assets/sneeze.mp3","assets/cough.mp3","assets/photograph.mp3","assets/phone.mp3","assets/walk.mp3","assets/dance.mp3"],"names":["module","exports","version","Container","styled","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","onClick","context","state","resume","push","isWildcardTopic","topic","includes","useClient","options","client","connect","listeners","Map","on","console","log","error","messageTopic","message","forEach","listenersForTopic","wildcard","res","t","String","split","w","lt","slice","join","topicMatchesMQTTWildcard","listener","JSON","parse","toString","subscribe","fn","currentListeners","get","set","Error","publish","payload","stringify","unsubscribe","delete","getClient","createConnection","NAME","mqtt","Context","React","createContext","Provider","children","userId","setState","types","defaultState","users","heartBeats","volumeInteractions","volumeStage","glitch","messages","addToHistory","user","text","type","appReducer","combineReducers","action","Date","now","key","index","indexOf","splice","item","userAlreadyExists","id","sort","x","y","name","mixer","chat","unshift","time","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","run","action$","pipe","filter","switchMap","interval","map","takeUntil","ofType","dispatch","props","color","css","Title","title","Users","User","active","useDispatch","useContext","useSelector","useCallback","useEffect","from","getState","addUser","setInterval","Tooltip","placement","Actions","EnterButton","Button","onEnter","setName","fullWidth","label","onKeyPress","hallId","variant","status","rotation","PI","position","attach","args","geom","BoxBufferGeometry","matr","MeshNormalMaterial","rpi","Block","change","e","performance","geometry","Blocks","changeBlocks","handler","clearInterval","viewport","useThree","factor","width","height","size","Array","fill","_","left","top","scale","Box","mesh","useRef","coords","useFrame","current","ref","material","AnimatedSpikes","extend","meshline","Particle","analyzer","Text","anchorX","anchorY","Floor","intensity","focusDistance","focalLength","bokehScale","luminanceThreshold","luminanceSmoothing","opacity","eskil","offset","darkness","delay","duration","strength","mode","GlitchMode","SPORADIC","ratio","samples","Sample1","Sample2","Sample3","Sample4","Sample5","Sample6","Sample7","Sample8","Sample9","Sample10","Sample11","Sample12","Sample13","Sample14","Sample15","Sample16","channel","setChannel","instruments","setInstruments","subscribed","setSubscribed","volume","Channel","Destination","sample","Sampler","C3","note","velocity","statusTypes","triggerAttack","triggerRelease","style","background","camera","fov","colorManagement","Lights","Visualisation","PostProcessing","RoundButton","button","Label","span","borderColor","volumeNode","Volume","clapping","ClappingSample","enter","setEnter","leave","setLeave","talk","setTalk","shout","setShout","singAlong","setSingAlong","photograph","setPhotograph","phone","setPhone","sneeze","setSneeze","cough","setCough","walk","setWalk","dance","setDance","SingAlongSample","talking","C2","TalkC2Sample","TalkC3Sample","C4","TalkC4Sample","ShoutSample","EnterSample","PhotographSample","PhoneSample","WalkSample","DanceSample","SneezeSample","CoughSample","triggerAttackRelease","round","Section","Grid","container","actions","xs","StyledSlider","Slider","stageVolume","interactionsVolume","orientation","defaultValue","min","max","setVolumeStage","setVolumeInteractions","ul","Input","StyledModal","Modal","ModalContent","StyledChat","setMessage","showChatMessages","setShowChatMessages","showSystemMessages","setShowSystemMessages","allMessages","List","ChatMessage","li","SystemMessage","FormControlLabel","control","Switch","checked","shiftKey","preventDefault","useParams","setContext","open","setOpen","showConsole","setShowConsole","AppBar","backgroundColor","Toolbar","IconButton","Lobby","Orchestra","className","Audience","sm","Interactions","Mixer","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","theme","path","Hall","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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,MAAMA,EAAME,a,oBEzI5BlD,EAAOC,QAAU,IAA0B,mC,02CCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,+B,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.77054f07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unacorda_C3.4c254059.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jarbleambiencepad_C3.3312bc03.mp3\";","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {context} from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\nconst version = pc.version;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vgig,<br></br>the virtual concert hall for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (context.state !== \"running\") {\n                context.resume();\n              }\n              history.push(`/halls/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};","import { connect, MqttClient } from \"mqtt\"\n\nconst isWildcardTopic = (topic: string) =>\n    topic.includes(\"#\") || topic.includes(\"+\")\nexport default function topicMatchesMQTTWildcard(\n    topic: string,\n    wildcard: string\n) {\n    if (topic === wildcard) {\n        return []\n    } else if (wildcard === \"#\") {\n        return [topic]\n    }\n\n    let res = []\n\n    let t = String(topic).split(\"/\")\n    let w = String(wildcard).split(\"/\")\n\n    let i = 0\n    for (let lt = t.length; i < lt; i++) {\n        if (w[i] === \"+\") {\n            res.push(t[i])\n        } else if (w[i] === \"#\") {\n            res.push(t.slice(i).join(\"/\"))\n            return res\n        } else if (w[i] !== t[i]) {\n            return null\n        }\n    }\n\n    if (w[i] === \"#\") {\n        i += 1\n    }\n\n    return i === w.length ? res : null\n}\n\ninterface Client {\n    subscribe(topic: string, fn: Function): void\n    publish(topic: string, payload: string | number | object): void\n    publish(topic: string): void\n    unsubscribe(topic: string): void\n    getClient(): MqttClient\n}\n\nexport function createConnection(options: string) {\n    let client = connect(options)\n    let listeners: Map<string, Array<Function>> = new Map()\n\n    client.on(\"connect\", console.log)\n    client.on(\"disconnect\", console.log)\n    client.on(\"error\", console.error)\n\n    client.on(\"message\", (messageTopic, message) => {\n        listeners.forEach((listenersForTopic, topic) => {\n            if (\n                messageTopic === topic ||\n                (isWildcardTopic(topic) &&\n                    topicMatchesMQTTWildcard(messageTopic, topic))\n            ) {\n                listenersForTopic.forEach(listener => {\n                    try {\n                        listener(topic, JSON.parse(message.toString()))\n                    } catch (error) {\n                        listener(topic, {})\n                    }\n                })\n            }\n        })\n    })\n\n    return function useClient(): Client {\n        return {\n            subscribe: (topic: string, fn: Function) => {\n                        let currentListeners = listeners.get(topic)\n                        listeners.set(topic, [...(currentListeners || []), fn])\n    \n                        // if (!currentListeners) {\n                            client.subscribe(topic)\n                        // }\n                        \n                        let newListeners = listeners.get(topic)// ? listeners.get(topic) : []\n                        if(!newListeners) {\n                            throw new Error(\n                                `useClient: ${topic} does not exist`\n                            )\n                        }\n                        // newListeners = newListeners.filter((f) => f !== fn)\n\n                        // if (newListeners.length > 0) {\n                        //     listeners.set(topic, newListeners)\n                        // } else {\n                        //     listeners.delete(topic)\n                        //     client.unsubscribe(topic)\n                        // }\n                    // }\n            },\n            publish: (\n                topic: string,\n                payload?: string | number | object\n            ) => {\n                // client.subscribe(topic)\n                if (isWildcardTopic(topic)) {\n                    throw new Error(\n                        `useTopic: Tried publishing on wildcard topic ${topic}`\n                    )\n                } else {\n                    client.publish(topic, JSON.stringify(payload))\n                }\n            },\n            unsubscribe: (\n                topic: string\n            ) => {\n                listeners.delete(topic)\n                client.unsubscribe(topic)\n            },\n            getClient: () => client\n        }\n    }\n}\n","import { createConnection } from \"./libmqtt\"\n\n// export const useClient = createConnection({\n//     protocol: \"wss\",\n//     username: \"try\",\n//     password: \"try\",\n//     host: \"broker.shiftr.io\",\n//     port: 80,\n// })\n// export const useClient = createConnection({\n//     protocol: \"ws\", \n //     host: \"localhost\",\n//     port: 9001,\n// })\n\nexport const useClient = createConnection(\"wss://try:try@broker.shiftr.io\")","const NAME = \"vgig\"\nexport {NAME} ","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n\nconst publish = (topic, payload) => {\n    client.publish(topic, JSON.stringify(payload))\n}\n\nexport {publish}","const generateId = (length) => {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  export {generateId}","import React, {useState} from \"react\"\nimport {generateId} from \"./utils\"\nconst Context = React.createContext();\n\nconst Provider = ({children}) => {\n    const [state, setState] = useState({userId: generateId(8)});\n    return (\n        <Context.Provider value={[state, setState]}>\n            {children}\n        </Context.Provider>\n\n    )\n}\nexport default Context\nexport {Provider} ","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  HEARTBEAT: \"HEARTBEAT\",\n  SETNAME: \"SETNAME\",\n};\n\nconst defaultState = {\n  users: [], //all users\n  heartBeats: new Map(),\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 30 * 1000) {\n          heartBeats.delete(key);\n          const index = users.indexOf(key);\n          if (index !== -1) users.splice(index, 1);\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      let users = [...state.users];\n      action.payload.value.forEach((item) => {\n        let userAlreadyExists = false;\n        users.forEach((user) => {\n          if (user.id === item.id) {\n            userAlreadyExists = true;\n          }\n        });\n        if (!userAlreadyExists) users.push(item);\n      });\n\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      let userAlreadyExists = false;\n      users.forEach((user) => {\n        if (user.id === action.payload.id) {\n          userAlreadyExists = true;\n        }\n      });\n      if (!userAlreadyExists)\n        users.push({ id: action.payload.id, name: action.payload.name });\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.SETNAME: {\n      let users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].name = action.payload.name;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (id, name) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (id, name) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport { types };\n","const types = {\n  SETVOLUMEINTERACTIONS: \"SETVOLUMEINTERACTIONS\",\n  SETVOLUMESTAGE: \"SETVOLUMESTAGE\",\n  SETGLITCH: \"SETGLITCH\",\n};\n\nconst defaultState = {\n  volumeInteractions: -64,\n  volumeStage: -32,\n  glitch: true,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETVOLUMEINTERACTIONS: {\n      return {\n        ...state,\n        volumeInteractions: action.payload.value,\n      };\n    }\n    case types.SETVOLUMESTAGE: {\n      return {\n        ...state,\n        volumeStage: action.payload.value,\n      };\n    }\n    case types.SETGLITCH: {\n      return {\n        ...state,\n        glitch: action.payload.value,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setVolumeInteractions = (value) => {\n  return {\n    type: types.SETVOLUMEINTERACTIONS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setVolumeStage = (value) => {\n  return {\n    type: types.SETVOLUMESTAGE,\n    payload: {\n      value,\n    },\n  };\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift({\n        ...action.payload.message,\n        time: new Date(),\n        type: \"CHAT\",\n      });\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (user, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        user,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","const types = {\n  ADDTOHISTORY: \"ADDTOHISTORY\",\n};\n\nconst defaultState = {\n  history: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDTOHISTORY: {\n      let history = [...state.history];\n      history.unshift({\n        ...action.payload,\n        time: new Date(),\n        type: \"SYSTEM\",\n      });\n      history = history.slice(0, 1000);\n      return {\n        ...state,\n        history,\n      };\n    }\n  }\n  return state;\n};\n\nconst addToHistory = (user, text) => {\n  return {\n    type: types.ADDTOHISTORY,\n    payload: {\n      user,\n      text,\n    },\n  };\n};\nexport { addToHistory };\n","import { combineReducers } from \"redux\";\n\nimport users from \"./users\";\nimport mixer from \"./mixer\";\nimport chat from \"./chat\";\nimport console from \"./console\";\n\nconst appReducer = combineReducers({\n  users,\n  mixer,\n  chat,\n  console\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\n// store.subscribe(() => console.log(store.getState()))\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","import { filter, switchMap, map, takeUntil } from \"rxjs/operators\";\nimport { interval } from \"rxjs\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === \"STARTHEARTBEAT\"),\n    switchMap((action) =>\n      interval(30000).pipe(\n        map((action) => {\n          return {\n            type: \"HEARTBEAT\",\n            payload: {\n              value: 1,\n            },\n          };\n        }),\n        takeUntil(action$.ofType(\"STOPHEARTBEAT\"))\n      )\n    )\n  );\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100%;\n  text-align: left;\n  ${(props) =>\n    props.color &&\n    css`\n      border-bottom: 3px solid ${props.color};\n      border-left: 1px solid white;\n      border-right: 1px solid white;\n    `}\n`;\nconst Title = styled.section`\n  width: 100%;\n  text-transform: uppercase;\n  color: white;\n  text-align: center;\n  ${(props) =>\n    props.color &&\n    css`\n      background-color: ${props.color};\n    `}\n`;\n\nexport default ({ title, color, children }) => {\n  return (\n    <Container color={color}>\n      <Title color={color}>{title}</Title>\n      {children}\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n// import * as THREE from 'three'\n// import { OrbitControls } from 'drei'\n// import { Canvas } from 'react-three-fiber'\n// import { useSprings, a } from 'react-spring/three'\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport { publish } from \"../mqtt\";\nimport Context from \"../Context\";\n\nimport { addUser, setUsers, heartBeat } from \"../store/reducers/users\";\nimport store from \"../store\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst Users = styled.div`\n  text-align: left;\n`;\nconst User = styled.div`\n  height: 25px;\n  width: 25px;\n  background-color: ${(props) =>\n    props.active ? \"rgb(255,170,100)\" : \"rgb(254, 250, 170)\"};\n  border-radius: 50%;\n  display: inline-block;\n  margin: 5px;\n  border: 1px solid black;\n`;\n\n// const Sphere = ({position, color}) => {\n//   return (\n//     <mesh visible userData={{ test: \"hello\" }} position={position} castShadow>\n//       <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n//       <meshStandardMaterial attach=\"material\" color={color}        transparent        roughness={0.1}        metalness={0.1}      />\n//     </mesh>\n//     );\n// }\n\nexport default ({ id }) => {\n  const dispatch = useDispatch();\n  const { subscribe, unsubscribe } = useClient();\n  const [context, setContext] = useContext(Context);\n\n  const users = useSelector((state) => state.users.users);\n  const getUsers = useCallback(() => {\n    return users;\n  });\n  useEffect(\n    () => {\n      if (id) {\n        subscribe(`${NAME}/${id}/getUsers`, (topic, message) => {\n          if (message.from && message.from !== context.userId) {\n            publish(`${NAME}/${id}/setUsers`, store.getState().users.users);\n          }\n        });\n        subscribe(`${NAME}/${id}/setUsers`, (topic, message) => {\n          dispatch(setUsers(message));\n        });\n        subscribe(`${NAME}/${id}/enterLobby`, (topic, message) => {\n          dispatch(addUser(message.userId, \"anonymous \"));\n        });\n\n        subscribe(`${NAME}/${id}/alive`, (topic, message) => {\n          dispatch(heartBeat(message.userId));\n        });\n\n        publish(`${NAME}/${id}/getUsers`, { from: context.userId });\n        setInterval(() => {\n          publish(`${NAME}/${id}/alive`, { userId: context.userId });\n        }, 30 * 1000);\n      }\n    },\n    [id],\n    () => {\n      unsubscribe(`${NAME}/${id}/getUsers`);\n    }\n  );\n  return (\n    <Container>\n      {/* <Section title={\"audience\"} color={\"rgb(46, 94, 160)\"}> */}\n      <Users>\n        {users.map((user, index) => {\n          const position = [(index / users.length) * 50, 0, 0];\n          return (\n            <Tooltip key={user.id} title={user.name} placement=\"right-start\">\n              <User key={user.id} active={context.userId === user.id}>\n                {/* {user} */}\n              </User>\n            </Tooltip>\n          );\n        })}\n      </Users>\n      {/* </Section> */}\n    </Container>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport Context from \"../Context\";\n\nconst Container = styled.div``;\nconst Actions = styled.section`\n  margin-top: 24px !important;\n  display: flex;\n  flex-direction: row-reverse;\n`;\nconst EnterButton = styled(Button)``;\n\nexport default ({ onEnter }) => {\n  const { subscribe, publish, getClient } = useClient();\n  const [name, setName] = useState(\"\");\n  const [context] = useContext(Context);\n  return (\n    <Container>\n      <div>\n        hello, <br></br>please enter your name and enjoy the show.\n      </div>\n      <TextField\n        fullWidth\n        label=\"name\"\n        value={name}\n        onChange={(event) => {\n          setName(event.target.value);\n        }}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\" && name !== \"\") {\n            publish(`${NAME}/${context.hallId}/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }\n        }}\n      ></TextField>\n      <br></br>\n\n      <Actions>\n        <EnterButton\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => {\n            if (name === \"\") return;\n            publish(`${NAME}/${context.hallId}/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }}\n        >\n          enter\n        </EnterButton>\n      </Actions>\n    </Container>\n  );\n};\n","const status = {\n    noteOn: 144,\n    noteOff: 128\n}\nconst createNoteOnMessage = (channel, note, vel) => {\n    return {\n        channel,\n        status: status.noteOn,\n        note,\n        velocity: vel ? vel : 127\n    }\n}\nexport {createNoteOnMessage, status}","import React from \"react\";\nimport * as THREE from \"three\";\nimport { extend, Canvas, useFrame } from \"react-three-fiber\";\n\nexport default () => {\n  return (\n    <>\n      <mesh rotation={[-Math.PI / 3, 0, 0]} position={[0, -5, 0]}>\n        {/* <mesh> */}\n        <planeBufferGeometry\n          attach=\"geometry\"\n          args={[100, 100]}\n        ></planeBufferGeometry>\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"rgb(64,32,32)\"\n        ></meshStandardMaterial>\n      </mesh>\n    </>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { BoxBufferGeometry, MeshNormalMaterial } from \"three\";\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport {\n  unstable_LowPriority as low,\n  unstable_runWithPriority as run,\n} from \"scheduler\";\n\nconst SLOWDOWN = 1;\nconst ROW = 20;\nconst BLOCK_AMOUNT = 600;\nconst SPIKE_AMOUNT = 1000;\nconst geom = new BoxBufferGeometry(1, 1, 1);\nconst matr = new MeshNormalMaterial();\nconst rpi = () => Math.random() * Math.PI;\n\nfunction Block({ change, ...props }) {\n  const [color, set] = useState(0);\n\n  // Artificial slowdown ...\n  if (color > 0) {\n    const e = performance.now() + SLOWDOWN;\n    while (performance.now() < e) {}\n  }\n\n  //   useEffect(() => {\n  //     if (change)\n  //       setTimeout(\n  //         () => run(low, () => set(Math.round(Math.random() * 0xffffff))),\n  //         Math.random() * 1000\n  //       );\n  //   }, [change]);\n\n  return (\n    <mesh {...props} geometry={geom}>\n      <meshBasicMaterial attach=\"material\" color={color} />\n    </mesh>\n  );\n}\n\nfunction Blocks() {\n  const [changeBlocks, set] = useState(false);\n  useEffect(() => {\n    const handler = setInterval(() => set((state) => !state), 2000);\n    return () => clearInterval(handler);\n  });\n\n  const { viewport } = useThree();\n  const { width, height } = viewport().factor;\n  const size = width / 100 / ROW;\n  return new Array(BLOCK_AMOUNT).fill().map((_, i) => {\n    const left = -width / 100 / 2 + size / 2;\n    const top = height / 100 / 2 - size / 2;\n    const x = (i % ROW) * size;\n    const y = Math.floor(i / ROW) * -size;\n    return (\n      <Block\n        key={i}\n        change={changeBlocks}\n        scale={[size, size, size]}\n        position={[left + x, top + y, 0]}\n      />\n    );\n  });\n}\n\nfunction Box() {\n  let t = 0;\n  const mesh = useRef();\n  const [coords] = useState(() => [rpi(), rpi(), rpi()]);\n  useFrame(\n    () =>\n      mesh.current &&\n      mesh.current.rotation.set(\n        coords[0] + (t += 0.01),\n        coords[1] + t,\n        coords[2] + t\n      )\n  );\n  return <mesh ref={mesh} geometry={geom} material={matr} scale={[2, 2, 2]} />;\n}\n\nfunction AnimatedSpikes() {\n  return new Array(SPIKE_AMOUNT).fill().map((_, i) => <Box key={i} />);\n}\n\nexport default () => {\n  return (\n    <>\n      <Blocks />\n      <AnimatedSpikes />\n    </>\n  );\n};\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport * as meshline from \"threejs-meshline\";\nimport { extend, Canvas, useFrame } from \"react-three-fiber\";\nimport { Text } from \"@react-three/drei/Text\";\n\nimport Floor from \"./visualisation/Floor\";\nimport Test from \"./visualisation/test\";\n\nextend(meshline);\n\nconst Particle = ({ position }) => {\n  const mesh = useRef(null);\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n    // console.log(\"new frame\", analyzer.getValue())\n  });\n  return (\n    <mesh position={position} ref={mesh}>\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]}></boxBufferGeometry>\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"blue\"\n      ></meshStandardMaterial>\n    </mesh>\n  );\n};\n\nexport default ({ analyzer }) => {\n  return (\n    <>\n      <Text\n        color=\"white\" // default\n        anchorX=\"center\" // default\n        anchorY=\"middle\" // default\n      >\n        here will be an audio visualisation\n      </Text>\n      <Floor></Floor>\n      <Particle position={[-2, 0, 0]}></Particle>\n      <Particle position={[-1, 2, 0]}></Particle>\n      <Particle position={[2, 3, 0]}></Particle>\n      <mesh>\n        <bufferGeometry></bufferGeometry>\n      </mesh>\n      <Test></Test>\n\n      {/* <Lines count={fftValues.length} colors={['rgb(100,0,0)', '#222', '#aaa', '#e0feff', 'rgb(100,0,60)', 'rgb(127,32,64)']} /> */}\n      {\n        // fftValues.forEach((value, index) => {\n        //     console.log(value, index)\n        // })\n      }\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <>\n      <ambientLight intensity={0.4}></ambientLight>\n      <pointLight position={[-10, -5, 5]} intensity={0.4}></pointLight>\n      <pointLight position={[7, -3, 5]} intensity={0.4}></pointLight>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  EffectComposer,\n  DepthOfField,\n  Bloom,\n  Noise,\n  Vignette,\n  Glitch,\n} from \"@react-three/postprocessing\";\nimport { GlitchMode } from \"postprocessing\";\n\nexport default () => {\n  const glitch = useSelector((state) => state.mixer.glitch);\n  return (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={0.02}\n        bokehScale={2}\n        height={480}\n      />\n      <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n      <Noise opacity={0.02} />\n      <Vignette eskil={false} offset={0.1} darkness={1.1} />\n      <Glitch\n        delay={[1.5, 3.5]} // min and max glitch delay\n        duration={[0.6, 1.0]} // min and max glitch duration\n        strength={[0.3, 1.0]} // min and max glitch strength\n        mode={GlitchMode.SPORADIC} // glitch mode\n        active={glitch} // turn on/off the effect (switches between \"mode\" prop and GlitchMode.DISABLED)\n        ratio={0.85} // Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\n      />\n    </EffectComposer>\n  );\n};\n","import React, { useState, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport { Provider as StoreProvider, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  Analyser,\n  Freeverb,\n  PingPongDelay,\n  Destination,\n  Sampler,\n  FMSynth,\n  MetalSynth,\n  NoiseSynth,\n  Channel,\n  now,\n} from \"tone\";\nimport { status as statusTypes } from \"../midi\";\nimport UnaCorda_C3 from \"../assets/unacorda_C3.mp3\";\nimport JarbleAmbiencePad_C3 from \"../assets/jarbleambiencepad_C3.mp3\";\n\nimport Visualisation from \"./Visualisation\";\nimport Lights from \"./visualisation/Lights\";\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls } from \"drei\";\n\nimport { useClient } from \"../mqttConnection\";\n\nimport { NAME } from \"../constants\";\n\nimport PostProcessing from \"./visualisation/PostProcessing\";\nimport store from \"../store\";\n\nimport Sample1 from \"../assets/instruments/1.mp3\";\nimport Sample2 from \"../assets/instruments/2.mp3\";\nimport Sample3 from \"../assets/instruments/3.mp3\";\nimport Sample4 from \"../assets/instruments/4.mp3\";\nimport Sample5 from \"../assets/instruments/5.mp3\";\nimport Sample6 from \"../assets/instruments/6.mp3\";\nimport Sample7 from \"../assets/instruments/7.mp3\";\nimport Sample8 from \"../assets/instruments/8.mp3\";\nimport Sample9 from \"../assets/instruments/9.mp3\";\nimport Sample10 from \"../assets/instruments/10.mp3\";\nimport Sample11 from \"../assets/instruments/11.mp3\";\nimport Sample12 from \"../assets/instruments/12.mp3\";\nimport Sample13 from \"../assets/instruments/13.mp3\";\nimport Sample14 from \"../assets/instruments/14.mp3\";\nimport Sample15 from \"../assets/instruments/15.mp3\";\nimport Sample16 from \"../assets/instruments/16.mp3\";\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n  Sample9,\n  Sample10,\n  Sample11,\n  Sample12,\n  Sample13,\n  Sample14,\n  Sample15,\n  Sample16,\n];\n\nconst Container = styled.div`\n  width: 100%;\n  height: 66.66%;\n`;\n\nexport default ({ id }) => {\n  const [channel, setChannel] = useState(null);\n  const [instruments, setInstruments] = useState(null);\n  const [analyzer, setAnalyzer] = useState(null);\n  const [fftValues, setFftValues] = useState([]);\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { subscribe, unsubscribe } = useClient();\n  const volume = useSelector((state) => state.mixer.volumeStage);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const channel = new Channel(-32);\n    channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].connect(channel);\n    });\n    setChannel(channel);\n    setInstruments(instruments);\n  }, []);\n\n  useEffect(() => {\n    if (!instruments || subscribed) return;\n    setSubscribed(true);\n    console.log(\"subscribe to orchestra topic\", instruments);\n    subscribe(`${NAME}/${id}/orchestra`, (topic, message) => {\n      const { channel, note, status, velocity } = message;\n      if (channel && channel > 0 && channel <= 16) {\n        if (status === statusTypes.noteOn) {\n          instruments[channel - 1].triggerAttack(note, now(), velocity);\n        }\n        if (status === statusTypes.noteOff) {\n          instruments[channel - 1].triggerRelease(note, now());\n        }\n      }\n      // if(status !== statusTypes.noteOn && status !== statusTypes.noteOff) return\n    });\n  }, [instruments]);\n\n  // console.log(analyzer ? analyzer.getValue() : \"\")\n  return (\n    <Container>\n      <Canvas\n        style={{ background: \"rgb(0,0,0)\" }}\n        camera={{ position: [0, 0, 10], fov: 45 }}\n        colorManagement\n      >\n        <OrbitControls></OrbitControls>\n        <Lights></Lights>\n\n        <Visualisation analyzer={analyzer}></Visualisation>\n        <StoreProvider store={store}>\n          <PostProcessing></PostProcessing>\n        </StoreProvider>\n      </Canvas>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  /* border: 1px dashed white; */\n`;\n\nconst RoundButton = styled.button`\n  background-color: rgba(254, 250, 170, 1);\n  border: none;\n  color: white;\n  height: 32px;\n  width: 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 5px;\n  /* border-radius: 50%; */\n`;\nconst Label = styled.span`\n  color: white;\n`;\n\nconst Button = ({ label, borderColor, onClick }) => {\n  return (\n    <Container>\n      <RoundButton onClick={onClick} borderColor={borderColor}></RoundButton>\n      <br></br>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n\nexport default Button;\n","export default [\n  {\n    id: \"applaude\",\n    label: \"applaude\",\n    color: \"#fa2233\",\n  },\n  {\n    id: \"talk\",\n    label: \"talk\",\n    color: \"#fa8833\",\n  },\n  {\n    id: \"photograph\",\n    label: \"photograph\",\n    color: \"#2a2833\",\n  },\n  {\n    id: \"walk\",\n    label: \"walk\",\n    color: \"#2a2833\",\n  },\n  {\n    id: \"sneeze\",\n    label: \"sneeze\",\n    color: \"#2af0fa\",\n  },\n  {\n    id: \"cough\",\n    label: \"cough\",\n    color: \"#aaf0fa\",\n  },\n  {\n    id: \"dance\",\n    label: \"dance\",\n    color: \"#aaf425\",\n  },\n  {\n    id: \"shout\",\n    label: \"shout\",\n    color: \"#00f425\",\n  },\n  {\n    id: \"singAlong\",\n    label: \"sing along\",\n    color: \"#022422\",\n  },\n  {\n    id: \"phone\",\n    label: \"phone\",\n    color: \"#425422\",\n  },\n];\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport { Sampler, Channel, Volume, Destination } from \"tone\";\n\nimport Context from \"../Context\";\nimport ClappingSample from \"../assets/clapping.mp3\";\nimport TalkC2Sample from \"../assets/talk_C2.mp3\";\nimport TalkC3Sample from \"../assets/talk_C3.mp3\";\nimport TalkC4Sample from \"../assets/talk_C4.mp3\";\nimport ShoutSample from \"../assets/shout.mp3\";\nimport SingAlongSample from \"../assets/singAlong.mp3\";\nimport EnterSample from \"../assets/enter.mp3\";\nimport SneezeSample from \"../assets/sneeze.mp3\";\nimport CoughSample from \"../assets/cough.mp3\";\nimport PhotographSample from \"../assets/photograph.mp3\";\nimport PhoneSample from \"../assets/phone.mp3\";\nimport WalkSample from \"../assets/walk.mp3\";\nimport DanceSample from \"../assets/dance.mp3\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { addToHistory } from \"../store/reducers/console\";\n\nimport Button from \"./Button\";\nimport Section from \"./Section\";\nimport actions from \"../config/actions\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst channel = new Channel(-32);\nconst volumeNode = new Volume(0);\nchannel.connect(volumeNode);\nvolumeNode.connect(Destination);\n\nconst clapping = new Sampler({ C3: ClappingSample });\nclapping.connect(channel);\n\nexport default () => {\n  const [context] = useContext(Context);\n  const { subscribe, publish, getClient } = useClient();\n  const [enter, setEnter] = useState(null);\n  const [leave, setLeave] = useState(null);\n  const [talk, setTalk] = useState(null);\n  const [shout, setShout] = useState(null);\n  const [singAlong, setSingAlong] = useState(null);\n  const [photograph, setPhotograph] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [sneeze, setSneeze] = useState(null);\n  const [cough, setCough] = useState(null);\n  const [walk, setWalk] = useState(null);\n  const [dance, setDance] = useState(null);\n  // const [channel, setChannel] = useState(null)\n  // const [volume, setVolume] = useState(null)\n\n  const dispatch = useDispatch();\n  const volume = useSelector((state) => state.mixer.volumeInteractions);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const singAlong = new Sampler({ C3: SingAlongSample });\n    singAlong.connect(channel);\n    setSingAlong(singAlong);\n\n    const talking = new Sampler({\n      C2: TalkC2Sample,\n      C3: TalkC3Sample,\n      C4: TalkC4Sample,\n    });\n\n    talking.connect(channel);\n    setTalk(talking);\n\n    const shout = new Sampler({ C3: ShoutSample });\n    shout.connect(channel);\n    setShout(shout);\n\n    const enter = new Sampler({ C3: EnterSample });\n    enter.connect(channel);\n    setEnter(enter);\n\n    const leave = new Sampler({ C3: EnterSample });\n    leave.connect(channel);\n    setLeave(leave);\n\n    const photograph = new Sampler({ C3: PhotographSample });\n    photograph.connect(channel);\n    setPhotograph(photograph);\n\n    const phone = new Sampler({ C3: PhoneSample });\n    phone.connect(channel);\n    setPhone(phone);\n\n    const walk = new Sampler({ C3: WalkSample });\n    walk.connect(channel);\n    setWalk(walk);\n\n    const dance = new Sampler({ C3: DanceSample });\n    dance.connect(channel);\n    setDance(dance);\n\n    const sneeze = new Sampler({ C3: SneezeSample });\n    sneeze.connect(channel);\n    setSneeze(sneeze);\n\n    const cough = new Sampler({ C3: CoughSample });\n    cough.connect(channel);\n    setCough(cough);\n\n    const client = getClient();\n    client.on(\"connect\", () => {});\n  }, []);\n  useEffect(() => {\n    subscribe(`${NAME}/${context.hallId}/applaude`, (topic, message) => {\n      clapping.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"applauded\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/talk`, (topic, message) => {\n      talk.triggerAttackRelease(20 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"talked\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/shout`, (topic, message) => {\n      shout.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"shouted\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/singAlong`, (topic, message) => {\n      singAlong.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"sang along\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/enter`, (topic, message) => {\n      enter.triggerAttackRelease(72, 20);\n      dispatch(addToHistory(message.userId, \"entered\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/leave`, (topic, message) => {\n      console.log(\"user left\", message);\n      dispatch(addToHistory(message.userId, \"left\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/photograph`, (topic, message) => {\n      photograph.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"took a photo\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/phone`, (topic, message) => {\n      phone.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"took a phone call\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/walk`, (topic, message) => {\n      walk.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"walked\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/dance`, (topic, message) => {\n      dance.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"danced\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/sneeze`, (topic, message) => {\n      sneeze.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"sneezed\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/cough`, (topic, message) => {\n      cough.triggerAttackRelease(50 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"coughed\"));\n    });\n  }, [\n    context.hallId,\n    talk,\n    singAlong,\n    walk,\n    phone,\n    photograph,\n    dance,\n    cough,\n    sneeze,\n    enter,\n    leave,\n  ]);\n\n  return (\n    <Container>\n      <Section title={\"actions\"} color={\"rgb(46, 94, 160)\"}>\n        <Grid container>\n          {actions.map((action, index) => {\n            return (\n              <Grid item xs={2} key={index}>\n                <Button\n                  key={action.id}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    publish(`${NAME}/${context.hallId}/${action.id}`, {\n                      userId: context.userId,\n                    });\n                  }}\n                  label={action.label}\n                ></Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Section>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\n\nimport { setVolumeInteractions, setVolumeStage } from \"../store/reducers/mixer\";\nimport Section from \"./Section\";\nimport Button from \"./Button\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nconst StyledSlider = styled(Slider)`\n  height: 50px !important;\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const stageVolume = useSelector((state) => state.mixer.volumeStage);\n  const interactionsVolume = useSelector(\n    (state) => state.mixer.volumeInteractions\n  );\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={6}>\n          <Section title={\"light\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    // publish(`${NAME}/${context.hallId}/${action}`, {\n                    //   userId: context.userId,\n                    // });\n                  }}\n                  label={\"glitch\"}\n                ></Button>\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n        <Grid item xs={6}>\n          <Section title={\"audio\"} color={\"rgb(220, 46, 40)\"}>\n            <StyledSlider\n              orientation=\"vertical\"\n              //   getAriaValueText={valuetext}\n              defaultValue={-100}\n              min={-100}\n              max={0}\n              value={stageVolume}\n              onChange={(event, value) => {\n                dispatch(setVolumeStage(value));\n              }}\n            />\n            <StyledSlider\n              orientation=\"vertical\"\n              //   getAriaValueText={valuetext}\n              defaultValue={-100}\n              min={-100}\n              max={0}\n              value={interactionsVolume}\n              onChange={(event, value) => {\n                dispatch(setVolumeInteractions(value));\n              }}\n            />\n          </Section>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { compareAsc, format } from \"date-fns\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  overflow-y: scroll;\n`;\n\nconst Time = styled.span`\n  font-style: italic;\n  color: #333;\n`;\nconst User = styled.span`\n  font-weight: bold;\n  color: #333;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nexport default () => {\n  const history = useSelector((state) => state.console.history);\n  const users = useSelector((state) => state.users.users);\n  return (\n    <Container>\n      <Section title={\"console\"} color={\"rgb(46, 94, 160)\"}>\n        <List>\n          {history.map((item, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === item.user) name = user.name;\n            });\n            return (\n              <li key={index}>\n                <Time>{format(item.time, \"HH:mm:ss\")}</Time>:{\" \"}\n                <User>{name}</User> {item.text}\n              </li>\n            );\n          })}\n        </List>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Context from \"../Context\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { compareAsc, format } from \"date-fns\";\nimport { useClient } from \"../mqttConnection\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 33vw;\n  @media only screen and (max-width: 600px) {\n    width: 100vw;\n  }\n\n  height: 50vh;\n  position: absolute;\n  top: 0;\n  right: 0;\n  flex-grow: 1;\n  overflow-y: scroll;\n  background-color: white;\n  color: black;\n  z-index: 1101;\n`;\n\nconst Input = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n`;\n\nconst Time = styled.span`\n  font-style: italic;\n  color: #333;\n`;\nconst User = styled.span`\n  font-weight: bold;\n  color: #333;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nexport default () => {\n  const [message, setMessage] = useState(\"\");\n  const [showChatMessages, setShowChatMessages] = useState(true);\n  const [showSystemMessages, setShowSystemMessages] = useState(false);\n  const history = useSelector((state) => state.console.history);\n  const messages = useSelector((state) => state.chat.messages);\n\n  const allMessages = [...history, ...messages].sort((x, y) => x.time < y.time);\n  const [context] = useContext(Context);\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.users);\n  const { subscribe, publish, getClient } = useClient();\n\n  const List = styled.ul`\n    list-style-type: none;\n  `;\n\n  const ChatMessage = styled.li``;\n  const SystemMessage = styled.li`\n    font-style: italic;\n    text-align: right;\n  `;\n\n  return (\n    <Container>\n      <Section title={\"chat/console\"} color={\"rgb(46, 94, 160)\"}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showChatMessages}\n              onChange={(event) => {\n                setShowChatMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"chat messages\"\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showSystemMessages}\n              onChange={(event) => {\n                setShowSystemMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"system messages\"\n        />\n\n        <List>\n          {allMessages.map((message, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === message.user) name = user.name;\n            });\n            return (\n              <>\n                {message.type === \"CHAT\" && showChatMessages && (\n                  <ChatMessage key={index}>\n                    {name}: {message.text}\n                  </ChatMessage>\n                )}\n                {message.type === \"SYSTEM\" && showSystemMessages && (\n                  <SystemMessage key={index}>\n                    {context.hallId}: {name} {message.text}\n                  </SystemMessage>\n                )}\n              </>\n            );\n          })}\n        </List>\n        <Input>\n          <Grid\n            container\n            //   spacing={2}\n          >\n            <Grid item xs={9}>\n              <TextField\n                fullWidth\n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    publish(`vgig/${context.hallId}/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                    setMessage(\"\");\n                  }\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                color=\"primary\"\n                // variant=\"outlined\"\n                fullWidth\n                onClick={(event) => {\n                  if (message !== \"\") {\n                    publish(`vgig/${context.hallId}/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                  }\n                  setMessage(\"\");\n                }}\n              >\n                <SendIcon></SendIcon>\n              </Button>\n            </Grid>\n          </Grid>\n        </Input>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport styled from \"styled-components\";\nimport Audience from \"./Audience\";\nimport Lobby from \"./Lobby\";\nimport Orchestra from \"./Orchestra\";\nimport Interactions from \"./Interactions\";\nimport Mixer from \"./Mixer\";\n\nimport Context from \"../Context\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setName } from \"../store/reducers/users\";\nimport { addMessage } from \"../store/reducers/chat\";\n\nimport Console from \"./Console\";\nimport Chat from \"./Chat\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n`;\n\nconst StyledModal = styled(Modal)`\n  width: 100%;\n  height: 100%;\n`;\nconst ModalContent = styled.div`\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledChat = styled(Chat)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 33vw;\n`;\nconst panels = { CHAT: \"CHAT\", CONSOLE: \"CONSOLE\" };\nexport default () => {\n  const { id } = useParams();\n  const [context, setContext] = useContext(Context);\n  const { publish, subscribe } = useClient();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(true);\n  const [showConsole, setShowConsole] = useState(false);\n\n  useEffect(() => {\n    setContext({ ...context, hallId: id });\n    publish(`${NAME}/${id}/enterLobby`, {\n      userId: context.userId,\n    });\n    subscribe(`${NAME}/${id}/setUserName`, (topic, message) => {\n      dispatch(setName(message.id, message.name));\n    });\n    subscribe(`${NAME}/${id}/chat`, (topic, message) => {\n      dispatch(addMessage(message.user, message.message));\n    });\n    // publish(`${NAME}/${id}/getUsers`, { from: context.userId });\n    // setInterval(() => {\n    //   publish(`${NAME}/${id}/alive`, { userId: context.userId });\n    // }, 30 * 1000);hallId\n  }, [id]);\n\n  return (\n    <Container>\n      <AppBar position=\"sticky\" style={{ backgroundColor: \"transparent\" }}>\n        <Toolbar>\n          <IconButton\n            color=\"primary\"\n            onClick={(event) => {\n              setShowConsole(!showConsole);\n            }}\n          >\n            <ForumIcon></ForumIcon>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <StyledModal open={open}>\n        <ModalContent>\n          <Lobby\n            onEnter={(name) => {\n              publish(`${NAME}/${context.hallId}/enter`, {\n                userId: context.userId,\n                name,\n              });\n              setOpen(false);\n            }}\n          ></Lobby>\n        </ModalContent>\n      </StyledModal>\n      <>\n        <Orchestra className=\"orchestra\" id={id}></Orchestra>\n        <Audience className=\"audience\" id={id}></Audience>\n        <Grid container>\n          <Grid item xs={12} sm={8}>\n            <Interactions className=\"interactions\" id={id}></Interactions>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Mixer></Mixer>\n          </Grid>\n        </Grid>\n        {showConsole && <StyledChat></StyledChat>}\n      </>\n    </Container>\n  );\n};\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(46, 94, 160)\",\n    },\n    secondary: {\n      main: \"rgb(220, 46, 40)\",\n    },\n  },\n});\n","import React from \"react\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Hall from \"./components/Hall\";\nimport Context, { Provider as ContextProvider } from \"./Context\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nimport store from \"./store\";\n\nconst App = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default () => {\n  return (\n    <App>\n      <ThemeProvider theme={theme}>\n        <StoreProvider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/halls/:id\">\n                <ContextProvider value={Context}>\n                  <Hall />\n                </ContextProvider>\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </StoreProvider>\n      </ThemeProvider>\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/enter.339b495d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.2ff80ac8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.1c2b70ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.1a2ceec2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.e59a4594.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.39b87e4e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.4ff4f6c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.cf244f92.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.1a3c06fb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/9.51f8712a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/10.addb6c15.mp3\";","module.exports = __webpack_public_path__ + \"static/media/11.35a178a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/12.dd328baa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/13.8c15668d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/14.c2c551c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/15.45ca4dca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/16.066aed20.mp3\";","module.exports = __webpack_public_path__ + \"static/media/clapping.31212348.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C2.4fdd1dcf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C3.f2a775cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C4.cfab9d69.mp3\";","module.exports = __webpack_public_path__ + \"static/media/shout.b39ade0c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/singAlong.6896ef66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sneeze.62f3207f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cough.9e20177b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/photograph.437bf6fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/phone.9417a5f0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/walk.6a028ea7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dance.b39ade0c.mp3\";"],"sourceRoot":""}