{"version":3,"sources":["components/Home.js","libmqtt.ts","mqttConnection.js","constants.js","mqtt.js","utils.js","Context.js","store/reducers/users.js","store/reducers/mixer.js","store/reducers/chat.js","store/reducers/console.js","store/reducers/rootReducer.js","store/index.js","store/epics/rootEpic.js","components/Section.js","components/Audience.js","components/Lobby.js","midi.js","components/Visualisation.js","components/Orchestra.js","components/Button.js","components/Interactions.js","components/Mixer.js","components/Console.js","components/Chat.js","components/Hall.js","theme.js","App.js","serviceWorker.js","index.js","assets/enter.mp3","assets/unacorda_C3.mp3","assets/jarbleambiencepad_C3.mp3","assets/clapping.mp3","assets/talk_C2.mp3","assets/talk_C3.mp3","assets/talk_C4.mp3","assets/shout.mp3","assets/singAlong.mp3","assets/sneeze.mp3","assets/cough.mp3","assets/photograph.mp3","assets/phone.mp3","assets/walk.mp3","assets/dance.mp3"],"names":["version","Container","styled","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","onClick","context","state","resume","push","isWildcardTopic","topic","includes","useClient","options","client","connect","listeners","Map","on","console","log","error","messageTopic","message","forEach","listenersForTopic","wildcard","res","t","String","split","w","lt","slice","join","topicMatchesMQTTWildcard","listener","JSON","parse","toString","subscribe","fn","currentListeners","get","set","Error","publish","payload","stringify","unsubscribe","delete","getClient","createConnection","NAME","mqtt","Context","React","createContext","Provider","children","userId","setState","types","defaultState","users","heartBeats","volumeInteractions","messages","addToHistory","user","text","type","appReducer","combineReducers","action","Date","now","key","index","indexOf","splice","item","userAlreadyExists","id","sort","x","y","name","mixer","chat","unshift","time","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","run","action$","pipe","filter","switchMap","interval","map","takeUntil","ofType","dispatch","props","color","css","Title","title","Users","User","active","useDispatch","useContext","useSelector","useCallback","useEffect","from","getState","addUser","setInterval","Tooltip","placement","Actions","EnterButton","Button","onEnter","setName","fullWidth","label","onKeyPress","hallId","variant","status","extend","meshline","analyzer","useFrame","Text","anchorX","anchorY","setChannel","setAnalyzer","unaCorda","setUnaCorda","violin","setViolin","bass","setBass","metal","setMetal","noise","setNoise","setFftValues","channel","Channel","Destination","Analyser","getValue","percussion","Sampler","C3","UnaCorda_C3","reverb","Freeverb","pingPongDelay","PingPongDelay","delayTime","feedback","wet","volume","JarbleAmbiencePad_C3","FMSynth","detune","portamento","harmonicity","oscillator","partialCount","partials","phase","envelope","attack","attackCurve","decay","decayCurve","release","releaseCurve","sustain","modulation","modulationEnvelope","modulationIndex","MetalSynth","frequency","resonance","octaves","NoiseSynth","note","triggerAttackRelease","statusTypes","triggerAttack","triggerRelease","style","background","camera","position","fov","Visualisation","RoundButton","button","Label","span","actions","volumeNode","Volume","clapping","ClappingSample","enter","setEnter","leave","setLeave","talk","setTalk","shout","setShout","singAlong","setSingAlong","photograph","setPhotograph","phone","setPhone","sneeze","setSneeze","cough","setCough","walk","setWalk","dance","setDance","SingAlongSample","talking","C2","TalkC2Sample","TalkC3Sample","C4","TalkC4Sample","ShoutSample","EnterSample","PhotographSample","PhoneSample","WalkSample","DanceSample","SneezeSample","CoughSample","round","Section","Grid","container","xs","StyledSlider","Slider","orientation","defaultValue","min","max","setVolumeInteractions","aria-labelledby","ul","Input","StyledModal","Modal","ModalContent","StyledChat","setMessage","showChatMessages","setShowChatMessages","showSystemMessages","setShowSystemMessages","allMessages","List","ChatMessage","li","SystemMessage","FormControlLabel","control","Switch","checked","e","shiftKey","preventDefault","useParams","setContext","open","setOpen","showConsole","setShowConsole","AppBar","backgroundColor","Toolbar","IconButton","Lobby","Orchestra","className","Audience","sm","Interactions","Mixer","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","theme","path","Hall","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.b29e6825.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {context} from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\nconst version = pc.version;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vgig,<br></br>the virtual concert hall for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (context.state !== \"running\") {\n                context.resume();\n              }\n              history.push(`/halls/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};","import { connect, MqttClient } from \"mqtt\"\n\nconst isWildcardTopic = (topic: string) =>\n    topic.includes(\"#\") || topic.includes(\"+\")\nexport default function topicMatchesMQTTWildcard(\n    topic: string,\n    wildcard: string\n) {\n    if (topic === wildcard) {\n        return []\n    } else if (wildcard === \"#\") {\n        return [topic]\n    }\n\n    let res = []\n\n    let t = String(topic).split(\"/\")\n    let w = String(wildcard).split(\"/\")\n\n    let i = 0\n    for (let lt = t.length; i < lt; i++) {\n        if (w[i] === \"+\") {\n            res.push(t[i])\n        } else if (w[i] === \"#\") {\n            res.push(t.slice(i).join(\"/\"))\n            return res\n        } else if (w[i] !== t[i]) {\n            return null\n        }\n    }\n\n    if (w[i] === \"#\") {\n        i += 1\n    }\n\n    return i === w.length ? res : null\n}\n\ninterface Client {\n    subscribe(topic: string, fn: Function): void\n    publish(topic: string, payload: string | number | object): void\n    publish(topic: string): void\n    unsubscribe(topic: string): void\n    getClient(): MqttClient\n}\n\nexport function createConnection(options: string) {\n    let client = connect(options)\n    let listeners: Map<string, Array<Function>> = new Map()\n\n    client.on(\"connect\", console.log)\n    client.on(\"disconnect\", console.log)\n    client.on(\"error\", console.error)\n\n    client.on(\"message\", (messageTopic, message) => {\n        listeners.forEach((listenersForTopic, topic) => {\n            if (\n                messageTopic === topic ||\n                (isWildcardTopic(topic) &&\n                    topicMatchesMQTTWildcard(messageTopic, topic))\n            ) {\n                listenersForTopic.forEach(listener => {\n                    try {\n                        listener(topic, JSON.parse(message.toString()))\n                    } catch (error) {\n                        listener(topic, {})\n                    }\n                })\n            }\n        })\n    })\n\n    return function useClient(): Client {\n        return {\n            subscribe: (topic: string, fn: Function) => {\n                        let currentListeners = listeners.get(topic)\n                        listeners.set(topic, [...(currentListeners || []), fn])\n    \n                        // if (!currentListeners) {\n                            client.subscribe(topic)\n                        // }\n                        \n                        let newListeners = listeners.get(topic)// ? listeners.get(topic) : []\n                        if(!newListeners) {\n                            throw new Error(\n                                `useClient: ${topic} does not exist`\n                            )\n                        }\n                        // newListeners = newListeners.filter((f) => f !== fn)\n\n                        // if (newListeners.length > 0) {\n                        //     listeners.set(topic, newListeners)\n                        // } else {\n                        //     listeners.delete(topic)\n                        //     client.unsubscribe(topic)\n                        // }\n                    // }\n            },\n            publish: (\n                topic: string,\n                payload?: string | number | object\n            ) => {\n                // client.subscribe(topic)\n                if (isWildcardTopic(topic)) {\n                    throw new Error(\n                        `useTopic: Tried publishing on wildcard topic ${topic}`\n                    )\n                } else {\n                    client.publish(topic, JSON.stringify(payload))\n                }\n            },\n            unsubscribe: (\n                topic: string\n            ) => {\n                listeners.delete(topic)\n                client.unsubscribe(topic)\n            },\n            getClient: () => client\n        }\n    }\n}\n","import { createConnection } from \"./libmqtt\"\n\n// export const useClient = createConnection({\n//     protocol: \"wss\",\n//     username: \"try\",\n//     password: \"try\",\n//     host: \"broker.shiftr.io\",\n//     port: 80,\n// })\n// export const useClient = createConnection({\n//     protocol: \"ws\", \n //     host: \"localhost\",\n//     port: 9001,\n// })\n\nexport const useClient = createConnection(\"wss://try:try@broker.shiftr.io\")","const NAME = \"vgig\"\nexport {NAME} ","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n\nconst publish = (topic, payload) => {\n    client.publish(topic, JSON.stringify(payload))\n}\n\nexport {publish}","const generateId = (length) => {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  export {generateId}","import React, {useState} from \"react\"\nimport {generateId} from \"./utils\"\nconst Context = React.createContext();\n\nconst Provider = ({children}) => {\n    const [state, setState] = useState({userId: generateId(8)});\n    return (\n        <Context.Provider value={[state, setState]}>\n            {children}\n        </Context.Provider>\n\n    )\n}\nexport default Context\nexport {Provider} ","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  HEARTBEAT: \"HEARTBEAT\",\n  SETNAME: \"SETNAME\",\n};\n\nconst defaultState = {\n  users: [], //all users\n  heartBeats: new Map(),\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 30 * 1000) {\n          heartBeats.delete(key);\n          const index = users.indexOf(key);\n          if (index !== -1) users.splice(index, 1);\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      let users = [...state.users];\n      action.payload.value.forEach((item) => {\n        let userAlreadyExists = false;\n        users.forEach((user) => {\n          if (user.id === item.id) {\n            userAlreadyExists = true;\n          }\n        });\n        if (!userAlreadyExists) users.push(item);\n      });\n\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      let userAlreadyExists = false;\n      users.forEach((user) => {\n        if (user.id === action.payload.id) {\n          userAlreadyExists = true;\n        }\n      });\n      if (!userAlreadyExists)\n        users.push({ id: action.payload.id, name: action.payload.name });\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.SETNAME: {\n      let users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].name = action.payload.name;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (id, name) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (id, name) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport { types };\n","const types = {\n    SETVOLUMEINTERACTIONS: \"SETVOLUMEINTERACTIONS\",\n  };\n  \n  const defaultState = {\n      volumeInteractions: 0\n  };\n  \n  export default (state = defaultState, action) => {\n    switch (action.type) {\n        case types.SETVOLUMEINTERACTIONS: {\n            return {\n                ...state,\n                volumeInteractions: action.payload.value\n            }\n        }\n      default:\n        return state;\n    }\n  };\n  \n  export const setVolumeInteractions = (value) => {\n    return {\n      type: types.SETVOLUMEINTERACTIONS,\n      payload: {\n        value,\n      },\n    };\n  };","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift({\n        ...action.payload.message,\n        time: new Date(),\n        type: \"CHAT\",\n      });\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (user, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        user,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","const types = {\n  ADDTOHISTORY: \"ADDTOHISTORY\",\n};\n\nconst defaultState = {\n  history: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDTOHISTORY: {\n      let history = [...state.history];\n      history.unshift({\n        ...action.payload,\n        time: new Date(),\n        type: \"SYSTEM\",\n      });\n      history = history.slice(0, 1000);\n      return {\n        ...state,\n        history,\n      };\n    }\n  }\n  return state;\n};\n\nconst addToHistory = (user, text) => {\n  return {\n    type: types.ADDTOHISTORY,\n    payload: {\n      user,\n      text,\n    },\n  };\n};\nexport { addToHistory };\n","import { combineReducers } from \"redux\";\n\nimport users from \"./users\";\nimport mixer from \"./mixer\";\nimport chat from \"./chat\";\nimport console from \"./console\";\n\nconst appReducer = combineReducers({\n  users,\n  mixer,\n  chat,\n  console\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\n// store.subscribe(() => console.log(store.getState()))\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","import { filter, switchMap, map, takeUntil } from \"rxjs/operators\";\nimport { interval } from \"rxjs\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === \"STARTHEARTBEAT\"),\n    switchMap((action) =>\n      interval(30000).pipe(\n        map((action) => {\n          return {\n            type: \"HEARTBEAT\",\n            payload: {\n              value: 1,\n            },\n          };\n        }),\n        takeUntil(action$.ofType(\"STOPHEARTBEAT\"))\n      )\n    )\n  );\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100%;\n  text-align: left;\n  ${(props) =>\n    props.color &&\n    css`\n      border-bottom: 3px solid ${props.color};\n      border-left: 1px solid white;\n      border-right: 1px solid white;\n    `}\n`;\nconst Title = styled.section`\n  width: 100%;\n  text-transform: uppercase;\n  color: white;\n  text-align: center;\n  ${(props) =>\n    props.color &&\n    css`\n      background-color: ${props.color};\n    `}\n`;\n\nexport default ({ title, color, children }) => {\n  return (\n    <Container color={color}>\n      <Title color={color}>{title}</Title>\n      {children}\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n// import * as THREE from 'three'\n// import { OrbitControls } from 'drei'\n// import { Canvas } from 'react-three-fiber'\n// import { useSprings, a } from 'react-spring/three'\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport { publish } from \"../mqtt\";\nimport Context from \"../Context\";\n\nimport { addUser, setUsers, heartBeat } from \"../store/reducers/users\";\nimport store from \"../store\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst Users = styled.div`\n  text-align: left;\n`;\nconst User = styled.div`\n  height: 25px;\n  width: 25px;\n  background-color: ${(props) =>\n    props.active ? \"rgb(255,170,100)\" : \"rgb(254, 250, 170)\"};\n  border-radius: 50%;\n  display: inline-block;\n  margin: 5px;\n  border: 1px solid black;\n`;\n\n// const Sphere = ({position, color}) => {\n//   return (\n//     <mesh visible userData={{ test: \"hello\" }} position={position} castShadow>\n//       <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n//       <meshStandardMaterial attach=\"material\" color={color}        transparent        roughness={0.1}        metalness={0.1}      />\n//     </mesh>\n//     );\n// }\n\nexport default ({ id }) => {\n  const dispatch = useDispatch();\n  const { subscribe, unsubscribe } = useClient();\n  const [context, setContext] = useContext(Context);\n\n  const users = useSelector((state) => state.users.users);\n  const getUsers = useCallback(() => {\n    return users;\n  });\n  useEffect(\n    () => {\n      if (id) {\n        subscribe(`${NAME}/${id}/getUsers`, (topic, message) => {\n          if (message.from && message.from !== context.userId) {\n            publish(`${NAME}/${id}/setUsers`, store.getState().users.users);\n          }\n        });\n        subscribe(`${NAME}/${id}/setUsers`, (topic, message) => {\n          dispatch(setUsers(message));\n        });\n        subscribe(`${NAME}/${id}/enterLobby`, (topic, message) => {\n          dispatch(addUser(message.userId, \"anonymous \"));\n        });\n\n        subscribe(`${NAME}/${id}/alive`, (topic, message) => {\n          dispatch(heartBeat(message.userId));\n        });\n\n        publish(`${NAME}/${id}/getUsers`, { from: context.userId });\n        setInterval(() => {\n          publish(`${NAME}/${id}/alive`, { userId: context.userId });\n        }, 30 * 1000);\n      }\n    },\n    [id],\n    () => {\n      unsubscribe(`${NAME}/${id}/getUsers`);\n    }\n  );\n  return (\n    <Container>\n      {/* <Section title={\"audience\"} color={\"rgb(46, 94, 160)\"}> */}\n      <Users>\n        {users.map((user, index) => {\n          const position = [(index / users.length) * 50, 0, 0];\n          return (\n            <Tooltip key={user.id} title={user.name} placement=\"right-start\">\n              <User key={user.id} active={context.userId === user.id}>\n                {/* {user} */}\n              </User>\n            </Tooltip>\n          );\n        })}\n      </Users>\n      {/* </Section> */}\n    </Container>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport Context from \"../Context\";\n\nconst Container = styled.div``;\nconst Actions = styled.section`\n  margin-top: 24px !important;\n  display: flex;\n  flex-direction: row-reverse;\n`;\nconst EnterButton = styled(Button)``;\n\nexport default ({ onEnter }) => {\n  const { subscribe, publish, getClient } = useClient();\n  const [name, setName] = useState(\"\");\n  const [context] = useContext(Context);\n  return (\n    <Container>\n      <div>\n        hello, <br></br>please enter your name and enjoy the show.\n      </div>\n      <TextField\n        fullWidth\n        label=\"name\"\n        value={name}\n        onChange={(event) => {\n          setName(event.target.value);\n        }}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\" && name !== \"\") {\n            publish(`${NAME}/${context.hallId}/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }\n        }}\n      ></TextField>\n      <br></br>\n\n      <Actions>\n        <EnterButton\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => {\n            if (name === \"\") return;\n            publish(`${NAME}/${context.hallId}/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }}\n        >\n          enter\n        </EnterButton>\n      </Actions>\n    </Container>\n  );\n};\n","const status = {\n    noteOn: 144,\n    noteOff: 128\n}\nconst createNoteOnMessage = (channel, note, vel) => {\n    return {\n        channel,\n        status: status.noteOn,\n        note,\n        velocity: vel ? vel : 127\n    }\n}\nexport {createNoteOnMessage, status}","import React, { useState, useEffect, useMemo, useRef} from \"react\";\nimport * as THREE from 'three'\nimport * as meshline from 'threejs-meshline'\nimport { extend, Canvas, useFrame } from 'react-three-fiber'\nimport { Text } from \"@react-three/drei/Text\"\n\n\nextend(meshline)\n\nexport default ({analyzer}) => {\n    useFrame(() => {\n      // console.log(\"new frame\", analyzer.getValue())\n    })\n    return (\n        <>\n        <Text\n  color=\"white\" // default\n  anchorX=\"center\" // default\n  anchorY=\"middle\" // default\n>\n    here will be an audio visualisation\n</Text>\n            {/* <Lines count={fftValues.length} colors={['rgb(100,0,0)', '#222', '#aaa', '#e0feff', 'rgb(100,0,60)', 'rgb(127,32,64)']} /> */}\n            {\n                // fftValues.forEach((value, index) => {\n                //     console.log(value, index)\n                // })\n            }\n        </>\n    )\n}","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Analyser,\n  Freeverb,\n  PingPongDelay,\n  Destination,\n  Sampler,\n  FMSynth,\n  MetalSynth,\n  NoiseSynth,\n  Channel,\n} from \"tone\";\nimport { status as statusTypes } from \"../midi\";\nimport UnaCorda_C3 from \"../assets/unacorda_C3.mp3\";\nimport JarbleAmbiencePad_C3 from \"../assets/jarbleambiencepad_C3.mp3\";\n\nimport Visualisation from \"./Visualisation\";\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls } from \"drei\";\n\nimport { useClient } from \"../mqttConnection\";\n\nimport { NAME } from \"../constants\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 66.66%;\n`;\n\nexport default ({ id }) => {\n  const [channel, setChannel] = useState(null);\n  const [analyzer, setAnalyzer] = useState(null);\n  const [unaCorda, setUnaCorda] = useState(null);\n  const [violin, setViolin] = useState(null);\n  const [bass, setBass] = useState(null);\n  const [metal, setMetal] = useState(null);\n  const [noise, setNoise] = useState(null);\n  const [fftValues, setFftValues] = useState([]);\n\n  const { subscribe, unsubscribe } = useClient();\n\n  useEffect(() => {\n    const channel = new Channel();\n    channel.connect(Destination);\n    setChannel(channel);\n\n    const analyzer = new Analyser();\n    channel.connect(analyzer);\n    setAnalyzer(analyzer);\n    setInterval(() => {\n      if (analyzer) {\n        setFftValues(analyzer.getValue());\n      }\n    }, 50);\n\n    const percussion = new Sampler({ C3: UnaCorda_C3 });\n    const reverb = new Freeverb(0.6, 5000);\n    const pingPongDelay = new PingPongDelay({\n      delayTime: \"32n\",\n      feedback: 0.7,\n      wet: 0.25,\n    });\n    percussion.volume.value = 0;\n    percussion.connect(pingPongDelay);\n    pingPongDelay.connect(reverb);\n    reverb.connect(channel);\n    setUnaCorda(percussion);\n\n    const violin = new Sampler({ C3: JarbleAmbiencePad_C3 });\n    violin.volume.value = 0;\n    violin.connect(channel);\n    setViolin(violin);\n\n    const bass = new FMSynth({\n      volume: 0,\n      detune: 0,\n      portamento: 0,\n      harmonicity: 3,\n      oscillator: {\n        partialCount: 0,\n        partials: [],\n        phase: 0,\n        type: \"sine\",\n      },\n      envelope: {\n        attack: 0.01,\n        attackCurve: \"linear\",\n        decay: 0.2,\n        decayCurve: \"exponential\",\n        release: 0.5,\n        releaseCurve: \"exponential\",\n        sustain: 1,\n      },\n      modulation: {\n        partialCount: 0,\n        partials: [],\n        phase: 0,\n        type: \"square\",\n      },\n      modulationEnvelope: {\n        attack: 0.2,\n        attackCurve: \"linear\",\n        decay: 0.01,\n        decayCurve: \"exponential\",\n        release: 0.5,\n        releaseCurve: \"exponential\",\n        sustain: 1,\n      },\n      modulationIndex: 12.22,\n    });\n    bass.connect(channel);\n    setBass(bass);\n\n    const metal = new MetalSynth({\n      frequency: 200,\n      envelope: {\n        attack: 0.001,\n        decay: 1.4,\n        release: 0.2,\n      },\n      harmonicity: 5.1,\n      modulationIndex: 32,\n      resonance: 4000,\n      octaves: 1.5,\n    });\n    metal.connect(channel);\n    setMetal(metal);\n\n    const noise = new NoiseSynth();\n    noise.connect(channel);\n    setNoise(noise);\n  }, []);\n\n  useEffect(\n    () => {\n      subscribe(`${NAME}/${id}/orchestra`, (topic, message) => {\n        const { channel, note, status } = message;\n        // if(status !== statusTypes.noteOn && status !== statusTypes.noteOff) return\n        switch (channel) {\n          case 1: {\n            if (unaCorda) unaCorda.triggerAttackRelease(note);\n            break;\n          }\n          case 2: {\n            if (violin) violin.triggerAttackRelease(note);\n            break;\n          }\n          case 3: {\n            if (bass && status === statusTypes.noteOn) bass.triggerAttack(note);\n            if (bass && status === statusTypes.noteOff)\n              bass.triggerRelease(note);\n            break;\n          }\n          case 4: {\n            if (metal && status === statusTypes.noteOn)\n              metal.triggerAttack(note);\n            if (metal && status === statusTypes.noteOff)\n              metal.triggerRelease(note);\n            break;\n          }\n          case 5: {\n            if (noise && status === statusTypes.noteOn) noise.triggerAttack();\n            if (noise && status === statusTypes.noteOff) noise.triggerRelease();\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      });\n    },\n    [unaCorda, violin, id],\n    () => {\n      unsubscribe(`${NAME}/${id}/orchestra`);\n    }\n  );\n\n  // console.log(analyzer ? analyzer.getValue() : \"\")\n  return (\n    <Container>\n      <Canvas\n        style={{ background: \"rgb(0,0,0)\" }}\n        camera={{ position: [0, 0, 10], fov: 25 }}\n      >\n        <OrbitControls></OrbitControls>\n        <Visualisation analyzer={analyzer}></Visualisation>\n      </Canvas>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  /* border: 1px dashed white; */\n`;\n\nconst RoundButton = styled.button`\n  background-color: rgba(254, 250, 170, 1);\n  border: none;\n  color: white;\n  height: 50px;\n  width: 50px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 5px;\n  /* border-radius: 50%; */\n`;\nconst Label = styled.span`\n  color: white;\n`;\n\nconst Button = ({ label, onClick }) => {\n  return (\n    <Container>\n      <RoundButton onClick={onClick}></RoundButton>\n      <br></br>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n\nexport default Button;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport { Sampler, Channel, Volume, Destination } from \"tone\";\n\nimport Context from \"../Context\";\nimport ClappingSample from \"../assets/clapping.mp3\";\nimport TalkC2Sample from \"../assets/talk_C2.mp3\";\nimport TalkC3Sample from \"../assets/talk_C3.mp3\";\nimport TalkC4Sample from \"../assets/talk_C4.mp3\";\nimport ShoutSample from \"../assets/shout.mp3\";\nimport SingAlongSample from \"../assets/singAlong.mp3\";\nimport EnterSample from \"../assets/enter.mp3\";\nimport SneezeSample from \"../assets/sneeze.mp3\";\nimport CoughSample from \"../assets/cough.mp3\";\nimport PhotographSample from \"../assets/photograph.mp3\";\nimport PhoneSample from \"../assets/phone.mp3\";\nimport WalkSample from \"../assets/walk.mp3\";\nimport DanceSample from \"../assets/dance.mp3\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { addToHistory } from \"../store/reducers/console\";\n\nimport Button from \"./Button\";\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst actions = [\n  \"applaude\",\n  \"talk\",\n  \"photograph\",\n  \"walk\",\n  \"sneeze\",\n  \"cough\",\n  \"dance\",\n  \"shout\",\n  \"singAlong\",\n  \"phone\",\n];\n\nconst channel = new Channel(-32);\nconst volumeNode = new Volume(0);\nchannel.connect(volumeNode);\nvolumeNode.connect(Destination);\n\nconst clapping = new Sampler({ C3: ClappingSample });\nclapping.connect(channel);\n\nexport default () => {\n  const [context] = useContext(Context);\n  const { subscribe, publish, getClient } = useClient();\n  const [enter, setEnter] = useState(null);\n  const [leave, setLeave] = useState(null);\n  const [talk, setTalk] = useState(null);\n  const [shout, setShout] = useState(null);\n  const [singAlong, setSingAlong] = useState(null);\n  const [photograph, setPhotograph] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [sneeze, setSneeze] = useState(null);\n  const [cough, setCough] = useState(null);\n  const [walk, setWalk] = useState(null);\n  const [dance, setDance] = useState(null);\n  // const [channel, setChannel] = useState(null)\n  // const [volume, setVolume] = useState(null)\n\n  const dispatch = useDispatch();\n  const volume = useSelector((state) => state.mixer.volumeInteractions);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const singAlong = new Sampler({ C3: SingAlongSample });\n    singAlong.connect(channel);\n    setSingAlong(singAlong);\n\n    const talking = new Sampler({\n      C2: TalkC2Sample,\n      C3: TalkC3Sample,\n      C4: TalkC4Sample,\n    });\n\n    talking.connect(channel);\n    setTalk(talking);\n\n    const shout = new Sampler({ C3: ShoutSample });\n    shout.connect(channel);\n    setShout(shout);\n\n    const enter = new Sampler({ C3: EnterSample });\n    enter.connect(channel);\n    setEnter(enter);\n\n    const leave = new Sampler({ C3: EnterSample });\n    leave.connect(channel);\n    setLeave(leave);\n\n    const photograph = new Sampler({ C3: PhotographSample });\n    photograph.connect(channel);\n    setPhotograph(photograph);\n\n    const phone = new Sampler({ C3: PhoneSample });\n    phone.connect(channel);\n    setPhone(phone);\n\n    const walk = new Sampler({ C3: WalkSample });\n    walk.connect(channel);\n    setWalk(walk);\n\n    const dance = new Sampler({ C3: DanceSample });\n    dance.connect(channel);\n    setDance(dance);\n\n    const sneeze = new Sampler({ C3: SneezeSample });\n    sneeze.connect(channel);\n    setSneeze(sneeze);\n\n    const cough = new Sampler({ C3: CoughSample });\n    cough.connect(channel);\n    setCough(cough);\n\n    const client = getClient();\n    client.on(\"connect\", () => {});\n  }, []);\n  useEffect(() => {\n    subscribe(`${NAME}/${context.hallId}/applaude`, (topic, message) => {\n      clapping.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"applauded\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/talk`, (topic, message) => {\n      talk.triggerAttackRelease(20 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"talked\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/shout`, (topic, message) => {\n      shout.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"shouted\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/singAlong`, (topic, message) => {\n      singAlong.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"sang along\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/enter`, (topic, message) => {\n      enter.triggerAttackRelease(72, 20);\n      dispatch(addToHistory(message.userId, \"entered\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/leave`, (topic, message) => {\n      console.log(\"user left\", message);\n      dispatch(addToHistory(message.userId, \"left\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/photograph`, (topic, message) => {\n      photograph.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"took a photo\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/phone`, (topic, message) => {\n      phone.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"took a phone call\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/walk`, (topic, message) => {\n      walk.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"walked\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/dance`, (topic, message) => {\n      dance.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"danced\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/sneeze`, (topic, message) => {\n      sneeze.triggerAttackRelease(40 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"sneezed\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/cough`, (topic, message) => {\n      cough.triggerAttackRelease(50 + Math.round(Math.random() * 60), 20);\n      dispatch(addToHistory(message.userId, \"coughed\"));\n    });\n  }, [\n    context.hallId,\n    talk,\n    singAlong,\n    walk,\n    phone,\n    photograph,\n    dance,\n    cough,\n    sneeze,\n    enter,\n    leave,\n  ]);\n\n  return (\n    <Container>\n      <Section title={\"actions\"} color={\"rgb(46, 94, 160)\"}>\n        <Grid container>\n          {actions.map((action) => {\n            return (\n              <Grid item xs={2}>\n                <Button\n                  key={action}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    publish(`${NAME}/${context.hallId}/${action}`, {\n                      userId: context.userId,\n                    });\n                  }}\n                  label={action}\n                ></Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Section>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\n\nimport { setVolumeInteractions } from \"../store/reducers/mixer\";\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nconst StyledSlider = styled(Slider)`\n  height: 50px !important;\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={6}>\n          <Section title={\"light\"} color={\"rgb(220, 46, 40)\"}></Section>\n        </Grid>\n        <Grid item xs={6}>\n          <Section title={\"audio\"} color={\"rgb(220, 46, 40)\"}>\n            <StyledSlider\n              orientation=\"vertical\"\n              //   getAriaValueText={valuetext}\n              defaultValue={-100}\n              min={-100}\n              max={0}\n              onChange={(event, value) => {\n                dispatch(setVolumeInteractions(value));\n              }}\n              aria-labelledby=\"vertical-slider\"\n            />\n            <StyledSlider\n              orientation=\"vertical\"\n              //   getAriaValueText={valuetext}\n              defaultValue={-100}\n              min={-100}\n              max={0}\n              onChange={(event, value) => {\n                // dispatch(setVolumeInteractions(value))\n              }}\n              aria-labelledby=\"vertical-slider\"\n            />\n          </Section>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { compareAsc, format } from \"date-fns\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  overflow-y: scroll;\n`;\n\nconst Time = styled.span`\n  font-style: italic;\n  color: #333;\n`;\nconst User = styled.span`\n  font-weight: bold;\n  color: #333;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nexport default () => {\n  const history = useSelector((state) => state.console.history);\n  const users = useSelector((state) => state.users.users);\n  return (\n    <Container>\n      <Section title={\"console\"} color={\"rgb(46, 94, 160)\"}>\n        <List>\n          {history.map((item, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === item.user) name = user.name;\n            });\n            return (\n              <li key={index}>\n                <Time>{format(item.time, \"HH:mm:ss\")}</Time>:{\" \"}\n                <User>{name}</User> {item.text}\n              </li>\n            );\n          })}\n        </List>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Context from \"../Context\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { compareAsc, format } from \"date-fns\";\nimport { useClient } from \"../mqttConnection\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 33vw;\n  @media only screen and (max-width: 600px) {\n    width: 100vw;\n  }\n\n  height: 50vh;\n  position: absolute;\n  top: 0;\n  right: 0;\n  flex-grow: 1;\n  overflow-y: scroll;\n  background-color: white;\n  color: black;\n  z-index: 1101;\n`;\n\nconst Input = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n`;\n\nconst Time = styled.span`\n  font-style: italic;\n  color: #333;\n`;\nconst User = styled.span`\n  font-weight: bold;\n  color: #333;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nexport default () => {\n  const [message, setMessage] = useState(\"\");\n  const [showChatMessages, setShowChatMessages] = useState(true);\n  const [showSystemMessages, setShowSystemMessages] = useState(false);\n  const history = useSelector((state) => state.console.history);\n  const messages = useSelector((state) => state.chat.messages);\n\n  const allMessages = [...history, ...messages].sort((x, y) => x.time < y.time);\n  const [context] = useContext(Context);\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.users);\n  const { subscribe, publish, getClient } = useClient();\n\n  const List = styled.ul`\n    list-style-type: none;\n  `;\n\n  const ChatMessage = styled.li``;\n  const SystemMessage = styled.li`\n    font-style: italic;\n    text-align: right;\n  `;\n\n  return (\n    <Container>\n      <Section title={\"chat/console\"} color={\"rgb(46, 94, 160)\"}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showChatMessages}\n              onChange={(event) => {\n                setShowChatMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"chat messages\"\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showSystemMessages}\n              onChange={(event) => {\n                setShowSystemMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"system messages\"\n        />\n\n        <List>\n          {allMessages.map((message, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === message.user) name = user.name;\n            });\n            return (\n              <>\n                {message.type === \"CHAT\" && showChatMessages && (\n                  <ChatMessage key={index}>\n                    {name}: {message.text}\n                  </ChatMessage>\n                )}\n                {message.type === \"SYSTEM\" && showSystemMessages && (\n                  <SystemMessage key={index}>\n                    {context.hallId}: {name} {message.text}\n                  </SystemMessage>\n                )}\n              </>\n            );\n          })}\n        </List>\n        <Input>\n          <Grid\n            container\n            //   spacing={2}\n          >\n            <Grid item xs={9}>\n              <TextField\n                fullWidth\n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    publish(`vgig/${context.hallId}/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                    setMessage(\"\");\n                  }\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                color=\"primary\"\n                // variant=\"outlined\"\n                fullWidth\n                onClick={(event) => {\n                  if (message !== \"\") {\n                    publish(`vgig/${context.hallId}/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                  }\n                  setMessage(\"\");\n                }}\n              >\n                <SendIcon></SendIcon>\n              </Button>\n            </Grid>\n          </Grid>\n        </Input>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport styled from \"styled-components\";\nimport Audience from \"./Audience\";\nimport Lobby from \"./Lobby\";\nimport Orchestra from \"./Orchestra\";\nimport Interactions from \"./Interactions\";\nimport Mixer from \"./Mixer\";\n\nimport Context from \"../Context\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setName } from \"../store/reducers/users\";\nimport { addMessage } from \"../store/reducers/chat\";\n\nimport Console from \"./Console\";\nimport Chat from \"./Chat\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n`;\n\nconst StyledModal = styled(Modal)`\n  width: 100%;\n  height: 100%;\n`;\nconst ModalContent = styled.div`\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledChat = styled(Chat)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 33vw;\n`;\nconst panels = { CHAT: \"CHAT\", CONSOLE: \"CONSOLE\" };\nexport default () => {\n  const { id } = useParams();\n  const [context, setContext] = useContext(Context);\n  const { publish, subscribe } = useClient();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(true);\n  const [showConsole, setShowConsole] = useState(false);\n\n  useEffect(() => {\n    setContext({ ...context, hallId: id });\n    publish(`${NAME}/${id}/enterLobby`, {\n      userId: context.userId,\n    });\n    subscribe(`${NAME}/${id}/setUserName`, (topic, message) => {\n      dispatch(setName(message.id, message.name));\n    });\n    subscribe(`${NAME}/${id}/chat`, (topic, message) => {\n      dispatch(addMessage(message.user, message.message));\n    });\n    // publish(`${NAME}/${id}/getUsers`, { from: context.userId });\n    // setInterval(() => {\n    //   publish(`${NAME}/${id}/alive`, { userId: context.userId });\n    // }, 30 * 1000);hallId\n  }, [id]);\n\n  return (\n    <Container>\n      <AppBar position=\"sticky\" style={{ backgroundColor: \"transparent\" }}>\n        <Toolbar>\n          <IconButton\n            color=\"primary\"\n            onClick={(event) => {\n              setShowConsole(!showConsole);\n            }}\n          >\n            <ForumIcon></ForumIcon>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <StyledModal open={open}>\n        <ModalContent>\n          <Lobby\n            onEnter={(name) => {\n              publish(`${NAME}/${context.hallId}/enter`, {\n                userId: context.userId,\n                name,\n              });\n              setOpen(false);\n            }}\n          ></Lobby>\n        </ModalContent>\n      </StyledModal>\n      <>\n        <Orchestra className=\"orchestra\" id={id}></Orchestra>\n        <Audience className=\"audience\" id={id}></Audience>\n        <Grid container>\n          <Grid item xs={12} sm={8}>\n            <Interactions className=\"interactions\" id={id}></Interactions>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Mixer></Mixer>\n          </Grid>\n        </Grid>\n        {showConsole && <StyledChat></StyledChat>}\n      </>\n    </Container>\n  );\n};\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(46, 94, 160)\",\n    },\n    secondary: {\n      main: \"rgb(220, 46, 40)\",\n    },\n  },\n});\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Hall from \"./components/Hall\";\nimport Context, { Provider as ContextProvider } from \"./Context\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nimport store from \"./store\";\n\nconst App = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default () => {\n  return (\n    <App>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/halls/:id\">\n                <ContextProvider value={Context}>\n                  <Hall />\n                </ContextProvider>\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </Provider>\n      </ThemeProvider>\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/enter.339b495d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/unacorda_C3.4c254059.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jarbleambiencepad_C3.3312bc03.mp3\";","module.exports = __webpack_public_path__ + \"static/media/clapping.31212348.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C2.4fdd1dcf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C3.f2a775cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C4.cfab9d69.mp3\";","module.exports = __webpack_public_path__ + \"static/media/shout.b39ade0c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/singAlong.6896ef66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sneeze.62f3207f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cough.9e20177b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/photograph.437bf6fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/phone.9417a5f0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/walk.6a028ea7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dance.b39ade0c.mp3\";"],"sourceRoot":""}