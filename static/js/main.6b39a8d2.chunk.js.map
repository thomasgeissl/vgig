{"version":3,"sources":["components/Home.js","libmqtt.ts","mqttConnection.js","constants.js","mqtt.js","utils.js","Context.js","store/reducers/users.js","store/reducers/chat.js","store/reducers/rootReducer.js","store/index.js","store/epics/rootEpic.js","components/Audience.js","midi.js","components/Visualisation.js","components/Orchestra.js","components/Interactions.js","components/Hall.js","App.js","serviceWorker.js","index.js","assets/enter.mp3","assets/unacorda_C3.mp3","assets/jarbleambiencepad_C3.mp3","assets/clapping.mp3","assets/talk_C2.mp3","assets/talk_C3.mp3","assets/talk_C4.mp3","assets/shout.mp3","assets/singAlong.mp3","assets/sneeze.mp3","assets/cough.mp3","assets/photograph.mp3","assets/phone.mp3","assets/walk.mp3","assets/dance.mp3"],"names":["version","Container","styled","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","Button","onClick","context","state","resume","push","isWildcardTopic","topic","includes","useClient","options","client","connect","listeners","Map","on","console","log","error","messageTopic","message","forEach","listenersForTopic","wildcard","res","t","String","split","w","lt","slice","join","topicMatchesMQTTWildcard","listener","JSON","parse","toString","subscribe","fn","currentListeners","get","set","Error","publish","payload","stringify","unsubscribe","delete","getClient","createConnection","NAME","mqtt","Context","React","createContext","Provider","children","userId","setState","types","ADDUSER","SETUSERS","HEARTBEAT","defaultState","users","heartBeats","messages","appReducer","combineReducers","action","type","Date","now","key","index","indexOf","splice","sort","filter","item","pos","chat","unshift","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","run","action$","pipe","switchMap","interval","map","takeUntil","ofType","dispatch","User","props","active","id","useDispatch","useContext","useSelector","useCallback","useEffect","from","getState","setInterval","user","Tooltip","title","placement","status","extend","meshline","setChannel","setAnalyzer","unaCorda","setUnaCorda","violin","setViolin","bass","setBass","metal","setMetal","noise","setNoise","setFftValues","channel","Channel","Destination","analyzer","Analyser","getValue","percussion","Sampler","C3","UnaCorda_C3","reverb","Freeverb","pingPongDelay","PingPongDelay","delayTime","feedback","wet","volume","JarbleAmbiencePad_C3","FMSynth","MetalSynth","frequency","envelope","attack","decay","release","harmonicity","modulationIndex","resonance","octaves","NoiseSynth","note","triggerAttackRelease","statusTypes","triggerAttack","triggerRelease","style","background","camera","position","fov","StyledButton","button","actions","enter","setEnter","leave","setLeave","clap","setClap","talk","setTalk","shout","setShout","singAlong","setSingAlong","photograph","setPhotograph","phone","setPhone","sneeze","setSneeze","cough","setCough","walk","setWalk","dance","setDance","toDestination","clapping","ClappingSample","SingAlongSample","talking","C2","TalkC2Sample","TalkC3Sample","C4","TalkC4Sample","ShoutSample","EnterSample","PhotographSample","PhoneSample","WalkSample","DanceSample","SneezeSample","CoughSample","hallId","round","variant","color","useParams","setContext","Orchestra","className","Audience","Interactions","App","path","Hall","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.6b39a8d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {context} from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\nconst version = pc.version;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vgig,<br></br>the virtual concert hall for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (context.state !== \"running\") {\n                context.resume();\n              }\n              history.push(`/halls/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};","import { connect, MqttClient } from \"mqtt\"\n\nconst isWildcardTopic = (topic: string) =>\n    topic.includes(\"#\") || topic.includes(\"+\")\nexport default function topicMatchesMQTTWildcard(\n    topic: string,\n    wildcard: string\n) {\n    if (topic === wildcard) {\n        return []\n    } else if (wildcard === \"#\") {\n        return [topic]\n    }\n\n    let res = []\n\n    let t = String(topic).split(\"/\")\n    let w = String(wildcard).split(\"/\")\n\n    let i = 0\n    for (let lt = t.length; i < lt; i++) {\n        if (w[i] === \"+\") {\n            res.push(t[i])\n        } else if (w[i] === \"#\") {\n            res.push(t.slice(i).join(\"/\"))\n            return res\n        } else if (w[i] !== t[i]) {\n            return null\n        }\n    }\n\n    if (w[i] === \"#\") {\n        i += 1\n    }\n\n    return i === w.length ? res : null\n}\n\ninterface Client {\n    subscribe(topic: string, fn: Function): void\n    publish(topic: string, payload: string | number | object): void\n    publish(topic: string): void\n    unsubscribe(topic: string): void\n    getClient(): MqttClient\n}\n\nexport function createConnection(options: string) {\n    let client = connect(options)\n    let listeners: Map<string, Array<Function>> = new Map()\n\n    client.on(\"connect\", console.log)\n    client.on(\"disconnect\", console.log)\n    client.on(\"error\", console.error)\n\n    client.on(\"message\", (messageTopic, message) => {\n        listeners.forEach((listenersForTopic, topic) => {\n            if (\n                messageTopic === topic ||\n                (isWildcardTopic(topic) &&\n                    topicMatchesMQTTWildcard(messageTopic, topic))\n            ) {\n                listenersForTopic.forEach(listener => {\n                    try {\n                        listener(topic, JSON.parse(message.toString()))\n                    } catch (error) {\n                        listener(topic, {})\n                    }\n                })\n            }\n        })\n    })\n\n    return function useClient(): Client {\n        return {\n            subscribe: (topic: string, fn: Function) => {\n                        let currentListeners = listeners.get(topic)\n                        listeners.set(topic, [...(currentListeners || []), fn])\n    \n                        // if (!currentListeners) {\n                            client.subscribe(topic)\n                        // }\n                        \n                        let newListeners = listeners.get(topic)// ? listeners.get(topic) : []\n                        if(!newListeners) {\n                            throw new Error(\n                                `useClient: ${topic} does not exist`\n                            )\n                        }\n                        // newListeners = newListeners.filter((f) => f !== fn)\n\n                        // if (newListeners.length > 0) {\n                        //     listeners.set(topic, newListeners)\n                        // } else {\n                        //     listeners.delete(topic)\n                        //     client.unsubscribe(topic)\n                        // }\n                    // }\n            },\n            publish: (\n                topic: string,\n                payload?: string | number | object\n            ) => {\n                // client.subscribe(topic)\n                if (isWildcardTopic(topic)) {\n                    throw new Error(\n                        `useTopic: Tried publishing on wildcard topic ${topic}`\n                    )\n                } else {\n                    client.publish(topic, JSON.stringify(payload))\n                }\n            },\n            unsubscribe: (\n                topic: string\n            ) => {\n                listeners.delete(topic)\n                client.unsubscribe(topic)\n            },\n            getClient: () => client\n        }\n    }\n}\n","import { createConnection } from \"./libmqtt\"\n\n// export const useClient = createConnection({\n//     protocol: \"wss\",\n//     username: \"try\",\n//     password: \"try\",\n//     host: \"broker.shiftr.io\",\n//     port: 80,\n// })\n// export const useClient = createConnection({\n//     protocol: \"ws\", \n //     host: \"localhost\",\n//     port: 9001,\n// })\n\nexport const useClient = createConnection(\"wss://try:try@broker.shiftr.io\")","const NAME = \"vgig\"\nexport {NAME} ","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n\nconst publish = (topic, payload) => {\n    client.publish(topic, JSON.stringify(payload))\n}\n\nexport {publish}","const generateId = (length) => {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  export {generateId}","import React, {useState} from \"react\"\nimport {generateId} from \"./utils\"\nconst Context = React.createContext();\n\nconst Provider = ({children}) => {\n    const [state, setState] = useState({userId: generateId(8)});\n    return (\n        <Context.Provider value={[state, setState]}>\n            {children}\n        </Context.Provider>\n\n    )\n}\nexport default Context\nexport {Provider} ","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  HEARTBEAT: \"HEARTBEAT\",\n};\n\nconst defaultState = {\n  users: [], //all users\n  heartBeats: new Map(),\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 10 * 1000) {\n          heartBeats.delete(key);\n          const index = users.indexOf(key);\n          if (index !== -1) users.splice(index, 1);\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      let users = [...state.users, ...action.payload.value].sort()\n      return {\n        ...state,\n        users: users.filter(function(item, pos) {\n          return users.indexOf(item) === pos;\n        }),\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      if (!users.includes(action.payload.value)) {\n        users.push(action.payload.value);\n      }\n      return {\n        ...state,\n        users: users.sort(),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (value) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (value) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      value,\n    },\n  };\n};\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\n\nexport { types };\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift(action.payload.message);\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (sender, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        sender,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","import { combineReducers } from \"redux\";\n\nimport users from \"./users\";\nimport chat from \"./chat\";\n\nconst appReducer = combineReducers({\n  users,\n  chat,\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\n// store.subscribe(() => console.log(store.getState()))\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","import { filter, switchMap, map, takeUntil } from \"rxjs/operators\";\nimport { interval } from \"rxjs\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === \"STARTHEARTBEAT\"),\n    switchMap((action) =>\n      interval(30000).pipe(\n        map((action) => {\n          return {\n            type: \"HEARTBEAT\",\n            payload: {\n              value: 1,\n            },\n          };\n        }),\n        takeUntil(action$.ofType(\"STOPHEARTBEAT\"))\n      )\n    )\n  );\n","import React, { useEffect, useContext, useCallback } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\n// import * as THREE from 'three'\n// import { OrbitControls } from 'drei'\n// import { Canvas } from 'react-three-fiber'\n// import { useSprings, a } from 'react-spring/three'\nimport { useClient } from \"../mqttConnection\"\nimport { NAME } from  \"../constants\"\nimport { publish } from '../mqtt'\nimport Context from \"../Context\"\n\nimport { addUser, setUsers } from \"../store/reducers/users\"\nimport store from \"../store\"\n\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  background-color: #448FA3;\n  height: 33.33vh;\n  width: 100%;\n`\n\nconst User = styled.div`\nheight: 25px;\nwidth: 25px;\nbackground-color: ${props => props.active ? \"#0197F6\" : \"#E2D388\"};\nborder-radius: 50%;\ndisplay: inline-block;\nmargin: 5px;\nborder: 1px solid black;\n`\n\n// const Sphere = ({position, color}) => {\n//   return (\n//     <mesh visible userData={{ test: \"hello\" }} position={position} castShadow>\n//       <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />      \n//       <meshStandardMaterial attach=\"material\" color={color}        transparent        roughness={0.1}        metalness={0.1}      />    \n//     </mesh>  \n//     );\n// }\n\n\n\n\n\nexport default ({id}) => {\n  const dispatch = useDispatch()\n  const { subscribe, unsubscribe } = useClient()\n  const [context, setContext] = useContext(Context)\n\n  const users = useSelector(state => state.users.users)\n  const getUsers = useCallback(() => {\n    return users\n  })\n  useEffect(() => {\n    if(id){\n      subscribe( `${NAME}/${id}/getUsers`, (topic, message) => {\n        if(message.from && message.from !== context.userId) {\n          publish(`${NAME}/${id}/setUsers`, store.getState().users.users)\n        }\n      })\n      subscribe( `${NAME}/${id}/setUsers`, (topic, message) => {\n        dispatch(setUsers(message))\n      })\n      subscribe(`${NAME}/${id}/enter`, (topic, message) => {\n        dispatch(addUser(message.userId))\n      })\n\n      subscribe(`${NAME}/${id}/alive`, (topic, message) => {\n        console.log(\"user is alive\", message)\n      })\n\n\n      publish(`${NAME}/${id}/getUsers`, {from: context.userId })\n      setInterval(()=> {\n        publish(`${NAME}/${id}/alive`, {userId: context.userId})\n      }, 30*1000)\n    }\n  }, [id], ()=> {\n      unsubscribe(`${NAME}/${id}/getUsers`)\n  });\n    return (\n    <Container>\n      {\n        users.map((user, index) => {\n          const position = [index/users.length * 50,0,0]\n          return (\n          <Tooltip key={user} title={user} placement=\"right-start\">\n            <User key={user} active={context.userId === user}>\n              {/* {user} */}\n            </User>\n          </Tooltip>\n          )\n        }) \n      }\n    </Container>\n    )\n}","const status = {\n    noteOn: 144,\n    noteOff: 128\n}\nconst createNoteOnMessage = (channel, note, vel) => {\n    return {\n        channel,\n        status: status.noteOn,\n        note,\n        velocity: vel ? vel : 127\n    }\n}\nexport {createNoteOnMessage, status}","import React, { useState, useEffect, useMemo, useRef} from \"react\";\nimport * as THREE from 'three'\nimport * as meshline from 'threejs-meshline'\nimport { extend, Canvas, useFrame } from 'react-three-fiber'\n\nextend(meshline)\n\nexport default ({analyzer}) => {\n    useFrame(() => {\n      // console.log(\"new frame\", analyzer.getValue())\n    })\n    return (\n        <>\n            {/* <Lines count={fftValues.length} colors={['rgb(100,0,0)', '#222', '#aaa', '#e0feff', 'rgb(100,0,60)', 'rgb(127,32,64)']} /> */}\n            {\n                // fftValues.forEach((value, index) => {\n                //     console.log(value, index)\n                // })\n            }\n        </>\n    )\n}","import React, { useState, useEffect, useMemo, useRef} from \"react\";\nimport styled from \"styled-components\"\nimport { Analyser, Freeverb, PingPongDelay, Destination, Sampler, FMSynth, MetalSynth, NoiseSynth, Channel } from \"tone\";\nimport {status as statusTypes} from \"../midi\"\nimport UnaCorda_C3 from \"../assets/unacorda_C3.mp3\"\nimport JarbleAmbiencePad_C3 from \"../assets/jarbleambiencepad_C3.mp3\"\n\n\nimport Visualisation from \"./Visualisation\"\nimport { Canvas } from 'react-three-fiber'\nimport { OrbitControls } from 'drei'\n\nimport { useClient } from \"../mqttConnection\"\n\nimport { NAME } from  \"../constants\"\n\nconst Container = styled.div`\n  width: 100%;\n  height: 66.66%;\n`\n\nexport default ({id}) => {\n  const [channel, setChannel] = useState(null);\n  const [analyzer, setAnalyzer] = useState(null);\n  const [unaCorda, setUnaCorda] = useState(null);\n  const [violin, setViolin] = useState(null);\n  const [bass, setBass] = useState(null);\n  const [metal, setMetal] = useState(null);\n  const [noise, setNoise] = useState(null);\n  const [fftValues, setFftValues] = useState([]);\n\n  const { subscribe, unsubscribe } = useClient()\n\n  useEffect(() => {\n    const channel = new Channel()\n    channel.connect(Destination)\n    setChannel(channel)\n\n    const analyzer = new Analyser()\n    channel.connect(analyzer)\n    setAnalyzer(analyzer)\n    setInterval(()=>{\n      if(analyzer){\n        setFftValues(analyzer.getValue());\n      }\n    }, 50)\n\n    const percussion = new Sampler({C3: UnaCorda_C3});\n    const reverb = new Freeverb(0.6, 5000);\n    const pingPongDelay = new PingPongDelay({\n      delayTime: \"32n\",\n      feedback: 0.7,\n      wet: 0.25,\n    });\n    percussion.volume.value = 0;\n    percussion.connect(pingPongDelay);\n    pingPongDelay.connect(reverb);\n    reverb.connect(channel);\n    setUnaCorda(percussion);\n\n    const violin = new Sampler({C3: JarbleAmbiencePad_C3})\n    violin.volume.value = 0\n    violin.connect(channel)\n    setViolin(violin)\n\n    const bass = new FMSynth(\n      {\n        \"volume\": 0,\n        \"detune\": 0,\n        \"portamento\": 0,\n        \"harmonicity\": 3,\n        \"oscillator\": {\n          \"partialCount\": 0,\n          \"partials\": [],\n          \"phase\": 0,\n          \"type\": \"sine\"\n        },\n        \"envelope\": {\n          \"attack\": 0.01,\n          \"attackCurve\": \"linear\",\n          \"decay\": 0.2,\n          \"decayCurve\": \"exponential\",\n          \"release\": 0.5,\n          \"releaseCurve\": \"exponential\",\n          \"sustain\": 1\n        },\n        \"modulation\": {\n          \"partialCount\": 0,\n          \"partials\": [],\n          \"phase\": 0,\n          \"type\": \"square\"\n        },\n        \"modulationEnvelope\": {\n          \"attack\": 0.2,\n          \"attackCurve\": \"linear\",\n          \"decay\": 0.01,\n          \"decayCurve\": \"exponential\",\n          \"release\": 0.5,\n          \"releaseCurve\": \"exponential\",\n          \"sustain\": 1\n        },\n        \"modulationIndex\": 12.22\n      }\n    )\n    bass.connect(channel)\n    setBass(bass)\n\n\n    const metal = new MetalSynth( {\n      frequency : 200 ,\n      envelope : {\n      attack : 0.001 ,\n      decay : 1.4 ,\n      release : 0.2\n      }\n      ,\n      harmonicity : 5.1 ,\n      modulationIndex : 32 ,\n      resonance : 4000 ,\n      octaves : 1.5\n      }\n    )\n    metal.connect(channel)\n    setMetal(metal)\n\n    const noise = new NoiseSynth()\n    noise.connect(channel)\n    setNoise(noise)\n  }, []);\n\n  \n  useEffect(() => {\n    subscribe( `${NAME}/${id}/orchestra`, (topic, message) => {\n      console.log(message)\n      const {channel, note, status} = message\n      // if(status !== statusTypes.noteOn && status !== statusTypes.noteOff) return\n      switch(channel){\n        case 1: {\n          if(unaCorda) unaCorda.triggerAttackRelease(note)\n          break;\n        }\n        case 2: {\n          if(violin) violin.triggerAttackRelease(note)\n          break;\n        }\n        case 3: {\n          if(bass && status === statusTypes.noteOn) bass.triggerAttack(note)\n          if(bass && status === statusTypes.noteOff) bass.triggerRelease(note)\n          break;\n        }\n        case 4: {\n          if(metal && status === statusTypes.noteOn) metal.triggerAttack(note)\n          if(metal && status === statusTypes.noteOff) metal.triggerRelease(note)\n          break;\n        }\n        case 5: {\n          if(noise && status === statusTypes.noteOn) noise.triggerAttack()\n          if(noise && status === statusTypes.noteOff) noise.triggerRelease()\n          break;\n        }\n        default : {\n          break;\n        }\n      }\n    })\n  }, [unaCorda, violin, id], ()=> {\n      unsubscribe(`${NAME}/${id}/orchestra`)\n  });\n\n  // console.log(analyzer ? analyzer.getValue() : \"\")\n  return (\n    <Container>\n      <Canvas\n      style={{ background: 'rgb(0,0,0)' }}\n      camera={{ position: [0, 0, 10], fov: 25 }}\n    >\n      <OrbitControls></OrbitControls>\n      {/* <Visualisation analyzer={analyzer}></Visualisation> */}\n    </Canvas>\n    </Container>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react'\nimport styled from \"styled-components\"\nimport Button from '@material-ui/core/Button';\nimport {Sampler, Channel } from \"tone\"\n\nimport Context from \"../Context\"\nimport ClappingSample from \"../assets/clapping.mp3\"\nimport TalkC2Sample from \"../assets/talk_C2.mp3\"\nimport TalkC3Sample from \"../assets/talk_C3.mp3\"\nimport TalkC4Sample from \"../assets/talk_C4.mp3\"\nimport ShoutSample from \"../assets/shout.mp3\"\nimport SingAlongSample from \"../assets/singAlong.mp3\"\nimport EnterSample from \"../assets/enter.mp3\"\nimport SneezeSample from \"../assets/sneeze.mp3\"\nimport CoughSample from \"../assets/cough.mp3\"\nimport PhotographSample from \"../assets/photograph.mp3\"\nimport PhoneSample from \"../assets/phone.mp3\"\nimport WalkSample from \"../assets/walk.mp3\"\nimport DanceSample from \"../assets/dance.mp3\"\nimport {NAME} from  \"../constants\"\nimport { useClient } from \"../mqttConnection\"\n\n\nconst Container = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 33.33vw;\n    height: 100vh;\n    background-color: rgb(2,24,43); /* Green */\n`\n\nconst StyledButton = styled.button`\n    background-color: rgba(68,143,163,1);\n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 5px;\n`\n\nconst actions = ['applaude', 'talk', 'photograph', 'walk', 'sneeze', 'cough', 'dance', 'shout', 'singAlong', 'phone']\n\nexport default () => {\n    const [context] = useContext(Context)\n    const { subscribe, publish, getClient } = useClient()\n    const [enter, setEnter] = useState(null)\n    const [leave, setLeave] = useState(null)\n    const [clap, setClap] = useState(null)\n    const [talk, setTalk] = useState(null)\n    const [shout, setShout] = useState(null)\n    const [singAlong, setSingAlong] = useState(null)\n    const [photograph, setPhotograph] = useState(null)\n    const [phone, setPhone] = useState(null)\n    const [sneeze, setSneeze] = useState(null)\n    const [cough, setCough] = useState(null)\n    const [walk, setWalk] = useState(null)\n    const [dance, setDance] = useState(null)\n    const [channel, setChannel] = useState(null)\n\n    useEffect(()=>{\n        const channel = new Channel(-32)\n        channel.toDestination();\n        setChannel(channel)\n\n        const clapping = new Sampler({C3: ClappingSample});\n        clapping.connect(channel)\n        setClap(clapping)\n\n        const singAlong = new Sampler({C3: SingAlongSample});\n        singAlong.connect(channel)\n        setSingAlong(singAlong)\n\n        const talking = new Sampler({\n            C2: TalkC2Sample,\n            C3: TalkC3Sample,\n            C4: TalkC4Sample,\n        });\n\n        talking.connect(channel)\n        setTalk(talking)\n\n        const shout = new Sampler({C3: ShoutSample});\n        shout.connect(channel)\n        setShout(shout)\n\n        const enter = new Sampler({C3: EnterSample});\n        enter.connect(channel)\n        setEnter(enter)\n\n        const leave = new Sampler({C3: EnterSample});\n        leave.connect(channel)\n        setLeave(leave)\n\n        const photograph = new Sampler({C3: PhotographSample});\n        photograph.connect(channel)\n        setPhotograph(photograph)\n\n        const phone = new Sampler({C3: PhoneSample});\n        phone.connect(channel)\n        setPhone(phone)\n        \n        const walk = new Sampler({C3: WalkSample});\n        walk.connect(channel)\n        setWalk(walk)\n\n        const dance = new Sampler({C3: DanceSample});\n        dance.connect(channel)\n        setDance(dance)\n\n        const sneeze = new Sampler({C3: SneezeSample});\n        sneeze.connect(channel)\n        setSneeze(sneeze)\n\n        const cough = new Sampler({C3: CoughSample});\n        cough.connect(channel)\n        setCough(cough)\n\n        \n        const client = getClient();\n        client.on(\"connect\", () => {\n            console.log(\"client connected\")\n        })\n    }, [])\n    useEffect(() => {\n        subscribe(`${NAME}/${context.hallId}/applaude`, (topic, message) => {\n            clap.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/talk`, (topic, message) => {\n            talk.triggerAttackRelease(20 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/shout`, (topic, message) => {\n            shout.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/singAlong`, (topic, message) => {\n            singAlong.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/enter`, (topic, message) => {\n            enter.triggerAttackRelease(72, 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/leave`, (topic, message) => {\n            console.log(\"user left\", message)\n        })\n        subscribe(`${NAME}/${context.hallId}/photograph`, (topic, message) => {\n            photograph.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/phone`, (topic, message) => {\n            phone.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/walk`, (topic, message) => {\n            walk.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/dance`, (topic, message) => {\n            dance.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/sneeze`, (topic, message) => {\n            sneeze.triggerAttackRelease(40 + Math.round(Math.random()*60), 20)\n        })\n        subscribe(`${NAME}/${context.hallId}/cough`, (topic, message) => {\n            cough.triggerAttackRelease(50 + Math.round(Math.random()*60), 20)\n        })\n    }, [context.hallId, clap, talk, singAlong, walk, phone, photograph, dance, cough, sneeze, enter, leave])\n    \n    return (\n        <Container>\n            {/* <span>{context.userId}</span> */}\n            {actions.map(action => {\n                return (\n                    <StyledButton key={action} variant=\"outlined\" color=\"primary\" onClick={() => {\n                        publish(`${NAME}/${context.hallId}/${action}`, {userId: context.userId})\n                    }}>\n                        {action}\n                    </StyledButton>\n                )\n            })}\n        </Container>\n    )\n}","import React, {useEffect, useContext} from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\"\nimport Audience from \"./Audience\"\nimport Orchestra from \"./Orchestra\"\nimport Interactions from \"./Interactions\"\n\nimport Context from \"../Context\"\nimport {NAME} from  \"../constants\"\nimport { useClient } from \"../mqttConnection\"\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n`\nexport default () => {\n    const { id } = useParams();\n    const [context, setContext] = useContext(Context)\n    const { publish } = useClient()\n\n    useEffect(()=> {\n        setContext({...context, hallId: id})\n        publish(`${NAME}/${id}/enter`, {userId: context.userId})\n    },[id])\n\n\n    return (\n        <Container>\n            <Orchestra className=\"orchestra\" id={id}></Orchestra>\n            <Audience className=\"audience\" id={id}></Audience>\n            <Interactions className=\"interactions\" id={id}></Interactions>\n        </Container>\n    )\n}","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nimport Home from \"./components/Home\"\nimport Hall from \"./components/Hall\"\nimport Context, {Provider as ContextProvider} from \"./Context\"\n\nimport store from \"./store\";\n\n\nconst App = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport default () => {\n  return (\n    <App>\n      <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/halls/:id\">\n            <ContextProvider value={Context}>\n              <Hall />\n            </ContextProvider>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n      </Provider>\n    </App>\n  )\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/enter.339b495d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/unacorda_C3.4c254059.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jarbleambiencepad_C3.3312bc03.mp3\";","module.exports = __webpack_public_path__ + \"static/media/clapping.31212348.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C2.4fdd1dcf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C3.f2a775cc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/talk_C4.cfab9d69.mp3\";","module.exports = __webpack_public_path__ + \"static/media/shout.b39ade0c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/singAlong.6896ef66.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sneeze.62f3207f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cough.9e20177b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/photograph.437bf6fd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/phone.9417a5f0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/walk.6a028ea7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dance.b39ade0c.mp3\";"],"sourceRoot":""}