{"version":3,"sources":["assets/unacorda_C3.mp3","assets/jarbleambiencepad_C3.mp3","components/Home.js","libmqtt.ts","mqttConnection.js","constants.js","mqtt.js","utils.js","Context.js","store/reducers/users.js","store/reducers/mixer.js","store/reducers/chat.js","store/reducers/console.js","store/reducers/rootReducer.js","store/epics/rootEpic.js","store/epics/timeoutAction.js","store/index.js","config/actions.js","components/Section.js","components/Audience.js","components/Lobby.js","midi.js","components/visualisation/Floor.js","components/visualisation/test.js","components/visualisation/Stage.js","components/Visualisation.js","components/visualisation/Lights.js","components/visualisation/PostProcessing.js","components/Orchestra.js","components/Button.js","components/Interactions.js","components/Slider.js","components/Mixer.js","components/Console.js","components/Chat.js","components/Hall.js","theme.js","App.js","serviceWorker.js","index.js","assets/enter.mp3","assets/instruments/1.mp3","assets/instruments/2.mp3","assets/instruments/3.mp3","assets/instruments/4.mp3","assets/instruments/5.mp3","assets/instruments/6.mp3","assets/instruments/7.mp3","assets/instruments/8.mp3","assets/instruments/9.mp3","assets/instruments/10.mp3","assets/instruments/11.mp3","assets/instruments/12.mp3","assets/instruments/13.mp3","assets/instruments/14.mp3","assets/instruments/15.mp3","assets/instruments/16.mp3","assets/interactions/1.mp3","assets/interactions/2.mp3","assets/interactions/3.mp3","assets/interactions/4.mp3","assets/interactions/5.mp3","assets/interactions/6.mp3","assets/interactions/7.mp3","assets/interactions/8.mp3"],"names":["module","exports","version","Container","styled","div","Version","Intro","section","RoomChooser","Door","useState","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateId","room","setRoom","history","useHistory","TextField","value","onChange","event","target","onClick","context","state","resume","push","isWildcardTopic","topic","includes","useClient","options","client","connect","listeners","Map","on","console","log","error","messageTopic","message","forEach","listenersForTopic","wildcard","res","t","String","split","w","lt","slice","join","topicMatchesMQTTWildcard","listener","JSON","parse","toString","subscribe","fn","currentListeners","get","set","Error","publish","payload","stringify","unsubscribe","delete","getClient","createConnection","NAME","mqtt","Context","React","createContext","Provider","children","userId","setState","types","defaultState","users","heartBeats","volumeInteractions","volumeStage","glitch","messages","addToHistory","user","text","type","appReducer","combineReducers","action","Date","now","key","indexToBeRemoved","index","id","splice","item","userAlreadyExists","sort","x","y","name","currentAction","mixer","chat","unshift","time","combineEpics","action$","pipe","filter","map","delay","epicMiddleware","createEpicMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","run","rootEpic","dispatch","label","color","logText","props","css","Title","Content","title","Users","User","actions","active","useDispatch","useContext","useSelector","useCallback","useEffect","from","getState","addUser","setInterval","Tooltip","placement","Actions","EnterButton","Button","onEnter","setName","fullWidth","onKeyPress","hallId","variant","status","rotation","PI","position","attach","args","geom","BoxBufferGeometry","matr","MeshNormalMaterial","rpi","Block","change","e","performance","geometry","Blocks","changeBlocks","handler","clearInterval","viewport","useThree","factor","width","height","size","Array","fill","_","left","top","scale","Box","mesh","useRef","coords","useFrame","current","ref","material","AnimatedSpikes","extend","meshline","analyzer","Text","anchorX","anchorY","Floor","Stage","intensity","focusDistance","focalLength","bokehScale","luminanceThreshold","luminanceSmoothing","opacity","eskil","offset","darkness","duration","strength","mode","GlitchMode","SPORADIC","ratio","samples","Sample1","Sample2","Sample3","Sample4","Sample5","Sample6","Sample7","Sample8","Sample9","Sample10","Sample11","Sample12","Sample13","Sample14","Sample15","Sample16","channel","setChannel","instruments","setInstruments","subscribed","setSubscribed","volume","Channel","Destination","sample","Sampler","C3","attack","release","note","velocity","statusTypes","triggerAttack","triggerRelease","style","background","camera","fov","colorManagement","Lights","Visualisation","PostProcessing","RoundButton","button","borderColor","Label","span","volumeNode","Volume","sfx","setSfx","enter","setEnter","leave","setLeave","EnterSample","triggerAttackRelease","round","setCurrentAction","Section","Grid","container","xs","SliderContainer","StyledSlider","Slider","min","max","orientation","stageVolume","interactionsVolume","defaultValue","setVolumeStage","setVolumeInteractions","ul","Input","StyledModal","Modal","ModalContent","StyledChat","setMessage","showChatMessages","setShowChatMessages","showSystemMessages","setShowSystemMessages","allMessages","List","ChatMessage","li","SystemMessage","FormControlLabel","control","Switch","checked","shiftKey","preventDefault","useParams","setContext","open","setOpen","showConsole","setShowConsole","AppBar","backgroundColor","Toolbar","IconButton","Lobby","Orchestra","className","Audience","sm","Interactions","Mixer","createMuiTheme","palette","primary","main","secondary","overrides","MuiSlider","thumb","track","rail","App","ThemeProvider","theme","path","Hall","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.294910b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unacorda_C3.4c254059.mp3\";","module.exports = __webpack_public_path__ + \"static/media/jarbleambiencepad_C3.3312bc03.mp3\";","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {context} from \"tone\";\nimport styled from \"styled-components\";\n\nimport pc from \"../../package.json\";\nconst version = pc.version;\n\nconst Container = styled.div`\n  max-width: 768px;\n  margin: auto;\n  margin-top: 100px;\n`;\nconst Version = styled.div`\n  position: fixed;\n  padding: 25px;\n  top: 0;\n  right: 0%;\n`;\nconst Intro = styled.section``;\nconst RoomChooser = styled.section`\n  p {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Door = styled.div`\n  margin-top: 92px;\n  text-align: center;\n`;\nconst generateId = (length) => {\n  var result = \"\";\n  var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nexport default () => {\n  const [room, setRoom] = useState(generateId(4));\n  const history = useHistory();\n  return (\n    <Container>\n      <Version>{version}</Version>\n      <Intro>\n        Welcome to vgig,<br></br>the virtual concert hall for everyone.\n      </Intro>\n      <RoomChooser>\n        <p>\n        </p>\n        <Door>\n          <TextField\n            value={room}\n            onChange={(event) => setRoom(event.target.value)}\n          ></TextField>\n          <Button\n            onClick={() => {\n              if (context.state !== \"running\") {\n                context.resume();\n              }\n              history.push(`/halls/${room}`);\n            }}\n          >\n            enter\n          </Button>\n        </Door>\n      </RoomChooser>\n    </Container>\n  );\n};","import { connect, MqttClient } from \"mqtt\"\n\nconst isWildcardTopic = (topic: string) =>\n    topic.includes(\"#\") || topic.includes(\"+\")\nexport default function topicMatchesMQTTWildcard(\n    topic: string,\n    wildcard: string\n) {\n    if (topic === wildcard) {\n        return []\n    } else if (wildcard === \"#\") {\n        return [topic]\n    }\n\n    let res = []\n\n    let t = String(topic).split(\"/\")\n    let w = String(wildcard).split(\"/\")\n\n    let i = 0\n    for (let lt = t.length; i < lt; i++) {\n        if (w[i] === \"+\") {\n            res.push(t[i])\n        } else if (w[i] === \"#\") {\n            res.push(t.slice(i).join(\"/\"))\n            return res\n        } else if (w[i] !== t[i]) {\n            return null\n        }\n    }\n\n    if (w[i] === \"#\") {\n        i += 1\n    }\n\n    return i === w.length ? res : null\n}\n\ninterface Client {\n    subscribe(topic: string, fn: Function): void\n    publish(topic: string, payload: string | number | object): void\n    publish(topic: string): void\n    unsubscribe(topic: string): void\n    getClient(): MqttClient\n}\n\nexport function createConnection(options: string) {\n    let client = connect(options)\n    let listeners: Map<string, Array<Function>> = new Map()\n\n    client.on(\"connect\", console.log)\n    client.on(\"disconnect\", console.log)\n    client.on(\"error\", console.error)\n\n    client.on(\"message\", (messageTopic, message) => {\n        listeners.forEach((listenersForTopic, topic) => {\n            if (\n                messageTopic === topic ||\n                (isWildcardTopic(topic) &&\n                    topicMatchesMQTTWildcard(messageTopic, topic))\n            ) {\n                listenersForTopic.forEach(listener => {\n                    try {\n                        listener(topic, JSON.parse(message.toString()))\n                    } catch (error) {\n                        listener(topic, {})\n                    }\n                })\n            }\n        })\n    })\n\n    return function useClient(): Client {\n        return {\n            subscribe: (topic: string, fn: Function) => {\n                        let currentListeners = listeners.get(topic)\n                        listeners.set(topic, [...(currentListeners || []), fn])\n    \n                        // if (!currentListeners) {\n                            client.subscribe(topic)\n                        // }\n                        \n                        let newListeners = listeners.get(topic)// ? listeners.get(topic) : []\n                        if(!newListeners) {\n                            throw new Error(\n                                `useClient: ${topic} does not exist`\n                            )\n                        }\n                        // newListeners = newListeners.filter((f) => f !== fn)\n\n                        // if (newListeners.length > 0) {\n                        //     listeners.set(topic, newListeners)\n                        // } else {\n                        //     listeners.delete(topic)\n                        //     client.unsubscribe(topic)\n                        // }\n                    // }\n            },\n            publish: (\n                topic: string,\n                payload?: string | number | object\n            ) => {\n                // client.subscribe(topic)\n                if (isWildcardTopic(topic)) {\n                    throw new Error(\n                        `useTopic: Tried publishing on wildcard topic ${topic}`\n                    )\n                } else {\n                    client.publish(topic, JSON.stringify(payload))\n                }\n            },\n            unsubscribe: (\n                topic: string\n            ) => {\n                listeners.delete(topic)\n                client.unsubscribe(topic)\n            },\n            getClient: () => client\n        }\n    }\n}\n","import { createConnection } from \"./libmqtt\"\n\n// export const useClient = createConnection({\n//     protocol: \"wss\",\n//     username: \"try\",\n//     password: \"try\",\n//     host: \"broker.shiftr.io\",\n//     port: 80,\n// })\n// export const useClient = createConnection({\n//     protocol: \"ws\", \n //     host: \"localhost\",\n//     port: 9001,\n// })\n\nexport const useClient = createConnection(\"wss://try:try@broker.shiftr.io\")","const NAME = \"vgig\"\nexport {NAME} ","import mqtt from \"mqtt\";\n// const client = mqtt.connect(\"ws://localhost:9001\");\nconst client = mqtt.connect(\"wss://try:try@broker.shiftr.io\");\nexport default client;\n\nconst publish = (topic, payload) => {\n    client.publish(topic, JSON.stringify(payload))\n}\n\nexport {publish}","const generateId = (length) => {\n    var result = \"\";\n    var characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  export {generateId}","import React, {useState} from \"react\"\nimport {generateId} from \"./utils\"\nconst Context = React.createContext();\n\nconst Provider = ({children}) => {\n    const [state, setState] = useState({userId: generateId(8)});\n    return (\n        <Context.Provider value={[state, setState]}>\n            {children}\n        </Context.Provider>\n\n    )\n}\nexport default Context\nexport {Provider} ","const types = {\n  ADDUSER: \"ADDUSER\",\n  SETUSERS: \"SETUSERS\",\n  HEARTBEAT: \"HEARTBEAT\",\n  SETNAME: \"SETNAME\",\n  SETCURRENTACTION: \"SETCURRENTACTION\",\n  UNSETCURRENTACTION: \"UNSETCURRENTACTION\",\n};\n\nconst defaultState = {\n  users: [], //all users\n  heartBeats: new Map(),\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.HEARTBEAT: {\n      let heartBeats = new Map(state.heartBeats);\n      let users = [...state.users];\n      heartBeats.set(action.payload.value, Date.now());\n      heartBeats.forEach((value, key) => {\n        if (Date.now() > value + 60 * 1000) {\n          console.log(\"user seems to be dead\", key);\n          // delete from heartbeats map\n          heartBeats.delete(key);\n          // delete from users array\n          let indexToBeRemoved = -1;\n          users.forEach((user, index) => {\n            if (user.id === key) {\n              indexToBeRemoved = index;\n            }\n          });\n          if (indexToBeRemoved !== -1) {\n            users.splice(indexToBeRemoved, 1);\n          }\n        }\n      });\n      return {\n        ...state,\n        heartBeats,\n        users,\n      };\n    }\n    case types.SETUSERS: {\n      let users = [...state.users];\n      action.payload.value.forEach((item) => {\n        let userAlreadyExists = false;\n        users.forEach((user) => {\n          if (user.id === item.id) {\n            userAlreadyExists = true;\n          }\n        });\n        if (!userAlreadyExists) users.push(item);\n      });\n\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.ADDUSER: {\n      let users = [...state.users];\n      let userAlreadyExists = false;\n      users.forEach((user) => {\n        if (user.id === action.payload.id) {\n          userAlreadyExists = true;\n        }\n      });\n      if (!userAlreadyExists)\n        users.push({ id: action.payload.id, name: action.payload.name });\n      return {\n        ...state,\n        users: users.sort((x, y) => {\n          return x.id < y.id;\n        }),\n      };\n    }\n    case types.SETNAME: {\n      let users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].name = action.payload.name;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.SETCURRENTACTION: {\n      const users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].currentAction = action.payload.action;\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    case types.UNSETCURRENTACTION: {\n      const users = [...state.users];\n      users.forEach((user, index) => {\n        if (user.id === action.payload.id) {\n          // user.name = action.payload.name;\n          users[index].currentAction = \"\";\n        }\n      });\n      return {\n        ...state,\n        users,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = (value) => {\n  return {\n    type: types.SETUSERS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const addUser = (id, name) => {\n  return {\n    type: types.ADDUSER,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\n\nexport const heartBeat = (value) => {\n  return {\n    type: types.HEARTBEAT,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setName = (id, name) => {\n  return {\n    type: types.SETNAME,\n    payload: {\n      id,\n      name,\n    },\n  };\n};\nexport const setCurrentAction = (id, action) => {\n  return {\n    type: types.SETCURRENTACTION,\n    payload: {\n      id,\n      action,\n    },\n  };\n};\nexport const unSetCurrentAction = (id) => {\n  return {\n    type: types.UNSETCURRENTACTION,\n    payload: {\n      id,\n    },\n  };\n};\nexport { types };\n","const types = {\n  SETVOLUMEINTERACTIONS: \"SETVOLUMEINTERACTIONS\",\n  SETVOLUMESTAGE: \"SETVOLUMESTAGE\",\n  SETGLITCH: \"SETGLITCH\",\n};\n\nconst defaultState = {\n  volumeInteractions: -6,\n  volumeStage: 0,\n  glitch: true,\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.SETVOLUMEINTERACTIONS: {\n      return {\n        ...state,\n        volumeInteractions: action.payload.value,\n      };\n    }\n    case types.SETVOLUMESTAGE: {\n      return {\n        ...state,\n        volumeStage: action.payload.value,\n      };\n    }\n    case types.SETGLITCH: {\n      return {\n        ...state,\n        glitch: action.payload.value,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const setVolumeInteractions = (value) => {\n  return {\n    type: types.SETVOLUMEINTERACTIONS,\n    payload: {\n      value,\n    },\n  };\n};\nexport const setVolumeStage = (value) => {\n  return {\n    type: types.SETVOLUMESTAGE,\n    payload: {\n      value,\n    },\n  };\n};\n\nexport const setGlitch = (value) => {\n  return {\n    type: types.SETGLITCH,\n    payload: {\n      value,\n    },\n  };\n};\n","const types = {\n  ADDMESSAGE: \"ADDMESSAGE\",\n};\n\nconst defaultState = {\n  messages: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDMESSAGE: {\n      let messages = [...state.messages];\n      messages.unshift({\n        ...action.payload.message,\n        time: new Date(),\n        type: \"CHAT\",\n      });\n      messages = messages.splice(0, 100);\n      return {\n        ...state,\n        messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addMessage = (user, text) => {\n  return {\n    type: types.ADDMESSAGE,\n    payload: {\n      message: {\n        user,\n        text,\n      },\n    },\n  };\n};\nexport { types };\n","const types = {\n  ADDTOHISTORY: \"ADDTOHISTORY\",\n};\n\nconst defaultState = {\n  history: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case types.ADDTOHISTORY: {\n      let history = [...state.history];\n      history.unshift({\n        ...action.payload,\n        time: new Date(),\n        type: \"SYSTEM\",\n      });\n      history = history.slice(0, 1000);\n      return {\n        ...state,\n        history,\n      };\n    }\n  }\n  return state;\n};\n\nconst addToHistory = (user, text) => {\n  return {\n    type: types.ADDTOHISTORY,\n    payload: {\n      user,\n      text,\n    },\n  };\n};\nexport { addToHistory };\n","import { combineReducers } from \"redux\";\n\nimport users from \"./users\";\nimport mixer from \"./mixer\";\nimport chat from \"./chat\";\nimport console from \"./console\";\n\nconst appReducer = combineReducers({\n  users,\n  mixer,\n  chat,\n  console\n});\n\nexport default (state, action) => {\n  if (action.type === \"RESET\") {\n    return appReducer(undefined, action);\n  } else if (action.type === \"SETSTATE\") {\n    return appReducer(action.payload, {\n      type: \"IGNORE\",\n    });\n  } else {\n    return appReducer(state, action);\n  }\n};\n","import { combineEpics } from \"redux-observable\";\nimport { filter, switchMap, map, takeUntil } from \"rxjs/operators\";\nimport { interval } from \"rxjs\";\n\nimport timeoutAction from \"./timeoutAction\";\n\n// export default (action$) =>\n//   action$.pipe(\n//     filter((action) => action.type === \"STARTHEARTBEAT\"),\n//     switchMap((action) =>\n//       interval(30000).pipe(\n//         map((action) => {\n//           return {\n//             type: \"HEARTBEAT\",\n//             payload: {\n//               value: 1,\n//             },\n//           };\n//         }),\n//         takeUntil(action$.ofType(\"STOPHEARTBEAT\"))\n//       )\n//     )\n//   );\n\nexport default combineEpics(timeoutAction);\n","import { filter, switchMap, map, takeUntil, delay } from \"rxjs/operators\";\nimport { interval } from \"rxjs\";\nimport { types, unSetCurrentAction } from \"../reducers/users\";\n\nexport default (action$) =>\n  action$.pipe(\n    filter((action) => action.type === types.SETCURRENTACTION),\n    map((action) => unSetCurrentAction(action.payload.id)),\n    delay(100)\n  );\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootEpic from \"./epics/rootEpic\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(epicMiddleware))\n);\n\nepicMiddleware.run(rootEpic);\nstore.dispatch({\n  type: \"INIT\",\n});\n\nexport default store;\n","export default [\n  {\n    id: \"applaude\",\n    label: \"applaude\",\n    color: \"#ffadad\",\n    logText: \"is applauding.\",\n  },\n  {\n    id: \"breath\",\n    label: \"breath\",\n    color: \"#ffd6a5\",\n    logText: \"is breathing.\",\n  },\n  {\n    id: \"cry\",\n    label: \"cry\",\n    color: \"#fffffc\",\n    logText: \"is crying.\",\n  },\n  {\n    id: \"sneeze\",\n    label: \"sneeze\",\n    color: \"#caffbf\",\n    logText: \"is sneezing.\",\n  },\n  {\n    id: \"smile\",\n    label: \"smile\",\n    color: \"#9bf6ff\",\n    logText: \"is smiling.\",\n  },\n  {\n    id: \"dance\",\n    label: \"dance\",\n    color: \"#a0c4ff\",\n    logText: \"is dancing.\",\n  },\n  {\n    id: \"sweat\",\n    label: \"sweat\",\n    color: \"#ffc6ff\",\n    logText: \"is sweating.\",\n  },\n  {\n    id: \"singAlong\",\n    label: \"sing along\",\n    color: \"#bdb2ff\",\n    logText: \"is singing along.\",\n  },\n];\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  ${(props) =>\n    props.color &&\n    css`\n      border-bottom: 3px solid ${props.color};\n      border-left: 1px solid white;\n      border-right: 1px solid white;\n    `}\n`;\nconst Title = styled.div`\n  width: 100%;\n  text-transform: uppercase;\n  color: white;\n  text-align: center;\n  ${(props) =>\n    props.color &&\n    css`\n      background-color: ${props.color};\n    `}\n`;\nconst Content = styled.div`\n  flex-grow: 1;\n`;\n\nexport default ({ title, color, children }) => {\n  return (\n    <Container color={color}>\n      <Title color={color}>{title}</Title>\n      <Content>{children}</Content>\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n// import * as THREE from 'three'\n// import { OrbitControls } from 'drei'\n// import { Canvas } from 'react-three-fiber'\n// import { useSprings, a } from 'react-spring/three'\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport { publish } from \"../mqtt\";\nimport Context from \"../Context\";\n\nimport { addUser, setUsers, heartBeat } from \"../store/reducers/users\";\nimport store from \"../store\";\nimport actions from \"../config/actions\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst Users = styled.div`\n  text-align: left;\n`;\nconst User = styled.div`\n  height: 25px;\n  width: 25px;\n  background-color: ${({ action }) => {\n    let color = \"rgb(64,64,64)\";\n    actions.forEach((item) => {\n      if (item.id === action) {\n        color = item.color;\n      }\n    });\n    return `${color}`;\n  }};\n  /* background-color: ${(props) =>\n    props.active ? \"rgb(255,170,100)\" : \"rgb(254, 250, 170)\"}; */\n  border-radius: 50%;\n  display: inline-block;\n  margin: 5px;\n  /* border: ${({ action }) => {\n    let color = \"black\";\n    actions.forEach((item) => {\n      if (item.id === action) {\n        color = item.color;\n      }\n    });\n    return `solid 3px ${color}`;\n  }}; */\n`;\n\n// const Sphere = ({position, color}) => {\n//   return (\n//     <mesh visible userData={{ test: \"hello\" }} position={position} castShadow>\n//       <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n//       <meshStandardMaterial attach=\"material\" color={color}        transparent        roughness={0.1}        metalness={0.1}      />\n//     </mesh>\n//     );\n// }\n\nexport default ({ id }) => {\n  const dispatch = useDispatch();\n  const { subscribe, unsubscribe } = useClient();\n  const [context, setContext] = useContext(Context);\n\n  const users = useSelector((state) => state.users.users);\n  const getUsers = useCallback(() => {\n    return users;\n  });\n  useEffect(\n    () => {\n      if (id) {\n        subscribe(`${NAME}/${id}/getUsers`, (topic, message) => {\n          if (message.from && message.from !== context.userId) {\n            publish(`${NAME}/${id}/setUsers`, store.getState().users.users);\n          }\n        });\n        subscribe(`${NAME}/${id}/setUsers`, (topic, message) => {\n          dispatch(setUsers(message));\n        });\n        subscribe(`${NAME}/${id}/enterLobby`, (topic, message) => {\n          dispatch(addUser(message.userId, \"anonymous \"));\n        });\n\n        subscribe(`${NAME}/${id}/alive`, (topic, message) => {\n          dispatch(heartBeat(message.userId));\n        });\n\n        publish(`${NAME}/${id}/getUsers`, { from: context.userId });\n        setInterval(() => {\n          publish(`${NAME}/${id}/alive`, { userId: context.userId });\n        }, 30 * 1000);\n      }\n    },\n    [id],\n    () => {\n      unsubscribe(`${NAME}/${id}/getUsers`);\n    }\n  );\n  return (\n    <Container>\n      {/* <Section title={\"audience\"} color={\"rgb(46, 94, 160)\"}> */}\n      <Users>\n        {users.map((user, index) => {\n          const position = [(index / users.length) * 50, 0, 0];\n          return (\n            <Tooltip key={user.id} title={user.name} placement=\"right-start\">\n              <User\n                key={user.id}\n                active={context.userId === user.id}\n                action={user.currentAction}\n              >\n                {/* {user} */}\n              </User>\n            </Tooltip>\n          );\n        })}\n      </Users>\n      {/* </Section> */}\n    </Container>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { useClient } from \"../mqttConnection\";\nimport { NAME } from \"../constants\";\nimport Context from \"../Context\";\n\nconst Container = styled.div``;\nconst Actions = styled.section`\n  margin-top: 24px !important;\n  display: flex;\n  flex-direction: row-reverse;\n`;\nconst EnterButton = styled(Button)``;\n\nexport default ({ onEnter }) => {\n  const { subscribe, publish, getClient } = useClient();\n  const [name, setName] = useState(\"\");\n  const [context] = useContext(Context);\n  return (\n    <Container>\n      <div>\n        hello, <br></br>please enter your name and enjoy the show.\n      </div>\n      <TextField\n        fullWidth\n        label=\"name\"\n        value={name}\n        onChange={(event) => {\n          setName(event.target.value);\n        }}\n        onKeyPress={(event) => {\n          if (event.key === \"Enter\" && name !== \"\") {\n            publish(`${NAME}/${context.hallId}/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }\n        }}\n      ></TextField>\n      <br></br>\n\n      <Actions>\n        <EnterButton\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => {\n            if (name === \"\") return;\n            publish(`${NAME}/${context.hallId}/setUserName`, {\n              id: context.userId,\n              name,\n            });\n            setName(\"\");\n            onEnter(name);\n          }}\n        >\n          enter\n        </EnterButton>\n      </Actions>\n    </Container>\n  );\n};\n","const status = {\n    noteOn: 144,\n    noteOff: 128\n}\nconst createNoteOnMessage = (channel, note, vel) => {\n    return {\n        channel,\n        status: status.noteOn,\n        note,\n        velocity: vel ? vel : 127\n    }\n}\nexport {createNoteOnMessage, status}","import React from \"react\";\nimport * as THREE from \"three\";\nimport { extend, Canvas, useFrame } from \"react-three-fiber\";\n\nexport default () => {\n  return (\n    <>\n      <mesh rotation={[-Math.PI / 3, 0, 0]} position={[0, 0, 0]}>\n        {/* <mesh> */}\n        <planeBufferGeometry\n          attach=\"geometry\"\n          args={[100, 100]}\n        ></planeBufferGeometry>\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"rgb(64,32,32)\"\n        ></meshStandardMaterial>\n      </mesh>\n    </>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { BoxBufferGeometry, MeshNormalMaterial } from \"three\";\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport {\n  unstable_LowPriority as low,\n  unstable_runWithPriority as run,\n} from \"scheduler\";\n\nconst SLOWDOWN = 1;\nconst ROW = 20;\nconst BLOCK_AMOUNT = 600;\nconst SPIKE_AMOUNT = 1000;\nconst geom = new BoxBufferGeometry(1, 1, 1);\nconst matr = new MeshNormalMaterial();\nconst rpi = () => Math.random() * Math.PI;\n\nfunction Block({ change, ...props }) {\n  const [color, set] = useState(0);\n\n  // Artificial slowdown ...\n  if (color > 0) {\n    const e = performance.now() + SLOWDOWN;\n    while (performance.now() < e) {}\n  }\n\n  //   useEffect(() => {\n  //     if (change)\n  //       setTimeout(\n  //         () => run(low, () => set(Math.round(Math.random() * 0xffffff))),\n  //         Math.random() * 1000\n  //       );\n  //   }, [change]);\n\n  return (\n    <mesh {...props} geometry={geom}>\n      <meshBasicMaterial attach=\"material\" color={color} />\n    </mesh>\n  );\n}\n\nfunction Blocks() {\n  const [changeBlocks, set] = useState(false);\n  useEffect(() => {\n    const handler = setInterval(() => set((state) => !state), 2000);\n    return () => clearInterval(handler);\n  });\n\n  const { viewport } = useThree();\n  const { width, height } = viewport().factor;\n  const size = width / 100 / ROW;\n  return new Array(BLOCK_AMOUNT).fill().map((_, i) => {\n    const left = -width / 100 / 2 + size / 2;\n    const top = height / 100 / 2 - size / 2;\n    const x = (i % ROW) * size;\n    const y = Math.floor(i / ROW) * -size;\n    return (\n      <Block\n        key={i}\n        change={changeBlocks}\n        scale={[size, size, size]}\n        position={[left + x, top + y, 0]}\n      />\n    );\n  });\n}\n\nfunction Box() {\n  let t = 0;\n  const mesh = useRef();\n  const [coords] = useState(() => [rpi(), rpi(), rpi()]);\n  useFrame(\n    () =>\n      mesh.current &&\n      mesh.current.rotation.set(\n        coords[0] + (t += 0.01),\n        coords[1] + t,\n        coords[2] + t\n      )\n  );\n  return <mesh ref={mesh} geometry={geom} material={matr} scale={[2, 2, 2]} />;\n}\n\nfunction AnimatedSpikes() {\n  return new Array(SPIKE_AMOUNT).fill().map((_, i) => <Box key={i} />);\n}\n\nexport default () => {\n  return (\n    <>\n      <Blocks />\n      <AnimatedSpikes />\n    </>\n  );\n};\n","import React from \"react\";\nimport Test from \"./test\";\nexport default () => {\n  return (\n    <>\n      <Test></Test>\n    </>\n  );\n};\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport * as meshline from \"threejs-meshline\";\nimport { extend, Canvas, useFrame } from \"react-three-fiber\";\nimport { Text } from \"@react-three/drei/Text\";\n\nimport Floor from \"./visualisation/Floor\";\nimport Stage from \"./visualisation/Stage\";\n\nextend(meshline);\n\nconst Particle = ({ position }) => {\n  const mesh = useRef(null);\n  useFrame(() => {\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n    // console.log(\"new frame\", analyzer.getValue())\n  });\n  return (\n    <mesh position={position} ref={mesh}>\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]}></boxBufferGeometry>\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"blue\"\n      ></meshStandardMaterial>\n    </mesh>\n  );\n};\n\nexport default ({ analyzer }) => {\n  return (\n    <>\n      <Text\n        color=\"white\" // default\n        anchorX=\"center\" // default\n        anchorY=\"middle\" // default\n      >\n        here will be an audio visualisation\n      </Text>\n\n      <Text\n        color=\"purple\" // default\n        anchorX=\"center\" // default\n        anchorY=\"center\" // default\n        position={[-20, 2, 0]}\n      >\n        WSTG\n      </Text>\n\n      <Floor></Floor>\n      <Stage></Stage>\n      {/* <Particle position={[-2, 0, 0]}></Particle>\n      <Particle position={[-1, 2, 0]}></Particle>\n      <Particle position={[2, 3, 0]}></Particle> */}\n      <mesh>\n        <bufferGeometry></bufferGeometry>\n      </mesh>\n\n      {/* <Lines count={fftValues.length} colors={['rgb(100,0,0)', '#222', '#aaa', '#e0feff', 'rgb(100,0,60)', 'rgb(127,32,64)']} /> */}\n      {\n        // fftValues.forEach((value, index) => {\n        //     console.log(value, index)\n        // })\n      }\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <>\n      <ambientLight intensity={1}></ambientLight>\n      <pointLight position={[-10, -10, 5]} intensity={13.6}></pointLight>\n      <pointLight position={[7, -15, 5]} intensity={12.8}></pointLight>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  EffectComposer,\n  DepthOfField,\n  Bloom,\n  Noise,\n  Vignette,\n  Glitch,\n} from \"@react-three/postprocessing\";\nimport { GlitchMode } from \"postprocessing\";\n\nexport default () => {\n  const glitch = useSelector((state) => state.mixer.glitch);\n  console.log(\"new glitch value\", glitch);\n  return (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={0.02}\n        bokehScale={2}\n        height={480}\n      />\n      <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n      <Noise opacity={0.2} />\n      <Vignette eskil={false} offset={0.1} darkness={1.1} />\n      <Glitch\n        delay={[1.5, 10.5]} // min and max glitch delay\n        duration={[0.05, 0.4]} // min and max glitch duration\n        strength={[0.002, 0.02]} // min and max glitch strength\n        mode={GlitchMode.SPORADIC} // glitch mode\n        ratio={0.48} // Threshold for strong glitches, 0 - no weak glitches, 1 - no strong glitches.\n        active={glitch}\n      />\n    </EffectComposer>\n  );\n};\n","import React, { useState, useEffect, useMemo, useRef, useReducer } from \"react\";\nimport { Provider as StoreProvider, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  Analyser,\n  Freeverb,\n  PingPongDelay,\n  Destination,\n  Sampler,\n  FMSynth,\n  MetalSynth,\n  NoiseSynth,\n  Channel,\n  now,\n} from \"tone\";\nimport { status as statusTypes } from \"../midi\";\nimport UnaCorda_C3 from \"../assets/unacorda_C3.mp3\";\nimport JarbleAmbiencePad_C3 from \"../assets/jarbleambiencepad_C3.mp3\";\n\nimport Visualisation from \"./Visualisation\";\nimport Lights from \"./visualisation/Lights\";\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls } from \"drei\";\n\nimport { useClient } from \"../mqttConnection\";\n\nimport { NAME } from \"../constants\";\n\nimport PostProcessing from \"./visualisation/PostProcessing\";\nimport store from \"../store\";\n\nimport Sample1 from \"../assets/instruments/1.mp3\";\nimport Sample2 from \"../assets/instruments/2.mp3\";\nimport Sample3 from \"../assets/instruments/3.mp3\";\nimport Sample4 from \"../assets/instruments/4.mp3\";\nimport Sample5 from \"../assets/instruments/5.mp3\";\nimport Sample6 from \"../assets/instruments/6.mp3\";\nimport Sample7 from \"../assets/instruments/7.mp3\";\nimport Sample8 from \"../assets/instruments/8.mp3\";\nimport Sample9 from \"../assets/instruments/9.mp3\";\nimport Sample10 from \"../assets/instruments/10.mp3\";\nimport Sample11 from \"../assets/instruments/11.mp3\";\nimport Sample12 from \"../assets/instruments/12.mp3\";\nimport Sample13 from \"../assets/instruments/13.mp3\";\nimport Sample14 from \"../assets/instruments/14.mp3\";\nimport Sample15 from \"../assets/instruments/15.mp3\";\nimport Sample16 from \"../assets/instruments/16.mp3\";\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n  Sample9,\n  Sample10,\n  Sample11,\n  Sample12,\n  Sample13,\n  Sample14,\n  Sample15,\n  Sample16,\n];\n\nconst Container = styled.div`\n  width: 100%;\n  height: 66.66%;\n`;\n\nexport default ({ id }) => {\n  const [channel, setChannel] = useState(null);\n  const [instruments, setInstruments] = useState(null);\n  const [analyzer, setAnalyzer] = useState(null);\n  const [fftValues, setFftValues] = useState([]);\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { subscribe, unsubscribe } = useClient();\n  const volume = useSelector((state) => state.mixer.volumeStage);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const channel = new Channel(-32);\n    channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].attack = 0;\n      instruments[index].release = 1.3;\n      instruments[index].connect(channel);\n    });\n    setChannel(channel);\n    setInstruments(instruments);\n  }, []);\n\n  useEffect(() => {\n    if (!instruments || subscribed) return;\n    setSubscribed(true);\n    subscribe(`${NAME}/${id}/orchestra`, (topic, message) => {\n      const { channel, note, status, velocity } = message;\n      if (channel && channel > 0 && channel <= 16) {\n        if (status === statusTypes.noteOn) {\n          instruments[channel - 1].triggerAttack(note, now(), velocity / 127);\n        }\n        if (status === statusTypes.noteOff) {\n          instruments[channel - 1].triggerRelease(note, now());\n        }\n      }\n      // if(status !== statusTypes.noteOn && status !== statusTypes.noteOff) return\n    });\n  }, [instruments]);\n\n  // console.log(analyzer ? analyzer.getValue() : \"\")\n  return (\n    <Container>\n      <Canvas\n        style={{ background: \"rgb(0,0,0)\" }}\n        camera={{ position: [0, 0, 10], fov: 45 }}\n        colorManagement\n      >\n        <OrbitControls></OrbitControls>\n        <Lights></Lights>\n\n        <Visualisation analyzer={analyzer}></Visualisation>\n        <StoreProvider store={store}>\n          <PostProcessing></PostProcessing>\n        </StoreProvider>\n      </Canvas>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  /* border: 1px dashed white; */\n`;\n\nconst RoundButton = styled.button`\n  /* background-color: rgba(254, 250, 170, 1); */\n  background-color: rgb(255, 170, 100);\n  color: white;\n  height: 32px;\n  width: 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 5px;\n  /* border-radius: 50%; */\n  border: none;\n  ${({ borderColor }) =>\n    borderColor &&\n    css`\n      /* border: 3px solid ${borderColor}; */\n      background-color: ${borderColor};\n    `}\n`;\nconst Label = styled.span`\n  color: white;\n`;\n\nconst Button = ({ label, borderColor, onClick }) => {\n  return (\n    <Container>\n      <RoundButton onClick={onClick} borderColor={borderColor}></RoundButton>\n      <br></br>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n\nexport default Button;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MUIButton from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport { Sampler, Channel, Volume, Destination } from \"tone\";\n\nimport Context from \"../Context\";\n\nimport Sample1 from \"../assets/interactions/1.mp3\";\nimport Sample2 from \"../assets/interactions/2.mp3\";\nimport Sample3 from \"../assets/interactions/3.mp3\";\nimport Sample4 from \"../assets/interactions/4.mp3\";\nimport Sample5 from \"../assets/interactions/5.mp3\";\nimport Sample6 from \"../assets/interactions/6.mp3\";\nimport Sample7 from \"../assets/interactions/7.mp3\";\nimport Sample8 from \"../assets/interactions/8.mp3\";\nimport EnterSample from \"../assets/enter.mp3\";\n\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setCurrentAction } from \"../store/reducers/users\";\nimport { addToHistory } from \"../store/reducers/console\";\n\nimport Button from \"./Button\";\nimport Section from \"./Section\";\nimport config from \"../config/config.json\";\n\nconst actions = config.actions;\n\nconst samples = [\n  Sample1,\n  Sample2,\n  Sample3,\n  Sample4,\n  Sample5,\n  Sample6,\n  Sample7,\n  Sample8,\n];\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst channel = new Channel(-32);\nconst volumeNode = new Volume(0);\nchannel.connect(volumeNode);\nvolumeNode.connect(Destination);\n\nexport default () => {\n  const [context] = useContext(Context);\n  const { subscribe, publish, getClient } = useClient();\n  const [channel, setChannel] = useState(null);\n  const [sfx, setSfx] = useState(null);\n  const [enter, setEnter] = useState(null);\n  const [leave, setLeave] = useState(null);\n\n  const dispatch = useDispatch();\n  const volume = useSelector((state) => state.mixer.volumeInteractions);\n  if (channel) {\n    // volumeNode.volume.value = volume\n    channel.volume.value = volume;\n  }\n\n  useEffect(() => {\n    const channel = new Channel(-32);\n    channel.connect(Destination);\n    const instruments = [];\n    samples.forEach((sample, index) => {\n      instruments.push(new Sampler({ C3: sample }));\n      instruments[index].attack = 0;\n      instruments[index].release = 1.3;\n      instruments[index].connect(channel);\n    });\n    setChannel(channel);\n    setSfx(instruments);\n\n    const enter = new Sampler({ C3: EnterSample });\n    enter.connect(channel);\n    setEnter(enter);\n\n    const leave = new Sampler({ C3: EnterSample });\n    leave.connect(channel);\n    setLeave(leave);\n  }, []);\n\n  useEffect(() => {\n    subscribe(`${NAME}/${context.hallId}/enter`, (topic, message) => {\n      enter.triggerAttackRelease(\"C3\", 20);\n      dispatch(addToHistory(message.userId, \"entered.\"));\n    });\n    subscribe(`${NAME}/${context.hallId}/leave`, (topic, message) => {\n      leave.triggerAttackRelease(\"C3\", 20);\n      dispatch(addToHistory(message.userId, \"left.\"));\n    });\n    actions.forEach((action, index) => {\n      subscribe(`${NAME}/${context.hallId}/${action.id}`, (topic, message) => {\n        sfx[index].triggerAttackRelease(\n          40 + Math.round(Math.random() * 60),\n          20\n        );\n        dispatch(addToHistory(message.userId, action.logText));\n        dispatch(setCurrentAction(message.userId, action.id));\n      });\n    });\n  }, [context.hallId]);\n\n  return (\n    <Container>\n      <Section title={\"actions\"} color={\"rgb(46, 94, 160)\"}>\n        <Grid container>\n          {actions.map((action, index) => {\n            return (\n              <Grid item xs={3} key={index}>\n                <Button\n                  key={action.id}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  borderColor={action.color}\n                  onClick={() => {\n                    publish(`${NAME}/${context.hallId}/${action.id}`, {\n                      userId: context.userId,\n                    });\n                  }}\n                  label={action.label}\n                ></Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Section>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  height: 100%;\n  justify-content: center;\n`;\n\nconst SliderContainer = styled.div`\n  width: 100%;\n  text-align: center;\n`;\nconst StyledSlider = styled(Slider)`\n  height: 50px !important;\n`;\n\nconst Label = styled.div`\n  color: white;\n  margin-top: 5px;\n`;\n\nexport default ({ value, onChange, min, max, label }) => {\n  return (\n    <Container>\n      <SliderContainer>\n        <StyledSlider\n          orientation=\"vertical\"\n          //   getAriaValueText={valuetext}\n          min={min}\n          max={max}\n          value={value}\n          onChange={onChange}\n        />\n      </SliderContainer>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MUISlider from \"@material-ui/core/Slider\";\nimport Slider from \"./Slider\";\nimport styled from \"styled-components\";\n\nimport {\n  setVolumeInteractions,\n  setVolumeStage,\n  setGlitch,\n} from \"../store/reducers/mixer\";\nimport Section from \"./Section\";\nimport Button from \"./Button\";\n\nconst Container = styled.div`\n  background-color: black;\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\nconst AudioContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst SliderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n  const stageVolume = useSelector((state) => state.mixer.volumeStage);\n  const interactionsVolume = useSelector(\n    (state) => state.mixer.volumeInteractions\n  );\n  const glitch = useSelector((state) => state.mixer.glitch);\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={6}>\n          <Section title={\"light\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    dispatch(setGlitch(!glitch));\n                    // publish(`${NAME}/${context.hallId}/${action}`, {\n                    //   userId: context.userId,\n                    // });\n                  }}\n                  label={\"glitch\"}\n                ></Button>\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n        <Grid item xs={6}>\n          <Section title={\"audio\"} color={\"rgb(220, 46, 40)\"}>\n            <Grid container style={{ height: \"100%\" }}>\n              <Grid item xs={6}>\n                <SliderContainer>\n                  <Slider\n                    orientation=\"vertical\"\n                    //   getAriaValueText={valuetext}\n                    defaultValue={-100}\n                    min={-32}\n                    max={0}\n                    value={stageVolume}\n                    onChange={(event, value) => {\n                      dispatch(setVolumeStage(value));\n                    }}\n                    label={\"orchestra\"}\n                  />\n                </SliderContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <Slider\n                  orientation=\"vertical\"\n                  //   getAriaValueText={valuetext}\n                  defaultValue={-100}\n                  min={-32}\n                  max={0}\n                  value={interactionsVolume}\n                  onChange={(event, value) => {\n                    dispatch(setVolumeInteractions(value));\n                  }}\n                  label={\"audience\"}\n                />\n              </Grid>\n            </Grid>\n          </Section>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { compareAsc, format } from \"date-fns\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  overflow-y: scroll;\n`;\n\nconst Time = styled.span`\n  font-style: italic;\n  color: #333;\n`;\nconst User = styled.span`\n  font-weight: bold;\n  color: #333;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n  max-height: 100%;\n  overflow-y: scroll;\n`;\n\nexport default () => {\n  const history = useSelector((state) => state.console.history);\n  const users = useSelector((state) => state.users.users);\n  return (\n    <Container>\n      <Section title={\"console\"} color={\"rgb(46, 94, 160)\"}>\n        <List>\n          {history.map((item, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === item.user) name = user.name;\n            });\n            return (\n              <li key={index}>\n                <Time>{format(item.time, \"HH:mm:ss\")}</Time>:{\" \"}\n                <User>{name}</User> {item.text}\n              </li>\n            );\n          })}\n        </List>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Context from \"../Context\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { compareAsc, format } from \"date-fns\";\nimport { useClient } from \"../mqttConnection\";\n\nimport Section from \"./Section\";\n\nconst Container = styled.div`\n  width: 33vw;\n  @media only screen and (max-width: 600px) {\n    width: 100vw;\n  }\n\n  height: 50vh;\n  position: absolute;\n  top: 0;\n  right: 0;\n  flex-grow: 1;\n  overflow-y: scroll;\n  background-color: white;\n  color: black;\n  z-index: 1101;\n`;\n\nconst Input = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n`;\n\nconst Time = styled.span`\n  font-style: italic;\n  color: #333;\n`;\nconst User = styled.span`\n  font-weight: bold;\n  color: #333;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n`;\n\nexport default () => {\n  const [message, setMessage] = useState(\"\");\n  const [showChatMessages, setShowChatMessages] = useState(true);\n  const [showSystemMessages, setShowSystemMessages] = useState(false);\n  const history = useSelector((state) => state.console.history);\n  const messages = useSelector((state) => state.chat.messages);\n\n  const allMessages = [...history, ...messages].sort((x, y) => x.time < y.time);\n  const [context] = useContext(Context);\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users.users);\n  const { subscribe, publish, getClient } = useClient();\n\n  const List = styled.ul`\n    list-style-type: none;\n  `;\n\n  const ChatMessage = styled.li``;\n  const SystemMessage = styled.li`\n    font-style: italic;\n    text-align: right;\n  `;\n\n  return (\n    <Container>\n      <Section title={\"chat/console\"} color={\"rgb(46, 94, 160)\"}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showChatMessages}\n              onChange={(event) => {\n                setShowChatMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"chat messages\"\n        />\n\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showSystemMessages}\n              onChange={(event) => {\n                setShowSystemMessages(event.target.checked);\n              }}\n              color=\"primary\"\n            />\n          }\n          label=\"system messages\"\n        />\n\n        <List>\n          {allMessages.map((message, index) => {\n            let name;\n            users.forEach((user) => {\n              if (user.id === message.user) name = user.name;\n            });\n            return (\n              <>\n                {message.type === \"CHAT\" && showChatMessages && (\n                  <ChatMessage key={index}>\n                    {name}: {message.text}\n                  </ChatMessage>\n                )}\n                {message.type === \"SYSTEM\" && showSystemMessages && (\n                  <SystemMessage key={index}>\n                    {context.hallId}: {name} {message.text}\n                  </SystemMessage>\n                )}\n              </>\n            );\n          })}\n        </List>\n        <Input>\n          <Grid\n            container\n            //   spacing={2}\n          >\n            <Grid item xs={9}>\n              <TextField\n                fullWidth\n                value={message}\n                onChange={(event) => setMessage(event.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\" && !e.shiftKey) {\n                    e.preventDefault();\n                    publish(`vgig/${context.hallId}/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                    setMessage(\"\");\n                  }\n                }}\n              ></TextField>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                color=\"primary\"\n                // variant=\"outlined\"\n                fullWidth\n                onClick={(event) => {\n                  if (message !== \"\") {\n                    publish(`vgig/${context.hallId}/chat`, {\n                      user: context.userId,\n                      message: message,\n                    });\n                  }\n                  setMessage(\"\");\n                }}\n              >\n                <SendIcon></SendIcon>\n              </Button>\n            </Grid>\n          </Grid>\n        </Input>\n      </Section>\n    </Container>\n  );\n};\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport styled from \"styled-components\";\nimport Audience from \"./Audience\";\nimport Lobby from \"./Lobby\";\nimport Orchestra from \"./Orchestra\";\nimport Interactions from \"./Interactions\";\nimport Mixer from \"./Mixer\";\n\nimport Context from \"../Context\";\nimport { NAME } from \"../constants\";\nimport { useClient } from \"../mqttConnection\";\n\nimport { setName } from \"../store/reducers/users\";\nimport { addMessage } from \"../store/reducers/chat\";\n\nimport Console from \"./Console\";\nimport Chat from \"./Chat\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n`;\n\nconst StyledModal = styled(Modal)`\n  width: 100%;\n  height: 100%;\n`;\nconst ModalContent = styled.div`\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledChat = styled(Chat)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 33vw;\n`;\nconst panels = { CHAT: \"CHAT\", CONSOLE: \"CONSOLE\" };\nexport default () => {\n  const { id } = useParams();\n  const [context, setContext] = useContext(Context);\n  const { publish, subscribe } = useClient();\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(true);\n  const [showConsole, setShowConsole] = useState(false);\n\n  useEffect(() => {\n    setContext({ ...context, hallId: id });\n    publish(`${NAME}/${id}/enterLobby`, {\n      userId: context.userId,\n    });\n    subscribe(`${NAME}/${id}/setUserName`, (topic, message) => {\n      dispatch(setName(message.id, message.name));\n    });\n    subscribe(`${NAME}/${id}/chat`, (topic, message) => {\n      dispatch(addMessage(message.user, message.message));\n    });\n    // publish(`${NAME}/${id}/getUsers`, { from: context.userId });\n    // setInterval(() => {\n    //   publish(`${NAME}/${id}/alive`, { userId: context.userId });\n    // }, 30 * 1000);hallId\n  }, [id]);\n\n  return (\n    <Container>\n      <AppBar position=\"sticky\" style={{ backgroundColor: \"transparent\" }}>\n        <Toolbar>\n          <IconButton\n            color=\"primary\"\n            onClick={(event) => {\n              setShowConsole(!showConsole);\n            }}\n          >\n            <ForumIcon></ForumIcon>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <StyledModal open={open}>\n        <ModalContent>\n          <Lobby\n            onEnter={(name) => {\n              publish(`${NAME}/${context.hallId}/enter`, {\n                userId: context.userId,\n                name,\n              });\n              setOpen(false);\n            }}\n          ></Lobby>\n        </ModalContent>\n      </StyledModal>\n      <>\n        <Orchestra className=\"orchestra\" id={id}></Orchestra>\n        <Audience className=\"audience\" id={id}></Audience>\n        <Grid container>\n          <Grid item xs={12} sm={8}>\n            <Interactions className=\"interactions\" id={id}></Interactions>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Mixer></Mixer>\n          </Grid>\n        </Grid>\n        {showConsole && <StyledChat></StyledChat>}\n      </>\n    </Container>\n  );\n};\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"rgb(46, 94, 160)\",\n    },\n    secondary: {\n      main: \"rgb(220, 46, 40)\",\n    },\n  },\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        color: \"white\",\n      },\n      track: {\n        color: \"white\",\n      },\n      rail: {\n        color: \"white\",\n      },\n    },\n  },\n});\n","import React from \"react\";\nimport { Provider as StoreProvider } from \"react-redux\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./components/Home\";\nimport Hall from \"./components/Hall\";\nimport Context, { Provider as ContextProvider } from \"./Context\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\nimport store from \"./store\";\n\nconst App = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default () => {\n  return (\n    <App>\n      <ThemeProvider theme={theme}>\n        <StoreProvider store={store}>\n          <Router>\n            <Switch>\n              <Route path=\"/halls/:id\">\n                <ContextProvider value={Context}>\n                  <Hall />\n                </ContextProvider>\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Router>\n        </StoreProvider>\n      </ThemeProvider>\n    </App>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/enter.339b495d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.2ff80ac8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.1c2b70ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.1a2ceec2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.e59a4594.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.39b87e4e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.4ff4f6c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.cf244f92.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.1a3c06fb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/9.51f8712a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/10.addb6c15.mp3\";","module.exports = __webpack_public_path__ + \"static/media/11.35a178a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/12.dd328baa.mp3\";","module.exports = __webpack_public_path__ + \"static/media/13.8c15668d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/14.c2c551c9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/15.45ca4dca.mp3\";","module.exports = __webpack_public_path__ + \"static/media/16.066aed20.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.c45d7231.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.56025ded.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.c2ecfa7c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.30b56d3b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/5.78fd1661.mp3\";","module.exports = __webpack_public_path__ + \"static/media/6.ca179799.mp3\";","module.exports = __webpack_public_path__ + \"static/media/7.4d512d41.mp3\";","module.exports = __webpack_public_path__ + \"static/media/8.45c653fd.mp3\";"],"sourceRoot":""}